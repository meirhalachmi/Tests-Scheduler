{"version":3,"sources":["utils/utils.js","components/Subjects/Subjects.js","components/ScheduleCalendar/material_title_panel.js","actions/index.js","components/ScheduleCalendar/helpers.js","components/ModalForm.js","components/BlockerForm.js","components/TestForm.js","components/ScheduleCalendar/ScheduleCalendar.js","components/Home/Home.js","components/SetupSession.js","components/Cards/SessionCard.js","components/SelectSession.js","components/SessionHome.js","components/app/App.js","serviceWorker.js","reducers/index.js","configureStore.js","index.js"],"names":["Sleep","milliseconds","Promise","resolve","setTimeout","range","start","end","Array","fill","map","_","idx","Err","_ref","error","react_default","a","createElement","message","DisplayRemoteData","props","_useFetch","useFetch","url","data","utils_Err","preProcess","parserFunction","sortByName","list","sort","b","name","isEmpty","obj","key","hasOwnProperty","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","ColumnContainer","styled","div","_templateObject","SupTitle","_templateObject2","move","source","destination","droppableSource","droppableDestination","sourceClone","from","destClone","_sourceClone$splice","splice","index","removed","Object","slicedToArray","push","result","droppableId","Subjects","context","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","groupToListItem","group","item","id","content","subjects","get","addList","lists","state","concat","titles","setState","removeList","removedList","getList","parseInt","onDragEnd","toConsumableArray","getGroupedSubjectsRequest","Request","process","getSubjectsRequest","handleSubmit","bind","assertThisInitialized","fetch","then","response","json","initialGroupedSubjects","Map","v","value","initialNoGroup","initialGroups","title","_this2","index_es","icon","faTrashAlt","onClick","react_beautiful_dnd_esm","toString","provided","snapshot","ref","innerRef","style","isDraggingOver","background","padding","width","draggableId","assign","draggableProps","dragHandleProps","isDragging","draggableStyle","objectSpread","userSelect","grid","margin","color","placeholder","e","_this3","preventDefault","newGroups","gr","no_pars","shift","par_groups","isValid","forEach","i","alert","msg","no_parallels","parallel_groups","axios","post","history","catch","console","_this4","getColumnContainer","Button_default","Component","connect","session","isFetching","items","sessionId","styles","root","fontFamily","fontWeight","header","backgroundColor","fontSize","MaterialTitlePanel","rootStyle","children","REQUEST","RECEIVE","SCHEDULE","UNSCHEDULE","INIT_SESSION","FetchActionCreator","paramsUrlAddition","arguments","undefined","postprocessorFunction","dispatch","type","toUpperCase","receivedAt","now","receive","fetchSubjects","fetchClasses","fetchBlockers","fetchTests","fetchSessionInfo","fetchScheduledTests","fetchSavedSchedules","fetchSession","resetSchedule","sidebar","sidebarLink","display","textDecoration","divider","height","paddingTop","paddingBottom","Event","event","Fragment","es6","desc","parseDateString","setHours","getTime","ModalForm","_Component","apply","inherits","createClass","Modal_default","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","BlockerForm","numOfInstances","blockerToEdit","startDates","fieldName","blocker","startsWith","ind","replace","wantedDates","Container_default","Form","onSubmit","Row","Col","md","Group","Label","Control","required","maxLength","defaultValue","getCurrentValue","as","multiple","classes","s","min","minDate","max","maxDate","startHour","endHour","es_Button","target","participatingClasses","options","filter","o","selected","participatingSubjects","endDates","startHours","endHours","afterSend","React","startDate","endDate","daysInWeek","0","1","2","3","4","5","TestForm","numOfOptionalTimes","testToEdit","numOfTests","test","controlId","onChange","defaultGap","step","format","entries","entry","requiredkey","label","subject","daysGap","optionalDaysInWeek","optionalStartHours","optionalEndHours","difficulty","localizer","BigCalendar","momentLocalizer","moment","ScheduleCalendar","SidebarContent","arr","criteria","subjectsDiv","testsGroupedBySubject","testsToSchedule","info","reduce","subjectsDict","keys","subjectId","test_div","test_div_ids","numOfOptionalDates","optionalDates","className","howManyLeft","cls","classesDict","selectedTestIndInList","indexOf","selectedTestId","dist_default","disabled","res","days","optionalDays","window","Card_default","Accordion_default","Toggle","Card","eventKey","Collapse","material_title_panel","faSave","prompt","faEraser","faRobot","faPlus","showTestForm","faLock","showBlockerForm","ModalForm_ModalForm","modalFormData","closeModals","components_BlockerForm","components_TestForm","scheduledTests","testEvents","filteredClassOnSchedule","blockerModalShow","testModalShow","customDayPropGetter","endPoint","method","headers","Content-Type","body","JSON","stringify","includes","border","sidebarProps","docked","sidebarClassName","contentId","open","touch","shadow","pullRight","transitions","isBefore","add","calendarsBody","getBigCalendar","react_sidebar_esm","scheduleDifficulty","ButtonToolbar_default","DropdownButton_default","variant","savedSchedules","savedSchedule","daysPassed","date1","date2","date1_ms","date2_ms","difference_ms","Math","abs","floor","daysBetween","dateSaved","Dropdown_default","Item","onSelect","storeid","r","Tabs_default","defaultActiveKey","Tab_default","tests","rtl","testsDict","fetch_delete","blockers","blockersDict","defaultDate","react_big_calendar_esm","selectable","defaultView","views","events","blockerEvents","startAccessor","endAccessor","onSelectEvent","testId","testid","unscheduleTest","onSelectSlot","slotInfo","components","dayPropGetter","testFormProps","blockerFormProps","cur","defineProperty","schedule","alreadyScheduledCount","st","howManyNeeded","unscheduledTestsOption","unscheduledTestsOptions","ar","scheduledTestInfo","scheduledTest","ApiList","react","fallback","utils_DisplayRemoteData","Home","Home_ApiList","SetupSession","sendSession","defaults","sessionName","numOfHours","isZeroHour","handleInputChange","checked","DefaultsForm","Form_default","Col_default","Check","SetupSession_List","sendText","maxInputLength","setParentList","List","text","handleChange","newList","SessionCard","Text","toLocaleDateString","react_router_dom","to","sendSelectSession","SelectSession","sessions","active","sess","SessionCard_SessionCard","SessionHome","warn","components_ScheduleCalendar_ScheduleCalendar","AsyncApp","basename","alignItems","react_router","exact","path","component","AddTests","AddBlockers","SessionSetup","Boolean","location","hostname","match","ReducerCreator","action","lastUpdated","combineReducers","horizon","loggerMiddleware","createLogger","store","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunkMiddleware","configureStore","ReactDOM","render","es","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18cc9db0.chunk.js","sourcesContent":["import {useFetch} from \"react-hooks-fetch\";\nimport React from \"react\";\n\nexport function Sleep(milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nexport function fillArray(value, length) {\n    return Array.from({ length }, () => value);\n}\n\n\nexport function range(start, end) {\n    return Array(end - start + 1).fill().map((_, idx) => start + idx)\n}\n\nconst Err = ({ error }) => <span>Error:{error.message}</span>;\n\nexport const DisplayRemoteData = (props) => {\n    let { error, data } = useFetch(props.url);\n    if (error) return <Err error={error} />;\n    if (!data) return null;\n    if (props.preProcess){\n        data = props.preProcess(data);\n    }\n    return data.map(props.parserFunction)\n};\n\nexport function sortByName(list) {\n    return list.sort((a, b) => (a.name > b.name) ? 1 : -1);\n}\n\nexport function isEmpty(obj) {\n    for(const key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\nexport function formatDate(date) {\n    var d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    let year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n}\n\nexport function daysBetween(date1, date2) {\n\n    // The number of milliseconds in one day\n    var ONE_DAY = 1000 * 60 * 60 * 24;\n\n    // Convert both dates to milliseconds\n    var date1_ms = date1.getTime();\n    var date2_ms = date2.getTime();\n\n    // Calculate the difference in milliseconds\n    var difference_ms = Math.abs(date1_ms - date2_ms);\n\n    // Convert back to days and return\n    return Math.floor(difference_ms/ONE_DAY);\n\n}\n\n/*!\n * Group items from an array together by some criteria or value.\n * (c) 2019 Tom Bremmer (https://tbremer.com/) and Chris Ferdinandi (https://gomakethings.com), MIT License,\n * @param  {Array}           arr      The array to group items from\n * @param  {String|Function} criteria The criteria to group by\n * @return {Object}                   The grouped object\n */\nexport function groupBy(arr, criteria) {\n\treturn arr.reduce(function (obj, item) {\n\n\t\t// Check if the criteria is a function to run on the item or a property of it\n        const key = typeof criteria === 'function' ? criteria(item) : item[criteria];\n\n        // If the key doesn't exist yet, create it\n\t\tif (!obj.hasOwnProperty(key)) {\n\t\t\tobj[key] = [];\n\t\t}\n\n\t\t// Push the value to the object\n\t\tobj[key].push(item);\n\n\t\t// Return the object to the next item in the loop\n\t\treturn obj;\n\n\t}, {});\n}\n","import React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport \"./Subjects.css\";\nimport styled from \"styled-components\";\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios/index';\nimport {fillArray   } from \"../../utils/utils\";\nimport {connect} from \"react-redux\";\n\nconst ColumnContainer = styled.div`\n  margin: 10px;\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  // width: 50%;\n  display: flex;\n  flex-direction: column;\n`;\nconst SupTitle = styled.div`\n  padding: 10px;\n`;\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.push(removed);\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n    color: isDragging ? 'black' : 'white',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 250\n});\n\n\n\n\nclass Subjects extends Component {\n\n    constructor(props: P, context: any) {\n        super(props, context);\n        this.getGroupedSubjectsRequest = new Request(\n            process.env.REACT_APP_API_URL + '/groupedSubjects');\n        this.getSubjectsRequest = new Request(\n            process.env.REACT_APP_API_URL + '/subjects');\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            lists: [[]],\n            titles: ['מקצועות ליבה'],\n        }\n        fetch(this.getGroupedSubjectsRequest)\n            .then(response => response.json())\n            .then(data => {\n                this.initialGroupedSubjects = data;\n            }).then(() => {\n            fetch(this.getSubjectsRequest)\n                .then(response => response.json())\n                .then(data => {\n                    this.subjects = new Map(data.map(v => [v.id, v.name]));\n                }).then(\n                () => {\n                    this.initialNoGroup = this.initialGroupedSubjects['no_group'];\n                    this.initialGroups = this.initialGroupedSubjects['groups'];\n                    // console.log(this.initialGroupedSubjects)\n                    this.setState( {\n                            lists: Array(this.groupToListItem(this.initialNoGroup)).concat(\n                                this.initialGroups.map(group => this.groupToListItem(group))\n                            ),\n                            titles: ['מקצועות ליבה'].concat(fillArray('אשכול מגמות', this.initialGroups.length))\n                        }\n                    )\n                }\n            )\n        })\n    };\n\n    groupToListItem = group => {\n        return group.map((item) => ({id: item, content: this.subjects.get(item)}))\n    }\n\n\n    addList = () => {\n        const lists = this.state.lists.concat([[]]);\n        const titles = this.state.titles.concat('אשכול מגמות');\n        this.setState({\n                lists: lists,\n                titles: titles\n            }\n        );\n        // this.render();\n    };\n\n    removeList = (id) => {\n        const removedList = this.state.lists[id];\n        const lists = Array.from(this.state.lists);\n        const titles = Array.from(this.state.titles);\n\n        lists.splice(id, 1);\n        titles.splice(id, 1);\n\n        lists[0] = lists[0].concat(removedList);\n\n        this.setState({\n                lists: lists,\n                titles: titles\n            }\n        );\n    }\n\n    getList = id => this.state.lists[parseInt(id)];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            // Do nothing\n        } else {\n            const result = move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n            const lists = [...this.state.lists]\n            lists[source.droppableId] = result[source.droppableId]\n            lists[destination.droppableId] = result[destination.droppableId]\n            this.setState({\n                lists: lists\n            });\n        }\n    };\n\n    // Normally you would want to split things out into separate components.\n    getColumnContainer(index, title) {\n        return <ColumnContainer key={index}>\n            <SupTitle>{title} {index > 0 &&<span><FontAwesomeIcon icon={faTrashAlt} onClick={()=>{this.removeList(index)}}/></span>}</SupTitle>\n\n            <Droppable droppableId={index.toString()}>\n                {(provided, snapshot) => (\n                    <div\n                        ref={provided.innerRef}\n                        style={getListStyle(snapshot.isDraggingOver)}>\n                        {this.state.lists[index].map((item, index) => (\n                            <Draggable\n                                key={item.id}\n                                draggableId={item.id}\n                                index={index}>\n                                {(provided, snapshot) => (\n                                    <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        style={getItemStyle(\n                                            snapshot.isDragging,\n                                            provided.draggableProps.style\n                                        )}>\n                                        {item.content}\n                                    </div>\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </ColumnContainer>;\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let newGroups = this.state.lists.map(gr => gr.map(v => v.id));\n        let no_pars = newGroups.shift()\n        let par_groups = newGroups.length === 0 ? [[]] : newGroups;\n\n        let isValid = true;\n        par_groups.forEach((group, i) => {\n            if (group.length === 1){\n                alert('אשכול מגמות לא יכול להכיל רק מקצוע אחד')\n                isValid = false;\n            }\n        })\n        if (isValid){\n            let msg = {\n                no_parallels: [no_pars],\n                parallel_groups: [par_groups],\n            };\n\n            axios.post(process.env.REACT_APP_API_URL + '/groupedSubjects', msg)\n                .then(() => this.props.history.push('/calendar'))\n                .catch(console.error);\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div id='root'>\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        {this.state.titles.map(\n                            (item, i, key) => this.getColumnContainer(i, this.state.titles[i])\n                        )}\n\n                    </DragDropContext>\n                    <ColumnContainer><Button onClick={()=>{this.addList()}}>הוסף אשכול</Button></ColumnContainer>\n                </div>\n                <Button onClick={this.handleSubmit}>\n                    Send\n                </Button>\n            </div>\n        );\n    }\n}\nfunction mapStateToProps(state) {\n    const { subjects, session } = state;\n    const { isFetching, items } = subjects;\n    return {\n        sessionId: session.id,\n        subjects: items,\n        isFetching,\n    }\n}\n\nexport default connect(mapStateToProps)(Subjects);","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst styles = {\n    root: {\n        fontFamily:\n            '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif',\n        fontWeight: 300\n    },\n    header: {\n        backgroundColor: \"#03a9f4\",\n        color: \"white\",\n        padding: \"16px\",\n        fontSize: \"1.5em\"\n    }\n};\n\nconst MaterialTitlePanel = props => {\n    const rootStyle = props.style\n        ? { ...styles.root, ...props.style }\n        : styles.root;\n\n    return (\n        <div style={rootStyle}>\n            <div style={styles.header}>{props.title}</div>\n            {props.children}\n        </div>\n    );\n};\n\nMaterialTitlePanel.propTypes = {\n    style: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    children: PropTypes.object\n};\n\nexport default MaterialTitlePanel;\n","import axios from \"axios\";\nimport {Sleep, sortByName} from \"../utils/utils\";\n\nexport const REQUEST = 'REQUEST';\nexport const RECEIVE = 'RECEIVE';\nexport const SCHEDULE = 'SCHEDULE';\nexport const UNSCHEDULE = 'UNSCHEDULE';\nexport const RESET_SCHEDULE = 'RESET_SCHEDULE';\nexport const INIT_SESSION = 'INIT_SESSION';\n\nfunction FetchActionCreator(name, url) {\n\n    function request() {\n        return {\n            type: REQUEST+ '_' + name.toUpperCase(),\n        }\n    }\n\n    function receive(json, postprocessorFunction) {\n        return {\n            type: RECEIVE + '_' + name.toUpperCase(),\n            items: postprocessorFunction(json),\n            receivedAt: Date.now()\n        }\n    }\n\n    return function (paramsUrlAddition='', postprocessorFunction=(json)=>(json)) {\n        return dispatch => {\n            dispatch(request());\n            return fetch(url + paramsUrlAddition)\n                .then(response => response.json())\n                .then(json => dispatch(receive(json, postprocessorFunction)))\n        }\n    }\n\n}\n\n\nconst fetchSubjects = FetchActionCreator('Subjects', process.env.REACT_APP_API_URL + '/subjects',\n    sortByName)\nconst fetchClasses = FetchActionCreator('Classes', process.env.REACT_APP_API_URL + '/classes')\nconst fetchBlockers = FetchActionCreator('Blockers', process.env.REACT_APP_API_URL + '/blockers')\nconst fetchTests = FetchActionCreator('Tests', process.env.REACT_APP_API_URL + '/tests')\nconst fetchSessionInfo = FetchActionCreator('Session', process.env.REACT_APP_API_URL + '/sessioninfo')\n\n\nexport const fetchScheduledTests = FetchActionCreator('Schedule', process.env.REACT_APP_API_URL + '/currentscheduledtests')\nexport const fetchSavedSchedules = FetchActionCreator('ScheduleStore', process.env.REACT_APP_API_URL + '/schedulerstatestore')\n\nexport function fetchSession() {\n    return dispatch => {\n        dispatch({\n            type: INIT_SESSION,\n        })\n        dispatch(fetchSessionInfo());\n        dispatch(fetchSubjects());\n        dispatch(fetchClasses());\n        dispatch(fetchBlockers());\n        dispatch(fetchTests());\n        dispatch(fetchScheduledTests());\n        dispatch(fetchSavedSchedules());\n\n    }\n\n}\n\n\nexport const scheduleTest = (testId, date) => {\n    // return {\n    //   type: SCHEDULE,\n    //   testId,\n    //   date\n    // }scheduledTests\n    return dispatch => {\n        const msg = {\n            testid: testId.toString(),\n            date: date\n        }\n        return axios.post(process.env.REACT_APP_API_URL + '/scheduletest', msg)\n            .then(\n                dispatch(\n                    {\n                        type: SCHEDULE,\n                        id: testId,\n                        date: date\n                    }\n\n                )\n            )\n            .then(() => {\n                Sleep(1000);\n                return dispatch(fetchScheduledTests())\n            })\n    }\n\n}\n\nexport const unscheduleTest = (testId, date) => {\n    return dispatch => {\n        const msg = {\n            testid: testId.toString(),\n            date: date\n        }\n        return axios.post(process.env.REACT_APP_API_URL + '/unscheduletest', msg)\n            .then(\n                dispatch(\n                    {\n                        type: UNSCHEDULE,\n                        id: testId,\n                        date: date\n                    }\n\n                )\n            )\n            .then(() => {\n                Sleep(1000);\n                return dispatch(fetchScheduledTests())\n            })\n    }\n}\n\n\nexport const resetSchedule = () => {\n    return dispatch => {\n        const msg = {\n        }\n        return axios.post(process.env.REACT_APP_API_URL + '/resetschedule', msg)\n            .then(\n                dispatch(\n                    {\n                        type: UNSCHEDULE,\n                    }\n\n                )\n            )\n            .then(() => {\n                Sleep(1000);\n                return dispatch(fetchScheduledTests())\n            })\n    }\n}\n\n","import React from \"react\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\n\nexport const styles = {\n    sidebar: {\n        width: 300,\n        // marginLeft: '15%',\n        // paddingRight: '16px'\n        // height: \"100%\"\n    },\n    sidebarLink: {\n        display: \"block\",\n        padding: \"16px 0px\",\n        color: \"#757575\",\n        textDecoration: \"none\"\n    },\n    divider: {\n        margin: \"8px 0\",\n        height: 1,\n        backgroundColor: \"#757575\"\n    },\n    content: {\n        padding: \"16px\",\n        paddingTop: \"30px\",\n        paddingBottom: \"30px\",\n        // height: \"70%\",\n        backgroundColor: \"white\",\n        // marginLeft: '15%'\n    }\n};\n\nexport function Event({event}) {\n    const color = event.type === 'blocker' ? 'red' : 'blue';\n    return (\n        <>\n            <ContextMenuTrigger id={event.type + event.id.toString()}>\n                <div style={{backgroundColor: color, fontSize: '15px'}}>\n                    <strong>{event.title}</strong>\n                    {event.desc && ':  ' + event.desc}\n                </div>\n            </ContextMenuTrigger>\n        </>\n    )\n}\n\nexport function parseDateString(date) {\n    let d = new Date(date);\n    d.setHours(0, 0, 0, 0);\n    return d.getTime()\n}","import React, {Component} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport class ModalForm extends Component<{ show: any, onHide: () => any }> {\n    render() {\n        return <Modal\n            size=\"lg\"\n            show={this.props.show}\n            onHide={this.props.onHide}\n            aria-labelledby=\"example-modal-sizes-title-lg\"\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"example-modal-sizes-title-lg\">\n                    {this.props.title}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {this.props.children}\n            </Modal.Body>\n        </Modal>;\n    }\n}","import React from \"react\";\nimport {Button, Col, Form} from 'react-bootstrap';\nimport {formatDate, range} from \"../utils/utils\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\n\nclass BlockerForm extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        const numOfInstances = this.props.blockerToEdit ? this.props.blockerToEdit.startDates.length : 1;\n        this.state = {numOfInstances: numOfInstances}\n\n    }\n\n    getCurrentValue(fieldName){\n        if (this.props.blockerToEdit){\n            const blocker = this.props.blockerToEdit;\n            if (fieldName === 'name') {\n                return blocker['name'];\n            } else if (fieldName === 'participatingClasses') {\n                return blocker['participatingClasses'];\n            } else if (fieldName.startsWith('startDate')){\n                const ind = parseInt(fieldName.replace('startDate', ''));\n                return formatDate(blocker['startDates'][ind]);\n            } else if (fieldName.startsWith('endDate')){\n                const ind = parseInt(fieldName.replace('endDate', ''));\n                return formatDate(blocker['endDates'][ind]);\n            } else if (fieldName.startsWith('startHour')){\n                const ind = parseInt(fieldName.replace('startHour', ''));\n                return blocker['startHour'][ind];\n            } else if (fieldName.startsWith('endHour')){\n                const ind = parseInt(fieldName.replace('endHour', ''));\n                return blocker['endHour'][ind];\n            }\n        } else if (this.props.wantedDates){\n            if (fieldName.startsWith('startDate')) {\n                return this.props.wantedDates.start;\n            } else if (fieldName.startsWith('endDate')) {\n                return this.props.wantedDates.end;\n            }\n        }\n        return [];\n    }\n\n    render() {\n        return (\n            <Container style={{width: \"85%\"}}>\n                {/*<h1>הוספת אילוץ</h1>*/}\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Col md={12}>\n                            <Form.Group>\n                                <Form.Label>שם האילוץ</Form.Label>\n                                <Form.Control required type=\"text\" name=\"name\" maxLength={50}\n                                              placeholder=\"שם האילוץ\" defaultValue={this.getCurrentValue('name')}/>\n\n\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n                    <Form.Row>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>כיתות משתתפות</Form.Label>\n                                <Form.Control required as=\"select\" multiple name=\"participatingClasses\"\n                                              defaultValue={this.getCurrentValue('participatingClasses')}>\n                                    {this.props.classes.map((s) => (\n                                        <option key={s.id} value={s.id}>{s.name}</option>\n                                    ))}\n\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>מקצועות משתתפים</Form.Label>\n                                <Form.Control required as=\"select\" multiple name=\"participatingSubjects\"\n                                              defaultValue={this.getCurrentValue('participatingSubjects')}>\n                                    {this.props.subjects.map((s) => (\n                                        <option key={s.id} value={s.id}>{s.name}</option>\n                                    ))}\n\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n\n                    {range(0, this.state.numOfInstances-1).map(i => {\n                        return (\n                            <Form.Row id={i}>\n                                <Col md={4}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>תאריך התחלה</Form.Label>}\n                                        <Form.Control required type=\"date\" name={\"startDate\" + i.toString()}\n                                                      min={this.props.minDate} max={this.props.maxDate}\n                                                      defaultValue={this.getCurrentValue(\"startDate\" + i.toString())}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col md={4}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>תאריך סיום</Form.Label>}\n                                        <Form.Control required type=\"date\" name={\"endDate\" + i.toString()}\n                                                      min={this.props.minDate} max={this.props.maxDate}\n                                                      defaultValue={this.getCurrentValue(\"endDate\" + i.toString())}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col md={2}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>שעת התחלה</Form.Label>}\n                                        <Form.Control required key={i} type=\"number\" name={\"startHour\" + i.toString()}\n                                                      min={this.props.session.startHour} max={this.props.session.endHour}\n                                                      defaultValue={\n                                                          this.props.blockerToEdit ?\n                                                              this.getCurrentValue(\"startHour\" + i.toString()) :\n                                                              this.props.session.startHour\n                                                      }\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col md={2}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>שעת סיום</Form.Label>}\n                                        <Form.Control required key={i} type=\"number\" name={\"endHour\" + i.toString()}\n                                                      min={this.props.startHour} max={this.props.endHour}\n                                                      defaultValue={\n                                                          this.props.blockerToEdit ?\n                                                              this.getCurrentValue(\"endHour\" + i.toString()) :\n                                                              this.props.session.endHour\n                                                      }\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            </Form.Row>\n                        )\n                    })}\n\n\n                    <Form.Row>\n                        <Col md={3}>\n                            <Button onClick={(event) => {\n                                this.setState({numOfInstances: this.state.numOfInstances + 1});\n                            }}>הוסף מועד</Button>\n                        </Col>\n                        <Col md = {3}>\n                            {this.state.numOfInstances > 1 &&\n                            <Button onClick={(event) => {\n                                this.setState({numOfInstances: this.state.numOfInstances - 1})\n                            }}>מחק מועד</Button>}\n                        </Col>\n                    </Form.Row>\n\n\n\n                    <Form.Row>\n                        <Col md={3}>\n                            <Button type=\"Submit\">{this.props.blockerToEdit ? \"עדכן אילוץ\" : \"הוסף אילוץ\"}</Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </Container>\n        )\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        const msg = {\n            session: this.props.session.id,\n            name: e.target.name.value,\n            participatingClasses:  [[...e.target.participatingClasses.options].filter(o => o.selected).map(o => o.value)],\n            participatingSubjects:  [[...e.target.participatingSubjects.options].filter(o => o.selected).map(o => o.value)],\n            startDates: [range(0, this.state.numOfInstances-1)\n                .map( i => e.target['startDate' + i].value)],\n            endDates: [range(0, this.state.numOfInstances-1)\n                .map( i => e.target['endDate' + i].value)],\n            startHours: [range(0, this.state.numOfInstances-1)\n                .map( i => e.target['startHour' + i].value)],\n            endHours: [range(0, this.state.numOfInstances-1)\n                .map( i => e.target['endHour' + i].value)],\n\n        };\n        if (this.props.blockerToEdit){\n            msg['id'] = this.props.blockerToEdit.id;\n        }\n        axios.post(process.env.REACT_APP_API_URL + '/blockers', msg)\n            .catch(function (error) {\n                console.error(error);\n                alert(error);\n            })\n            .then(() => {\n                if (this.props.afterSend){\n                    this.props.afterSend()\n                }\n\n            })\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    session: state.session.items,\n    subjects : state.subjects.items,\n    classes : state.classes.items,\n\n    minDate: formatDate(state.session.items.startDate),\n    maxDate: formatDate(state.session.items.endDate),\n\n})\nexport default connect(mapStateToProps)(BlockerForm);","import React from \"react\";\nimport {Button, Col, Form} from 'react-bootstrap';\nimport {formatDate, range} from \"../utils/utils\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\nconst daysInWeek = {\n    0: \"ראשון\",\n    1: \"שני\",\n    2: \"שלישי\",\n    3: \"רביעי\",\n    4: \"חמישי\",\n    5: \"שישי\"\n}\n\nclass TestForm extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        const numOfOptionalTimes = this.props.testToEdit ? this.props.testToEdit['optionalDaysInWeek'].length : 1;\n        const numOfTests = this.props.testToEdit ? this.props.testToEdit['numOfTests'] : 1;\n        this.state = {numOfOptionalTimes: numOfOptionalTimes, numOfTests: numOfTests}\n    }\n\n    /*\ndaysGap: 5\ndifficulty: 5\nid: 28\nlabel: null\nmaxDate: \"2019-08-31\"\nminDate: \"2019-08-01\"\nname: \"היסטוריה\"\nnumOfTests: 2\noptionalDaysInWeek: (2) [0, 3]\noptionalEndHours: (2) [9, 9]\noptionalStartHours: (2) [1, 1]\nparticipatingClasses: [21]\nsubject: 29\n\n    */\n\n    getCurrentValue(fieldName){\n        if (this.props.testToEdit){\n            const test = this.props.testToEdit;\n            if (fieldName.startsWith('optionalDaysInWeek')) {\n                const ind = parseInt(fieldName.replace('optionalDaysInWeek', ''));\n                return test['optionalDaysInWeek'][ind];\n            } else if (fieldName.startsWith('optionalEndHours')) {\n                const ind = parseInt(fieldName.replace('optionalEndHours', ''));\n                return test['optionalEndHours'][ind];\n            } else if (fieldName.startsWith('optionalStartHours')) {\n                const ind = parseInt(fieldName.replace('optionalStartHours', ''));\n                return test['optionalStartHours'][ind];\n            } else {\n                return test[fieldName]\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Container style={{width: \"85%\"}}>\n                {/*<h1>הוספת מבחן</h1>*/}\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Col md={6}>\n                            <Form.Group controlId=\"formGridSubject\">\n                                <Form.Label>נושא המבחן</Form.Label>\n                                <Form.Control required as=\"select\" name=\"subject\" defaultValue={this.getCurrentValue('subject')}>\n                                    {this.props.subjects.map((s) => (\n                                        <option key={s.id} value={s.id}>{s.name}</option>\n                                    ))}\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"label\">\n                                <Form.Label>תיאור (לא חובה)</Form.Label>\n                                <Form.Control type=\"text\" name=\"label\" defaultValue={this.getCurrentValue('label')}\n                                              placeholder=\"לדוגמא- בגרות פנימית / מתכונת\" maxLength={20}/>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group controlId=\"formGridClasses\" style={{height: \"100%\"}}>\n                                <Form.Label>כיתות משתתפות</Form.Label>\n                                <Form.Control required as=\"select\" multiple name=\"participatingClasses\"\n                                              style={{height: \"80%\"}}\n                                              defaultValue={this.getCurrentValue('participatingClasses')}\n                                >\n                                    {this.props.classes.map((s) => (\n                                        <option key={s.id} value={s.id}>{s.name}</option>\n                                    ))}\n\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>מספר מבחנים</Form.Label>\n                                <Form.Control required as=\"select\" name=\"numOfTests\" onChange={(e) => {\n                                    this.setState({numOfTests: e.target.value})\n                                }} defaultValue={this.getCurrentValue('numOfTests')}>\n                                    <option value={1}>1</option>\n                                    <option value={2}>2</option>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        {this.state.numOfTests > 1 && (\n                            <Col md={6}>\n                                <Form.Group>\n                                    <Form.Label>מרווח מינימלי בין מבחנים</Form.Label>\n                                    <Form.Control required type=\"number\" name=\"daysGap\"\n                                                  defaultValue={\n                                                      this.props.testToEdit ?\n                                                          this.getCurrentValue('daysGap') :\n                                                          this.props.session.defaultGap\n                                                  } step={1}\n                                                  min={2} max={365} //TODO: Change max to the number of days in the interval\n                                    />\n                                </Form.Group>\n                            </Col>\n                        )}\n\n                    </Form.Row>\n                    <Form.Row>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>תאריך מינימלי</Form.Label>\n                                <Form.Control required type=\"date\" format=\"DD-MM-YYYY\" name=\"minDate\"\n                                              min={this.props.minDate} max={this.props.maxDate}\n                                              defaultValue={\n                                                  this.props.testToEdit ?\n                                                      this.getCurrentValue('minDate') :\n                                                      this.props.minDate\n                                              }/>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>תאריך מקסימלי</Form.Label>\n                                <Form.Control required type=\"date\" format=\"DD-MM-YYYY\" name=\"maxDate\"\n                                              min={this.props.minDate} max={this.props.maxDate}\n                                              defaultValue={\n                                                  this.props.testToEdit ?\n                                                      this.getCurrentValue('maxDate') :\n                                                      this.props.maxDate\n\n                                              }/>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n\n                    {range(0, this.state.numOfOptionalTimes-1).map(i => {\n                        return (\n                            <Form.Row>\n                                <Col md={4}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>יום</Form.Label>}\n                                        <Form.Control required key={i} as=\"select\"\n                                                      name={\"optionalDaysInWeek\" + i.toString()}\n                                                      defaultValue={this.getCurrentValue(\"optionalDaysInWeek\" + i.toString())}\n                                        >\n                                            {Object.entries(daysInWeek).map(entry => (\n                                                <option value={entry[0]} key={entry[0]}>{entry[1]}</option>\n                                            ))}\n                                        </Form.Control>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={4}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>שעת התחלה</Form.Label>}\n                                        <Form.Control required key={i} type=\"number\" name={\"optionalStartHours\" + i.toString()}\n                                                      defaultValue={\n                                                          this.props.testToEdit ?\n                                                              this.getCurrentValue(\"optionalStartHours\" + i.toString()) :\n                                                              this.props.session.startHour\n                                                      } step={1}\n                                                      min={this.props.session.startHour} max={this.props.session.endHour}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col md={4}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>שעת סיום</Form.Label>}\n                                        <Form.Control requiredkey={i} type=\"number\" name={\"optionalEndHours\" + i.toString()}\n                                                      step={1} defaultValue={\n                                                          this.props.testToEdit ?\n                                                              this.getCurrentValue(\"optionalEndHours\" + i.toString()) :\n                                                              this.props.session.endHour\n                                                      }\n                                                      min={this.props.session.startHour} max={this.props.session.endHour} //TODO: Change max to the number of days in the interval\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            </Form.Row>\n                        )\n                    })}\n\n                    <Form.Row>\n                        <Col md={3}>\n                            <Button onClick={(event) => {\n                                this.setState({numOfOptionalTimes: this.state.numOfOptionalTimes + 1});\n                            }}>הוסף מועד</Button>\n                        </Col>\n                        <Col md = {3}>\n                            {this.state.numOfOptionalTimes > 1 &&\n                            <Button onClick={(event) => {\n                                this.setState({numOfOptionalTimes: this.state.numOfOptionalTimes - 1})\n                            }}>מחק מועד</Button>}\n                        </Col>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Col md={3}>\n                            <Button type=\"Submit\">{this.props.testToEdit ? \"עדכן מבחן\" : \"הוסף מבחן\"}</Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </Container>\n        )\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        const msg = {\n            label: e.target.label.value,\n            session: this.props.session.id,\n            subject: e.target.subject.value,\n            participatingClasses:  [[...e.target.participatingClasses.options].filter(o => o.selected).map(o => o.value)],\n            numOfTests: e.target.numOfTests.value,\n            daysGap: this.state.numOfTests > 1 ? e.target.daysGap.value : 0,\n            minDate: e.target.minDate.value,\n            maxDate: e.target.maxDate.value,\n            optionalDaysInWeek: [range(0, this.state.numOfOptionalTimes-1)\n                .map( i => e.target['optionalDaysInWeek' + i].value)],\n            optionalStartHours: [range(0, this.state.numOfOptionalTimes-1)\n                .map( i => e.target['optionalStartHours' + i].value)],\n            optionalEndHours: [range(0, this.state.numOfOptionalTimes-1)\n                .map( i => e.target['optionalEndHours' + i].value)],\n            difficulty: 5, //TODO\n        }\n\n        if (this.props.testToEdit){\n            msg['id'] = this.props.testToEdit.id;\n        }\n\n        axios.post(process.env.REACT_APP_API_URL + '/tests', msg)\n            .catch(function (error) {\n                console.error(error);\n                alert(error);\n            })\n            .then(() => {\n                if (this.props.afterSend){\n                    this.props.afterSend()\n                }\n\n            })\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    session : state.session.items,\n    subjects : state.subjects.items,\n    classes : state.classes.items,\n    minDate: formatDate(state.session.items.startDate),\n    maxDate: formatDate(state.session.items.endDate),\n})\nexport default connect(mapStateToProps)(TestForm);\n","import React, {Component} from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"./ScheduleCalendar.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./react-contextmenu.css\"\nimport Sidebar from \"react-sidebar\";\nimport axios from \"axios\";\n\nimport {connect} from \"react-redux\";\nimport List from \"react-list-select\";\nimport MaterialTitlePanel from \"./material_title_panel\";\nimport {\n    fetchSavedSchedules,\n    fetchScheduledTests,\n    fetchSession,\n    resetSchedule,\n    scheduleTest,\n    unscheduleTest\n} from \"../../actions\";\nimport {daysBetween, formatDate, groupBy, isEmpty, Sleep} from \"../../utils/utils\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEraser, faLock, faPlus, faRobot, faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport {Event, parseDateString, styles} from \"./helpers\";\nimport {ModalForm} from \"../ModalForm\";\nimport AddBlockers from \"../BlockerForm\";\nimport AddTests from \"../TestForm\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport {ContextMenu, ContextMenuTrigger, MenuItem} from \"react-contextmenu\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\n\nconst localizer = BigCalendar.momentLocalizer(moment);\n\n\n\nclass ScheduleCalendar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.props.dispatch(fetchSession());\n\n        this.state = {\n            optionalDays: [],\n            selectedTestId: null,\n            scheduledTests: [],\n            testEvents: [],\n            filteredClassOnSchedule: null,\n            modalFormData: {\n                type: null,\n                props: null\n            },\n            blockerModalShow: false, testModalShow: false\n        };\n        this.customDayPropGetter = this.customDayPropGetter.bind(this)\n        this.SidebarContent = this.SidebarContent.bind(this)\n        this.closeModals = this.closeModals.bind(this)\n\n    }\n\n\n    closeModals() {\n        this.setState({blockerModalShow: false, testModalShow: false})\n        this.setState({modalFormData: {\n                type: null,\n                props: null\n            }})\n        this.props.dispatch(fetchSession())\n    }\n\n    fetch_delete(endPoint, id) {\n        fetch(process.env.REACT_APP_API_URL + endPoint, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({id: id})\n        })\n            .catch(console.error)\n            .then(() => Sleep(300))\n            .then(() => (this.props.dispatch(fetchSession())));\n    }\n\n    SidebarContent = props => {\n        const style = props.style\n            ? { ...styles.sidebar, ...props.style }\n            : styles.sidebar;\n\n        let subjectsDiv = []\n\n\n        const testsGroupedBySubject = groupBy(props.testsToSchedule, info => info.test.subject);\n        const subjectIdsSortedList = isEmpty(this.props.subjectsDict) ? [] : Object.keys(testsGroupedBySubject).sort(\n            (a, b) => this.props.subjectsDict[a].name > this.props.subjectsDict[b].name ? 1 : -1\n        );\n        subjectIdsSortedList.forEach(subjectId => {\n            let test_div = [];\n            let test_div_ids = [];\n            const testsOfSubject = testsGroupedBySubject[subjectId];\n\n            testsOfSubject.forEach(info => {\n                const test = info.test;\n                test_div_ids.push(test.id);\n                const numOfOptionalDates = info.optionalDates.length;\n                const color = numOfOptionalDates > 0 ? 'blue' : 'red';\n                test_div.push(\n                    (<div className=\"test\">\n                        <ContextMenuTrigger id={\"test\" + test.id.toString()}>\n                            <div className=\"name\">\n                                <span style={{color: color}}>[{numOfOptionalDates}]</span>\n                                {test.name} - ({info.howManyLeft} מתוך {test.numOfTests})\n                            </div>\n                            <div className=\"classes\">\n                                {test.participatingClasses.map(cls => {\n                                    return props.classesDict[cls] ? props.classesDict[cls].name : '';\n                                }).join(', ')}\n                            </div>\n                        </ContextMenuTrigger>\n                    </div>)\n                )\n            });\n\n            let selectedTestIndInList = test_div_ids.indexOf(this.state.selectedTestId)\n            let list = (\n                <List\n                    items={test_div}\n                    selected={[selectedTestIndInList]}\n                    disabled={[]}\n                    multiple={false}\n                    onChange={(selected) => {\n                        this.setState({\n                            selectedTestId: test_div_ids[selected],\n                        })\n                        fetch(process.env.REACT_APP_API_URL + '/finddate?' +\n                            'testid='+test_div_ids[selected].toString()\n                        )\n                            .then(response => response.json())\n                            .then(res => {\n                                const days = res.map(date => {\n                                    return parseDateString(date);\n                                });\n                                this.setState({\n                                    optionalDays: days\n                                });\n                                if (res.length === 0){\n                                    window.alert('לא נותרו תאריכים אפשריים למבחן זה')\n                                }\n\n                            })\n                            .catch(console.error)\n                    }}\n                />)\n\n            subjectsDiv.push(\n                <Card>\n                    <Accordion.Toggle as={Card.Header} eventKey={subjectId}>\n                        {this.props.subjectsDict[subjectId] ? this.props.subjectsDict[subjectId].name : ''}\n                    </Accordion.Toggle>\n                    <Accordion.Collapse eventKey={subjectId}>\n                        <Card.Body style={{padding: 0}}>{list}</Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            )\n        })\n\n        return (\n            <MaterialTitlePanel title={\n                <>\n                    <div>\n                    <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faSave} onClick={() => {\n                            const name = prompt('בחר שם:')\n                            if (name.length > 0){\n                                axios.post(\n                                    process.env.REACT_APP_API_URL + '/schedulerstatestore',\n                                    {name}\n                                )\n                                    .then(() => Sleep(500))\n                                    .then(this.props.dispatch(fetchSavedSchedules()))\n                                    .catch(console.error)\n                            }\n                        }}/>\n                    </span>\n                        <span style={{margin: '15px'}}><FontAwesomeIcon icon={faEraser} onClick={()=>{this.props.dispatch(resetSchedule())}}/></span>\n                        <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faRobot} onClick={()=>{\n                            // const interval = setInterval(() => this.props.dispatch(fetchScheduledTests()), 300);\n                            fetch(process.env.REACT_APP_API_URL + '/runscheduler')\n                                .then(() => {\n                                    Sleep(300);\n                                    this.props.dispatch(fetchScheduledTests())\n                                })\n                                .catch(console.error)\n                        }}/>\n                    </span>\n                        <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faPlus} onClick={() => this.showTestForm()}/>\n                    </span>\n                        <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faLock} onClick={() => this.showBlockerForm()}/>\n                    </span>\n                    </div>\n                </>\n\n            } style={style}>\n                <ModalForm title=\"הוסף אילוץ\"\n                           show={this.state.modalFormData.type === \"blocker\"}\n                           onHide={this.closeModals}>\n                    <AddBlockers afterSend={this.closeModals} {...this.state.modalFormData.props}/>\n                </ModalForm>\n                <ModalForm title=\"הוסף מבחן\"\n                           show={this.state.modalFormData.type === \"test\"}\n                           onHide={this.closeModals}>\n                    <AddTests afterSend={this.closeModals} {...this.state.modalFormData.props}/>\n                </ModalForm>\n\n\n                <div>\n                    <Accordion>\n                        {subjectsDiv}\n                    </Accordion>\n\n                </div>\n            </MaterialTitlePanel>\n        );\n    };\n\n    customDayPropGetter(date) {\n        if (this.state.optionalDays.includes(date.getTime())){\n            return {\n                className: 'special-day',\n                style: {\n                    border: 'solid 3px #afa',\n                },\n            }\n\n        }\n        else return {}\n    }\n\n\n\n    render() {\n        const sidebar = <this.SidebarContent testsToSchedule={this.props.testsToSchedule} classesDict={this.props.classesDict}/>;\n        const sidebarProps = {\n            sidebar,\n            docked: true,\n            sidebarClassName: \"custom-sidebar-class\",\n            contentId: \"custom-sidebar-content-id\",\n            open: true,\n            touch: true,\n            shadow: false,\n            pullRight: true,\n            transitions: true,\n        };\n        const startDate = moment(this.props.session.startDate);\n        const endDate = moment(this.props.session.endDate);\n\n        const result = [];\n\n        if (endDate.isBefore(startDate)) {\n            throw \"End date must be greater than start date.\"\n        }\n\n        while (startDate.isBefore(endDate)) {\n            result.push(startDate.format(\"YYYY-MM-01\"));\n            startDate.add(1, 'month');\n        }\n        // console.log(result)\n        const calendarsBody = result.map(date => (\n            <div style={styles.content}>\n                {this.getBigCalendar(new Date(date))}\n            </div>\n        ));\n        return (\n            <>\n                <Sidebar {...sidebarProps} styles={{root: {margin: '0 15px'}}} >\n                    <MaterialTitlePanel title={\n                        <div>\n                            <span>רמת קושי: {this.props.scheduleDifficulty}</span>\n                            <ButtonToolbar>\n                                <DropdownButton id=\"dropdown-basic-button\"\n                                                variant=\"secondary\" title=\"עבור ללוח שמור\">\n                                    {this.props.savedSchedules.map(savedSchedule => {\n                                        const daysPassed = daysBetween(new Date(), new Date(savedSchedule.dateSaved));\n                                        return (\n                                            <Dropdown.Item onSelect={() => (\n                                                this.props.dispatch(\n                                                    fetchScheduledTests('?storeid=' + savedSchedule.storeid)\n                                                )\n                                            )}>{savedSchedule.name + \" - \" }\n                                                <em>{\"נשמר לפני \" + `${daysPassed}` + ' ימים'}</em>\n                                            </Dropdown.Item>\n                                        );\n                                    })}\n                                </DropdownButton>\n                                <Button onClick={() => {\n                                    fetch(process.env.REACT_APP_API_URL + '/debug').then(r =>\n                                        this.props.dispatch(fetchScheduledTests()))\n                                }}>שפר שיבוצים</Button>\n                                <Button onClick={() => {\n                                    this.props.history.push(\"/selectsession\")\n                                }}>בחר לוח שנה אחר</Button>\n\n                            </ButtonToolbar>\n                        </div>\n                    }>\n                        <Tabs defaultActiveKey=\"all\" id=\"classesFilterTabs\" onSelect={key => {\n                            if (key === \"all\"){\n                                this.setState({filteredClassOnSchedule: null})\n                            } else {\n                                this.setState({filteredClassOnSchedule: parseInt(key)})\n                            }\n                        }}>\n                            <Tab eventKey=\"all\" title=\"כל הכיתות\"/>\n                            {this.props.classes.map(cls => {\n                                return (\n                                    <Tab eventKey={cls.id} title={cls.name}/>\n                                );\n                            })}\n                        </Tabs>\n                        {calendarsBody}\n                    </MaterialTitlePanel>\n\n                </Sidebar>\n                {\n                    this.props.tests.filter(test => test.id).map(test => (\n                        <ContextMenu id={\"test\" + test.id.toString()} rtl>\n                            <MenuItem onClick={() => this.showTestForm({\n                                testToEdit: this.props.testsDict[test.id]\n                            })}>\n                                <div>ערוך</div>\n                            </MenuItem>\n                            {/*<MenuItem onClick={console.log}>*/}\n                            {/*    נעל*/}\n                            {/*</MenuItem>*/}\n                            <MenuItem onClick={() => this.fetch_delete('/tests', test.id)}>\n                                מחק\n                            </MenuItem>\n                            {/*<MenuItem divider />*/}\n                        </ContextMenu>\n                    ))}\n                {\n                    this.props.blockers.map(blocker => (\n                        <ContextMenu id={\"blocker\" + blocker.id.toString()} rtl>\n                            <MenuItem onClick={() => this.showBlockerForm({\n                                blockerToEdit: this.props.blockersDict[blocker.id]\n                            })}>\n                                <div>ערוך</div>\n                            </MenuItem>\n                            <MenuItem onClick={() => this.fetch_delete('/blockers', blocker.id)}>\n                                מחק\n                            </MenuItem>\n                            {/*<MenuItem divider />*/}\n                        </ContextMenu>\n                    ))\n                }\n            </>\n        );\n    }\n\n    getBigCalendar(defaultDate) {\n        return <BigCalendar\n            selectable\n            localizer={localizer}\n            defaultDate={defaultDate}\n            defaultView=\"month\"\n            views={{month: true}}\n            events={[\n                ...this.props.blockerEvents.filter(\n                    e => this.state.filteredClassOnSchedule === null ||\n                        e.blocker.participatingClasses.includes(this.state.filteredClassOnSchedule)\n                ),\n                ...this.props.testEvents.filter(\n                    e => this.state.filteredClassOnSchedule === null ||\n                        e.test.participatingClasses.includes(this.state.filteredClassOnSchedule)\n                )]}\n            style={{height: \"650px\"}}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            onSelectEvent={(event, e) => {\n                if (event.type === 'test') {\n                    let date = event.start;\n                    date.setHours(0, 0, 0, 0);\n                    this.props.dispatch(unscheduleTest(event.id, date))\n                    this.setState({\n                        selectedTestId: null,\n                        optionalDays: []\n                    })\n                }\n            }}\n            onSelectSlot={(slotInfo) => {\n                if (this.state.selectedTestId !== null){\n                    const isAnOption = this.state.optionalDays.includes(parseDateString(slotInfo['start']));\n                    if (isAnOption) {\n                        this.props.dispatch(scheduleTest(this.state.selectedTestId, slotInfo.start))\n\n                        this.setState({\n                            selectedTestId: null,\n                            optionalDays: []\n                        })\n\n                    }\n                }\n                else {\n                    this.showBlockerForm({\n                        wantedDates: {\n                            start: formatDate(slotInfo.start),\n                            end: formatDate(slotInfo.end)\n                        }\n                    })\n                }\n            }}\n            components={{\n                event: Event\n            }}\n            dayPropGetter={this.customDayPropGetter}\n            rtl={true}\n\n        />;\n    }\n\n    showTestForm(testFormProps = null) {\n        this.setState({modalFormData: {\n                type: 'test',\n                props: testFormProps\n            }})\n    }\n\n    showBlockerForm(blockerFormProps = null) {\n        this.setState({modalFormData: {\n                type: 'blocker',\n                props: blockerFormProps\n            }})\n    }\n}\n\nconst mapStateToProps = (state) => {\n    let classesDict = state.classes.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    let testsDict = state.tests.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    let blockersDict = state.blockers.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    let subjectsDict = state.subjects.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    return ({\n        session: state.session.items,\n        subjects: state.subjects.items,\n        classes: state.classes.items,\n        blockers: state.blockers.items,\n        tests: state.tests.items,\n        classesDict,\n        testsDict,\n        blockersDict,\n        subjectsDict,\n        scheduleDifficulty: state.schedule.difficulty,\n        scheduledTests: state.schedule.scheduledTests,\n        savedSchedules: state.savedSchedules.items,\n        testsToSchedule: state.tests.items.map(\n            test => {\n                const alreadyScheduledCount = state.schedule.scheduledTests.filter(st => st.id === test.id).length;\n                const howManyNeeded = test.numOfTests;\n                if (howManyNeeded > alreadyScheduledCount){\n\n                    let unscheduledTestsOption = state.schedule.unscheduledTestsOptions[test.id];\n                    unscheduledTestsOption = unscheduledTestsOption ? unscheduledTestsOption : [];\n                    return {\n                        test: test,\n                        howManyLeft: howManyNeeded - alreadyScheduledCount,\n                        optionalDates: unscheduledTestsOption.map(parseDateString)\n                    }\n                }\n                else {\n                    return null;\n                }\n            }\n        ).filter(i => i != null),\n        blockerEvents:\n            state.blockers.items\n            // .filter(blocker => )\n                .reduce((ar, blocker) => {\n                    ar = [...ar,\n                        ...blocker.startDates.map((_, i) => ({\n                            title: blocker.name,\n                            start: new Date(blocker.startDates[i]),\n                            end: new Date(blocker.endDates[i]),\n                            type: 'blocker',\n                            id: blocker.id,\n                            blocker: blocker\n                        }))\n                    ];\n                    return ar;\n                }, []),\n        testEvents:\n            state.schedule.scheduledTests\n                .filter(info => testsDict[info.id])\n                .map(scheduledTestInfo => {\n                    const id = scheduledTestInfo.id;\n                    const date = scheduledTestInfo.date;\n                    if (isEmpty(testsDict)){\n                        return []\n                    }\n                    const scheduledTest = testsDict[id];\n                    const testName = scheduledTest ? scheduledTest.name : '';\n                    return {\n                        title: testName + ' (' + scheduledTest.participatingClasses.map(cls => {\n                            return classesDict[cls] ? classesDict[cls].name : '';\n                        }).join(', ') + ')',\n                        start: new Date(date),\n                        end: new Date(date),\n                        type: 'test',\n                        id: id,\n                        test: scheduledTest\n                    }\n                })\n    });\n}\n\nexport default connect(mapStateToProps)(ScheduleCalendar);","import React, {Component, Suspense} from \"react\";\nimport {DisplayRemoteData, sortByName} from \"../../utils/utils\";\n\nclass ApiList extends Component<{ parserFunction: (s?: any) => any }> {\n    render() {\n        return <div>\n            <h1>{this.props.name}</h1>\n            <ul>\n                <Suspense fallback={<li></li>}>\n                    <DisplayRemoteData\n                        url={this.props.url}\n                        preProcess={sortByName}\n                        parserFunction={(s) => (\n                            <div>\n                                <li>{s.name}</li>\n\n                                <ul>\n                                    {Object.entries(s).map(i => (\n                                        i[0] !== \"name\" && <li>{i[0]} : {i[1]}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                        )}/>\n                </Suspense>\n            </ul>\n        </div>;\n    }\n}\n\nexport default function Home() {\n    return (\n        <div>\n            <ApiList name=\"סשנים\" url={process.env.REACT_APP_API_URL + \"/sessionslist\"}/>\n        </div>\n    )\n}","import React from \"react\";\nimport axios from 'axios/index';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { connect } from 'react-redux'\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\n// import Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport {fetchSession} from \"../actions\";\n\nclass SetupSession extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            subjects: ['קוסמות', 'שיקויים'], classes: ['א1', 'א2'],\n            defaults: {\n                sessionName: '',\n                minDate: '2019-01-01', maxDate: '2019-05-01', daysGap: 30, numOfHours: 1, isZeroHour: false\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            defaults: {...this.state.defaults, [name]: value}\n        });\n    }\n\n    sendSession = (e) => {\n        e.preventDefault();\n        const msg = {\n            subjects: [this.state.subjects],\n            classes: [this.state.classes],\n            ...this.state.defaults\n        }\n        axios.post(process.env.REACT_APP_API_URL + '/initsession', msg)\n            .then(res => res.data)\n            .then(res => this.props.dispatch(fetchSession(res.session)))\n            .then(() => this.props.history.push('/subjects'))\n            .catch(console.error);\n    }\n\n\n    render(){\n        const DefaultsForm = <Form>\n            <Form.Row>\n                <Col md={12}>\n                    <Form.Group>\n                        <Form.Label>כינוי</Form.Label>\n                        <Form.Control type=\"text\" required\n                                      value={this.state.sessionName} name=\"sessionName\"\n                                      onChange={this.handleInputChange}\n                                      maxLength={100}\n                        />\n                    </Form.Group>\n                </Col>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Label>תאריך התחלה</Form.Label>\n                        <Form.Control required type=\"date\"\n                                      value={this.state.defaults.minDate} name=\"minDate\"\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Label>תאריך סיום</Form.Label>\n                        <Form.Control required type=\"date\" value={this.state.defaults.maxDate} name=\"maxDate\"\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n            </Form.Row>\n            <Form.Row>\n                <Col md={6}>\n                    <Form.Group >\n                        <Form.Label>מרווח מינימלי בין מבחנים באותו המקצוע</Form.Label>\n                        <Form.Control required type=\"number\" name=\"daysGap\" value={this.state.defaults.daysGap}\n                                      step={1}\n                                      min={2} max={365} //TODO: Change max to the number of days in the interval\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n            </Form.Row>\n            <Form.Row>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Label>מספר שעות ביום</Form.Label>\n                        <Form.Control required type=\"number\" name=\"numOfHours\"\n                                      value={this.state.defaults.numOfHours} min={1}\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n            </Form.Row>\n            <Form.Row>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Check name=\"isZeroHour\" type=\"checkbox\" checked={this.state.defaults.isZeroHour}\n                                    label=\"יש שעת אפס\"\n                                    onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n\n\n            </Form.Row>\n        </Form>;\n        return(\n            <Container style={{width: \"70%\"}}>\n                <h1>הגדרות</h1>\n                <Card>\n                    <h2>הגדרות כלליות</h2>\n                    <Card.Body>\n                        {DefaultsForm}\n                    </Card.Body>\n                </Card>\n                <Card>\n                    <h2>כיתות</h2>\n                    <Card.Body>\n                        <List title=\"כיתות\" sendText=\"הוסף כיתה\" maxInputLength={5}\n                              setParentList={list => this.setState({classes: list})}/>\n                    </Card.Body>\n                </Card>\n                <Card>\n                    <h2>מקצועות</h2>\n                    <Card.Body>\n                        <List title=\"מקצועות\" sendText=\"הוסף מקצוע\" maxInputLength={20}\n                              setParentList={list => this.setState({subjects: list})}/>\n                    </Card.Body>\n                </Card>\n                <Button onClick={this.sendSession}>שמור והמשך להגדרת אשכלות</Button>\n\n\n            </Container>\n        )\n    }\n}\n\nclass List extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {text: '', list:[]};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        // this.props.dispatch(fetchSubjects);\n    }\n\n\n    render() {\n        return (\n            <div>\n                {/*<h2>{this.props.title}</h2>*/}\n                <ul>\n                    {this.state.list.map((item, idx) => {\n                        return <li key={`item-${idx}`}>{item}</li>\n                    })}\n                </ul>\n                <form>\n                    <input\n                        maxLength={this.props.maxInputLength ? this.props.maxInputLength : 100}\n                        id=\"new-todo\"\n                        onChange={this.handleChange}\n                        value={this.state.text}\n                    />\n                    <Button type=\"submit\" onClick={this.handleSubmit}>\n                        {this.props.sendText}\n                    </Button>\n                </form>\n            </div>\n        )\n    }\n\n    handleChange(e) {\n        this.setState({ text: e.target.value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        if (!this.state.text.length) {\n            return;\n        }\n        const newList = [...this.state.list, this.state.text]\n        this.setState({list: newList})\n        this.props.setParentList(newList)\n        this.setState(() => ({\n            text: ''\n        }));\n\n\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    // subjects : state.subjects.items\n})\n\nexport default connect(mapStateToProps)(SetupSession);","import React, {Component} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport {Link} from \"react-router-dom\";\nimport {fetchSession} from \"../../actions\";\nimport axios from \"axios\";\n\nfunction sendSelectSession(sessionId){\n    const msg = {session: sessionId}\n    return axios.post(process.env.REACT_APP_API_URL + '/selectsession', msg)\n        .catch(console.error)\n}\n\n\nexport class SessionCard extends Component<{}> {\n    render() {\n        const session = this.props.session;\n        return <div>\n            <Card style={{width: \"30%\"}}>\n                <Card.Body>\n                    <Card.Title>{session.info.name}</Card.Title>\n                    {/*<Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>*/}\n                    <Card.Text>\n                        <strong>כיתות: </strong>\n                        {session.classes.map(cls => cls.name).join(', ')}\n                    </Card.Text>\n                    <Card.Text>\n                        <strong>מקצועות: </strong>\n                        {session.subjects.map(cls => cls.name).join(', ')}\n                    </Card.Text>\n                    <Card.Text>\n                        {/*<strong>מקצועות: </strong>*/}\n                        מתחיל ב- {new Date(session.info.startDate).toLocaleDateString('he-IL')}\n                        &nbsp;\n                        ונגמר ב- {new Date(session.info.endDate).toLocaleDateString('he-IL')}\n                    </Card.Text>\n                    <Card.Text style={{color: 'red'}}>\n                        להוסיף גם שעות ומרווח\n                    </Card.Text>\n                    <Card.Text>\n                        <Link to='/calendar' onClick={() => {\n                            sendSelectSession(session.info.id)\n                                .then(() => this.props.dispatch(fetchSession()))\n                        }}>\n                            בחר לוח מבחנים\n                        </Link>\n                    </Card.Text>\n                    <Card.Text>\n                        <Link to=\"#\">\n                            שכפל וערוך\n                        </Link>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>;\n    }\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport {SessionCard} from \"./Cards/SessionCard\";\n\n\nclass SelectSession extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            sessions: []\n        };\n        fetch(process.env.REACT_APP_API_URL + '/sessionslist')\n            .then(res => res.json())\n            // .then(console.log)\n            .then(sessions => this.setState({sessions: sessions}))\n        // .then(sessions => sessions.map(sess => ))\n    }\n\n    render() {\n        return (\n            <Container>\n                <div>\n                    <Button variant=\"primary\" size=\"lg\" active\n                            onClick={()=>this.props.history.push(\"/sessionsetup\")}\n                    >\n                        צור לוח מבחנים חדש\n                    </Button>\n                </div>\n                <div>\n                    או המשך עבודה על לוח קיים\n                </div>\n                <div>\n                {this.state.sessions.map(sess => <SessionCard dispatch={this.props.dispatch} key={sess.info.id} session={sess}/>)}\n                </div>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    // subjects : state.subjects.items\n})\n\nexport default connect(mapStateToProps)(SelectSession);","import React, {Component} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport {connect} from \"react-redux\";\nimport AddBlockers from \"./BlockerForm\";\nimport AddTests from \"./TestForm\";\nimport {fetchSession} from \"../actions\";\nimport ScheduleCalendar from \"./ScheduleCalendar/ScheduleCalendar\";\nimport {ModalForm} from \"./ModalForm\";\n\nclass SessionHome extends Component {\n    constructor(props){\n        super(props);\n        console.warn('REMOVE HARD CODED ID');\n        this.props.dispatch(fetchSession()); //FIXME\n\n\n        this.state = {blockerModalShow: false, testModalShow: false}\n        this.closeModals = this.closeModals.bind(this)\n    }\n\n    closeModals() {\n        this.setState({blockerModalShow: false, testModalShow: false})\n        this.props.dispatch(fetchSession())\n    }\n\n\n    render() {\n        // if (this.props.session.length){\n        //     console.log('hey')\n        //     this.props.history.push('/selectsession')\n        // }\n        return (\n            <div>\n                <h1>{this.props.session.name}</h1>\n\n                <ModalForm title=\"הוסף אילוץ\"\n                           show={this.state.blockerModalShow}\n                           onHide={this.closeModals}>\n                    <AddBlockers afterSend={this.closeModals}/>\n                </ModalForm>\n                <ModalForm title=\"הוסף מבחן\"\n                           show={this.state.testModalShow}\n                           onHide={this.closeModals}>\n                    <AddTests afterSend={this.closeModals}/>\n                </ModalForm>\n\n                <div>\n                    <Button variant=\"primary\" onClick={() => this.setState({blockerModalShow: true})}>\n                        הוסף אילוץ</Button>\n                    <Button variant=\"primary\" onClick={() => this.setState({testModalShow: true})}>\n                        הוסף מבחן</Button>\n                </div>\n                {/*<h2>מבחנים</h2>*/}\n                {/*<div style={{marginRight: '5px'}}>*/}\n                {/*    {sortByName(this.props.tests).map(test => (*/}\n                {/*        <div>*/}\n                {/*            <h4>{test.name} </h4>*/}\n                {/*            <ul style={{marginRight: '10px'}}>*/}\n                {/*                <li><strong>כיתות: </strong>*/}\n                {/*                    {test.participatingClasses.map(cls => {*/}\n                {/*                        return this.props.classesDict[cls] ?*/}\n                {/*                            this.props.classesDict[cls].name : '';*/}\n                {/*                    }).join(', ')}*/}\n                {/*                </li>*/}\n                {/*            </ul>*/}\n                {/*        </div>*/}\n                {/*    ))}*/}\n                {/*</div>*/}\n\n                {/*<h2>אילוצים</h2>*/}\n                {/*<div style={{marginRight: '5px'}}>*/}\n                {/*    {sortByName(this.props.blockers).map(blocker => (*/}\n                {/*        <div>*/}\n                {/*            <h4>{blocker.name} </h4>*/}\n                {/*            <ul style={{marginRight: '10px'}}>*/}\n                {/*                <li><strong>כיתות: </strong>*/}\n                {/*                    {blocker.participatingClasses.map(cls => {*/}\n                {/*                        return this.props.classesDict[cls] ?*/}\n                {/*                            this.props.classesDict[cls].name : '';*/}\n                {/*                    }).join(', ')}*/}\n                {/*                </li>*/}\n\n                {/*            </ul>*/}\n                {/*        </div>*/}\n                {/*    ))}*/}\n                {/*</div>*/}\n                <ScheduleCalendar session={this.props.session}/>\n\n\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    let classesDict = state.classes.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    let testsDict = state.tests.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    return ({\n        session: state.session.items,\n        subjects: state.subjects.items,\n        classes: state.classes.items,\n        blockers: state.blockers.items,\n        tests: state.tests.items,\n        classesDict: classesDict,\n        testsDict: testsDict,\n    });\n}\n\n\n\n\nexport default connect(mapStateToProps)(SessionHome)","import React, {Component} from \"react\";\nimport { connect } from 'react-redux'\nimport {HashRouter, Switch, Route, Link} from \"react-router-dom\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\nimport './App.css'\nimport Subjects from \"../Subjects/Subjects\";\nimport ScheduleCalendar from \"../ScheduleCalendar/ScheduleCalendar\";\nimport AddTests from \"../TestForm\";\nimport Home from \"../Home/Home\";\nimport PropTypes from \"prop-types\";\nimport AddBlockers from \"../BlockerForm\";\nimport SessionSetup from \"../SetupSession\";\nimport SelectSession from \"../SelectSession\";\nimport SessionHome from \"../SessionHome\";\n\nclass NavRouterLink extends Component<{}> {\n    render() {\n        return <Link to={this.props.to}><Nav.Item className=\"nav-link\">{this.props.children}</Nav.Item></Link>;\n    }\n}\n\nclass AsyncApp extends Component{\n    componentDidMount(): void {\n    }\n\n    render() {\n        return(\n            <Container>\n                <HashRouter basename={'/'}>\n                    <div style={{alignItems: \"\"}}>\n                        <li><Link to=\"/\">Home</Link></li>\n                        <li><Link to=\"/selectsession\">selectsession</Link></li>\n                        {/*<nav>*/}\n                        {/*    <Navbar bg=\"light\" variant=\"light\">*/}\n                        {/*        <Navbar.Brand href=\"/selectsession\">החלף לוח מבחנים</Navbar.Brand>*/}\n                        {/*        <Nav className=\"mr-auto\">*/}\n                        {/*            <NavRouterLink to=\"/session\">סשן</NavRouterLink>*/}\n                        {/*            <NavRouterLink to=\"/addtests\">הגדרת מבחנים</NavRouterLink>*/}\n                        {/*            <NavRouterLink to=\"/addblockers\">הגדרת אילוצים</NavRouterLink>*/}\n                        {/*            <NavRouterLink to=\"/calendar\">שיבוצים</NavRouterLink>*/}\n                        {/*        </Nav>*/}\n                        {/*    </Navbar>*/}\n                        {/*</nav>*/}\n                        <hr />\n                        <Switch>\n                            <Route exact path=\"/\" component={SelectSession}/>\n                            <Route path=\"/home\" component={Home}/>\n                            <Route path=\"/subjects\" component={Subjects}/>\n                            <Route path=\"/calendar\" component={ScheduleCalendar}/>\n                            <Route path=\"/addtests\" component={AddTests}/>\n                            <Route path=\"/addblockers\" component={AddBlockers}/>\n                            <Route path=\"/sessionsetup\" component={SessionSetup}/>\n                            <Route path=\"/selectsession\" component={SelectSession}/>\n                            <Route path=\"/session\" component={SessionHome}/>\n                            <Route component={() => (<div>404 Not found </div>)} />\n                        </Switch>\n                    </div>\n                </HashRouter>\n\n            </Container>\n        )\n    }\n}\n\nAsyncApp.propTypes = {\n    items: PropTypes.array.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    dispatch: PropTypes.func.isRequired\n}\n\nfunction mapStateToProps(state) {\n    const { subjects, session } = state\n    const { isFetching, items } = subjects\n    return {\n        session,\n        items,\n        isFetching,\n    }\n}\n\n\nexport default connect(mapStateToProps)(AsyncApp)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. ScheduleCalendar is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport {\n    // INIT_SESSION,\n    RECEIVE,\n    REQUEST,\n    SCHEDULE,\n    UNSCHEDULE\n} from \"../actions\";\n\nfunction ReducerCreator(name){\n    return function (\n        state = {\n            isFetching: false,\n            items: []\n        },\n        action\n    ) {\n        switch (action.type) {\n            case REQUEST + '_' + name.toUpperCase():\n                return Object.assign({}, state, {\n                    isFetching: true,\n                })\n            case RECEIVE + '_' + name.toUpperCase():\n                return Object.assign({}, state, {\n                    isFetching: false,\n                    items: action.items,\n                    lastUpdated: action.receivedAt\n                })\n            default:\n                return state\n        }\n    }\n\n}\n\nfunction schedulerState (\n    state = {\n        isFetching: false,\n        scheduledTests: [],\n        unscheduledTestsOptions: {},\n        difficulty: 0,\n        horizon: true\n    },\n    action\n)\n{\n    // console.log(action);\n    switch (action.type) {\n        case SCHEDULE:\n            return Object.assign({}, state, {\n                scheduledTests: [\n                    ...state.scheduledTests,\n                    {id: action.id, date: action.date}\n                ],\n            })\n        case UNSCHEDULE:\n            return Object.assign({}, state, {\n                scheduledTests: [\n                    ...state.scheduledTests.filter(st => {\n                        return (st.id !== action.id ||\n                            st.date.toString() !== action.date.toString());\n                    })\n                ],\n            })\n        case REQUEST + '_SCHEDULE':\n            return Object.assign({}, state, {\n                isFetching: true,\n            })\n        case RECEIVE + '_SCHEDULE':\n            return Object.assign({}, state, {\n                isFetching: false,\n                difficulty: action.items.difficulty,\n                scheduledTests: action.items.scheduledTests.map(item => {\n                    const date = new Date(item.date);\n                    date.setHours(0,0,0,0)\n                    return ({id: item.id, date: date});\n                }),\n                unscheduledTestsOptions: action.items.unscheduledTestsOptions,\n                // lastUpdated: action.receivedAt\n            })\n\n        default:\n            return state\n\n    }\n}\n\n// function session(state = {id: null}, action) {\n//     if (action.type === INIT_SESSION) {\n//         console.log(action)\n//         return Object.assign({}, state, {\n//             id: action.sessionId,\n//         })\n//     } else {\n//         return state;\n//     }\n// }\n\nexport default combineReducers({\n    session: ReducerCreator('Session'),\n    subjects: ReducerCreator('Subjects'),\n    classes : ReducerCreator('Classes'),\n    blockers : ReducerCreator('Blockers'),\n    tests : ReducerCreator('Tests'),\n    savedSchedules : ReducerCreator('ScheduleStore'),\n    // scheduledTests : ReducerCreator('Scheduled_Tests'),\n    schedule: schedulerState\n})","import {createStore, applyMiddleware, compose} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\n\nexport default function configureStore(preloadedState) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  // const store = createStore(reducer, /* preloadedState, */ composeEnhancers(\n\n  return createStore(\n      rootReducer,\n      preloadedState,\n      composeEnhancers(\n      applyMiddleware(thunkMiddleware, loggerMiddleware)\n      )\n  )\n}\n\n","import 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore()\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}
{"version":3,"sources":["utils/utils.js","components/Subjects/Subjects.js","components/ScheduleCalendar/material_title_panel.js","actions/index.js","components/ScheduleCalendar/helpers.js","components/ModalForm.js","components/BlockerForm.js","components/TestForm.js","components/ScheduleCalendar/ScheduleCalendar.js","components/Home/Home.js","components/SetupSession.js","components/Cards/SessionCard.js","components/SelectSession.js","components/SessionHome.js","components/app/App.js","serviceWorker.js","reducers/index.js","configureStore.js","index.js"],"names":["Sleep","milliseconds","Promise","resolve","setTimeout","range","start","end","Array","fill","map","_","idx","Err","_ref","error","react_default","a","createElement","message","DisplayRemoteData","props","_useFetch","useFetch","url","data","utils_Err","preProcess","parserFunction","sortByName","list","sort","b","name","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","ColumnContainer","styled","div","_templateObject","SupTitle","_templateObject2","move","source","destination","droppableSource","droppableDestination","sourceClone","from","destClone","_sourceClone$splice","splice","index","removed","Object","slicedToArray","push","result","droppableId","Subjects","context","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","groupToListItem","group","item","id","content","subjects","get","addList","lists","state","concat","titles","setState","removeList","removedList","getList","parseInt","onDragEnd","toConsumableArray","getGroupedSubjectsRequest","Request","getSubjectsRequest","handleSubmit","bind","assertThisInitialized","fetch","then","response","json","initialGroupedSubjects","Map","v","value","initialNoGroup","initialGroups","title","_this2","key","index_es","icon","faTrashAlt","onClick","react_beautiful_dnd_esm","toString","provided","snapshot","ref","innerRef","style","isDraggingOver","background","padding","width","draggableId","assign","draggableProps","dragHandleProps","isDragging","draggableStyle","objectSpread","userSelect","grid","margin","color","placeholder","e","preventDefault","newGroups","gr","no_pars","shift","par_groups","isValid","forEach","i","alert","msg","no_parallels","parallel_groups","axios","post","catch","console","_this3","getColumnContainer","Button_default","Component","connect","session","isFetching","items","sessionId","styles","root","fontFamily","fontWeight","header","backgroundColor","fontSize","MaterialTitlePanel","rootStyle","children","REQUEST","RECEIVE","SCHEDULE","UNSCHEDULE","INIT_SESSION","FetchActionCreator","paramsUrlAddition","arguments","undefined","postprocessorFunction","dispatch","type","toUpperCase","receivedAt","now","receive","fetchSubjects","fetchClasses","fetchBlockers","fetchTests","fetchSessionInfo","fetchScheduledTests","fetchSavedSchedules","fetchSession","resetSchedule","sidebar","sidebarLink","display","textDecoration","divider","height","paddingTop","paddingBottom","Event","event","Fragment","es6","desc","parseDateString","setHours","getTime","ModalForm","_Component","apply","inherits","createClass","Modal_default","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","BlockerForm","numOfInstances","blockerToEdit","startDates","fieldName","blocker","startsWith","ind","replace","Container_default","Form","onSubmit","Row","Col","md","Group","Label","Control","required","defaultValue","getCurrentValue","as","multiple","classes","s","min","minDate","max","maxDate","es_Button","target","participatingClasses","options","filter","o","selected","participatingSubjects","endDates","afterSend","React","startDate","endDate","daysInWeek","0","1","2","3","4","5","TestForm","numOfOptionalTimes","testToEdit","numOfTests","test","controlId","onChange","defaultGap","step","format","entries","entry","startHour","endHour","requiredkey","label","subject","daysGap","optionalDaysInWeek","optionalStartHours","optionalEndHours","difficulty","localizer","BigCalendar","momentLocalizer","moment","ScheduleCalendar","SidebarContent","test_div","test_div_ids","testsToSchedule","info","numOfOptionalDates","optionalDates","className","howManyLeft","cls","classesDict","selectedTestIndInList","indexOf","selectedTestId","dist_default","disabled","res","days","optionalDays","window","material_title_panel","faSave","prompt","faEraser","faRobot","faPlus","showTestForm","faLock","showBlockerForm","ModalForm_ModalForm","modalFormData","closeModals","components_BlockerForm","editedId","components_TestForm","scheduledTests","testEvents","blockerModalShow","testModalShow","customDayPropGetter","includes","border","sidebarProps","docked","sidebarClassName","contentId","open","touch","shadow","pullRight","transitions","isBefore","add","react_sidebar_esm","scheduleDifficulty","ButtonToolbar_default","DropdownButton_default","variant","savedSchedules","savedSchedule","daysPassed","date1","date2","date1_ms","date2_ms","difference_ms","Math","abs","floor","daysBetween","dateSaved","Dropdown_default","Item","onSelect","storeid","r","history","getBigCalendar","rtl","testsDict","foo","log","blockerEvents","blockersDict","method","headers","Content-Type","body","JSON","stringify","defaultDate","react_big_calendar_esm","selectable","defaultView","views","events","startAccessor","endAccessor","onSelectEvent","testId","testid","unscheduleTest","onSelectSlot","slotInfo","components","dayPropGetter","reduce","cur","defineProperty","tests","blockers","schedule","alreadyScheduledCount","st","howManyNeeded","unscheduledTestsOption","unscheduledTestsOptions","ar","scheduledTestInfo","obj","hasOwnProperty","isEmpty","testToSchedule","ApiList","react","fallback","utils_DisplayRemoteData","Home","Home_ApiList","SetupSession","sendSession","defaults","sessionName","numOfHours","isZeroHour","handleInputChange","checked","DefaultsForm","Form_default","Col_default","Check","Card_default","SetupSession_List","sendText","setParentList","List","text","handleChange","newList","SessionCard","Text","toLocaleDateString","react_router_dom","to","sendSelectSession","SelectSession","sessions","active","sess","SessionCard_SessionCard","SessionHome","warn","components_ScheduleCalendar_ScheduleCalendar","AsyncApp","alignItems","react_router","path","component","AddTests","AddBlockers","SessionSetup","Boolean","location","hostname","match","ReducerCreator","action","lastUpdated","combineReducers","horizon","loggerMiddleware","createLogger","store","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunkMiddleware","configureStore","ReactDOM","render","es","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6db079c4.chunk.js","sourcesContent":["import {useFetch} from \"react-hooks-fetch\";\nimport React from \"react\";\n\nexport function Sleep(milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nexport function fillArray(value, length) {\n    return Array.from({ length }, () => value);\n}\n\n\nexport function range(start, end) {\n    return Array(end - start + 1).fill().map((_, idx) => start + idx)\n}\n\nconst Err = ({ error }) => <span>Error:{error.message}</span>;\n\nexport const DisplayRemoteData = (props) => {\n    let { error, data } = useFetch(props.url);\n    if (error) return <Err error={error} />;\n    if (!data) return null;\n    if (props.preProcess){\n        data = props.preProcess(data);\n    }\n    return data.map(props.parserFunction)\n};\n\nexport function sortByName(list) {\n    return list.sort((a, b) => (a.name > b.name) ? 1 : -1);\n}\n\nexport function isEmpty(obj) {\n    for(const key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\nexport function formatDate(date) {\n    var d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    let year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n}\n\nexport function daysBetween(date1, date2) {\n\n    // The number of milliseconds in one day\n    var ONE_DAY = 1000 * 60 * 60 * 24;\n\n    // Convert both dates to milliseconds\n    var date1_ms = date1.getTime();\n    var date2_ms = date2.getTime();\n\n    // Calculate the difference in milliseconds\n    var difference_ms = Math.abs(date1_ms - date2_ms);\n\n    // Convert back to days and return\n    return Math.floor(difference_ms/ONE_DAY);\n\n}\n","import React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport \"./Subjects.css\";\nimport styled from \"styled-components\";\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios/index';\nimport {fillArray   } from \"../../utils/utils\";\nimport {connect} from \"react-redux\";\n\nconst ColumnContainer = styled.div`\n  margin: 10px;\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  // width: 50%;\n  display: flex;\n  flex-direction: column;\n`;\nconst SupTitle = styled.div`\n  padding: 10px;\n`;\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.push(removed);\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n    color: isDragging ? 'black' : 'white',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 250\n});\n\n\n\n\nclass Subjects extends Component {\n\n    constructor(props: P, context: any) {\n        super(props, context);\n        this.getGroupedSubjectsRequest = new Request(\n            'http://localhost:5000/groupedSubjects');\n        this.getSubjectsRequest = new Request(\n            'http://localhost:5000/subjects');\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            lists: [[]],\n            titles: ['מקצועות ליבה'],\n        }\n        fetch(this.getGroupedSubjectsRequest)\n            .then(response => response.json())\n            .then(data => {\n                this.initialGroupedSubjects = data;\n            }).then(() => {\n            fetch(this.getSubjectsRequest)\n                .then(response => response.json())\n                .then(data => {\n                    this.subjects = new Map(data.map(v => [v.id, v.name]));\n                }).then(\n                () => {\n                    this.initialNoGroup = this.initialGroupedSubjects['no_group'];\n                    this.initialGroups = this.initialGroupedSubjects['groups'];\n                    // console.log(this.initialGroupedSubjects)\n                    this.setState( {\n                            lists: Array(this.groupToListItem(this.initialNoGroup)).concat(\n                                this.initialGroups.map(group => this.groupToListItem(group))\n                            ),\n                            titles: ['מקצועות ליבה'].concat(fillArray('אשכול מגמות', this.initialGroups.length))\n                        }\n                    )\n                }\n            )\n        })\n    };\n\n    groupToListItem = group => {\n        return group.map((item) => ({id: item, content: this.subjects.get(item)}))\n    }\n\n\n    addList = () => {\n        const lists = this.state.lists.concat([[]]);\n        const titles = this.state.titles.concat('אשכול מגמות');\n        this.setState({\n                lists: lists,\n                titles: titles\n            }\n        );\n        // this.render();\n    };\n\n    removeList = (id) => {\n        const removedList = this.state.lists[id];\n        const lists = Array.from(this.state.lists);\n        const titles = Array.from(this.state.titles);\n\n        lists.splice(id, 1);\n        titles.splice(id, 1);\n\n        lists[0] = lists[0].concat(removedList);\n\n        this.setState({\n                lists: lists,\n                titles: titles\n            }\n        );\n    }\n\n    getList = id => this.state.lists[parseInt(id)];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            // Do nothing\n        } else {\n            const result = move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n            const lists = [...this.state.lists]\n            lists[source.droppableId] = result[source.droppableId]\n            lists[destination.droppableId] = result[destination.droppableId]\n            this.setState({\n                lists: lists\n            });\n        }\n    };\n\n    // Normally you would want to split things out into separate components.\n    getColumnContainer(index, title) {\n        return <ColumnContainer key={index}>\n            <SupTitle>{title} {index > 0 &&<span><FontAwesomeIcon icon={faTrashAlt} onClick={()=>{this.removeList(index)}}/></span>}</SupTitle>\n\n            <Droppable droppableId={index.toString()}>\n                {(provided, snapshot) => (\n                    <div\n                        ref={provided.innerRef}\n                        style={getListStyle(snapshot.isDraggingOver)}>\n                        {this.state.lists[index].map((item, index) => (\n                            <Draggable\n                                key={item.id}\n                                draggableId={item.id}\n                                index={index}>\n                                {(provided, snapshot) => (\n                                    <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        style={getItemStyle(\n                                            snapshot.isDragging,\n                                            provided.draggableProps.style\n                                        )}>\n                                        {item.content}\n                                    </div>\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </ColumnContainer>;\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let newGroups = this.state.lists.map(gr => gr.map(v => v.id));\n        let no_pars = newGroups.shift()\n        let par_groups = newGroups.length === 0 ? [[]] : newGroups;\n\n        let isValid = true;\n        par_groups.forEach((group, i) => {\n            if (group.length === 1){\n                alert('אשכול מגמות לא יכול להכיל רק מקצוע אחד')\n                isValid = false;\n            }\n        })\n        if (isValid){\n            let msg = {\n                no_parallels: [no_pars],\n                parallel_groups: [par_groups],\n            };\n\n            axios.post('http://localhost:5000/groupedSubjects', msg)\n                .then(response => response.json())\n                .catch(console.error);\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div id='root'>\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        {this.state.titles.map(\n                            (item, i, key) => this.getColumnContainer(i, this.state.titles[i])\n                        )}\n\n                    </DragDropContext>\n                    <ColumnContainer><Button onClick={()=>{this.addList()}}>הוסף אשכול</Button></ColumnContainer>\n                </div>\n                <Button onClick={this.handleSubmit}>\n                    Send\n                </Button>\n            </div>\n        );\n    }\n}\nfunction mapStateToProps(state) {\n    const { subjects, session } = state;\n    const { isFetching, items } = subjects;\n    return {\n        sessionId: session.id,\n        subjects: items,\n        isFetching,\n    }\n}\n\nexport default connect(mapStateToProps)(Subjects);","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst styles = {\n    root: {\n        fontFamily:\n            '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif',\n        fontWeight: 300\n    },\n    header: {\n        backgroundColor: \"#03a9f4\",\n        color: \"white\",\n        padding: \"16px\",\n        fontSize: \"1.5em\"\n    }\n};\n\nconst MaterialTitlePanel = props => {\n    const rootStyle = props.style\n        ? { ...styles.root, ...props.style }\n        : styles.root;\n\n    return (\n        <div style={rootStyle}>\n            <div style={styles.header}>{props.title}</div>\n            {props.children}\n        </div>\n    );\n};\n\nMaterialTitlePanel.propTypes = {\n    style: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    children: PropTypes.object\n};\n\nexport default MaterialTitlePanel;\n","import axios from \"axios\";\nimport {Sleep, sortByName} from \"../utils/utils\";\n\nexport const REQUEST = 'REQUEST';\nexport const RECEIVE = 'RECEIVE';\nexport const SCHEDULE = 'SCHEDULE';\nexport const UNSCHEDULE = 'UNSCHEDULE';\nexport const RESET_SCHEDULE = 'RESET_SCHEDULE';\nexport const INIT_SESSION = 'INIT_SESSION';\n\nfunction FetchActionCreator(name, url) {\n\n    function request() {\n        return {\n            type: REQUEST+ '_' + name.toUpperCase(),\n        }\n    }\n\n    function receive(json, postprocessorFunction) {\n        return {\n            type: RECEIVE + '_' + name.toUpperCase(),\n            items: postprocessorFunction(json),\n            receivedAt: Date.now()\n        }\n    }\n\n    return function (paramsUrlAddition='', postprocessorFunction=(json)=>(json)) {\n        return dispatch => {\n            dispatch(request());\n            return fetch(url + paramsUrlAddition)\n                .then(response => response.json())\n                .then(json => dispatch(receive(json, postprocessorFunction)))\n        }\n    }\n\n}\n\n\nconst fetchSubjects = FetchActionCreator('Subjects', 'http://localhost:5000/subjects',\n    sortByName)\nconst fetchClasses = FetchActionCreator('Classes', 'http://localhost:5000/classes')\nconst fetchBlockers = FetchActionCreator('Blockers', 'http://localhost:5000/blockers')\nconst fetchTests = FetchActionCreator('Tests', 'http://localhost:5000/tests')\nconst fetchSessionInfo = FetchActionCreator('Session', 'http://localhost:5000/sessioninfo')\n\n\nexport const fetchScheduledTests = FetchActionCreator('Schedule', 'http://localhost:5000/currentscheduledtests')\nexport const fetchSavedSchedules = FetchActionCreator('ScheduleStore', 'http://localhost:5000/schedulerstatestore')\n\nexport function fetchSession() {\n    return dispatch => {\n        dispatch({\n            type: INIT_SESSION,\n        })\n        dispatch(fetchSessionInfo());\n        dispatch(fetchSubjects());\n        dispatch(fetchClasses());\n        dispatch(fetchBlockers());\n        dispatch(fetchTests());\n        dispatch(fetchScheduledTests());\n        dispatch(fetchSavedSchedules());\n\n    }\n\n}\n\n\nexport const scheduleTest = (testId, date) => {\n    // return {\n    //   type: SCHEDULE,\n    //   testId,\n    //   date\n    // }scheduledTests\n    return dispatch => {\n        const msg = {\n            testid: testId.toString(),\n            date: date\n        }\n        return axios.post('http://localhost:5000/scheduletest', msg)\n            .then(\n                dispatch(\n                    {\n                        type: SCHEDULE,\n                        id: testId,\n                        date: date\n                    }\n\n                )\n            )\n            .then(() => {\n                Sleep(1000);\n                return dispatch(fetchScheduledTests())\n            })\n    }\n\n}\n\nexport const unscheduleTest = (testId, date) => {\n    return dispatch => {\n        const msg = {\n            testid: testId.toString(),\n            date: date\n        }\n        return axios.post('http://localhost:5000/unscheduletest', msg)\n            .then(\n                dispatch(\n                    {\n                        type: UNSCHEDULE,\n                        id: testId,\n                        date: date\n                    }\n\n                )\n            )\n            .then(() => {\n                Sleep(1000);\n                return dispatch(fetchScheduledTests())\n            })\n    }\n}\n\n\nexport const resetSchedule = () => {\n    return dispatch => {\n        const msg = {\n        }\n        return axios.post('http://localhost:5000/resetschedule', msg)\n            .then(\n                dispatch(\n                    {\n                        type: UNSCHEDULE,\n                    }\n\n                )\n            )\n            .then(() => {\n                Sleep(1000);\n                return dispatch(fetchScheduledTests())\n            })\n    }\n}\n\n","import React from \"react\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\n\nexport const styles = {\n    sidebar: {\n        width: 300,\n        // marginLeft: '15%',\n        // paddingRight: '16px'\n        // height: \"100%\"\n    },\n    sidebarLink: {\n        display: \"block\",\n        padding: \"16px 0px\",\n        color: \"#757575\",\n        textDecoration: \"none\"\n    },\n    divider: {\n        margin: \"8px 0\",\n        height: 1,\n        backgroundColor: \"#757575\"\n    },\n    content: {\n        padding: \"16px\",\n        paddingTop: \"30px\",\n        paddingBottom: \"30px\",\n        // height: \"70%\",\n        backgroundColor: \"white\",\n        // marginLeft: '15%'\n    }\n};\n\nexport function Event({event}) {\n    const color = event.type === 'blocker' ? 'red' : 'blue';\n    return (\n        <>\n            <ContextMenuTrigger id={event.type + event.id.toString()}>\n                <div style={{backgroundColor: color, fontSize: '15px'}}>\n                    <strong>{event.title}</strong>\n                    {event.desc && ':  ' + event.desc}\n                </div>\n            </ContextMenuTrigger>\n        </>\n    )\n}\n\nexport function parseDateString(date) {\n    let d = new Date(date);\n    d.setHours(0, 0, 0, 0);\n    return d.getTime()\n}","import React, {Component} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport class ModalForm extends Component<{ show: any, onHide: () => any }> {\n    render() {\n        return <Modal\n            size=\"lg\"\n            show={this.props.show}\n            onHide={this.props.onHide}\n            aria-labelledby=\"example-modal-sizes-title-lg\"\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"example-modal-sizes-title-lg\">\n                    {this.props.title}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {this.props.children}\n            </Modal.Body>\n        </Modal>;\n    }\n}","import React from \"react\";\nimport {Button, Col, Form} from 'react-bootstrap';\nimport {formatDate, range} from \"../utils/utils\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\nimport {string} from \"prop-types\";\n\nclass BlockerForm extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        const numOfInstances = this.props.blockerToEdit ? this.props.blockerToEdit.startDates.length : 1;\n        this.state = {numOfInstances: numOfInstances}\n\n    }\n\n    getCurrentValue(fieldName){\n        if (this.props.blockerToEdit){\n            const blocker = this.props.blockerToEdit;\n            if (fieldName === 'name') {\n                return blocker['name'];\n            } else if (fieldName === 'participatingClasses') {\n                return blocker['participatingClasses'];\n            } else if (fieldName === 'participatingSubjects') {\n                return blocker['participatingSubjects'];\n            } else if (fieldName.startsWith('startDate')){\n                const ind = parseInt(fieldName.replace('startDate', ''));\n                return formatDate(blocker['startDates'][ind]);\n            } else if (fieldName.startsWith('endDate')){\n                const ind = parseInt(fieldName.replace('endDate', ''));\n                return formatDate(blocker['endDates'][ind]);\n            }\n            else {\n            }\n        } else {\n            return []\n        }\n    }\n\n    render() {\n        return (\n            <Container style={{width: \"85%\"}}>\n                {/*<h1>הוספת אילוץ</h1>*/}\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Col md={12}>\n                            <Form.Group>\n                                <Form.Label>שם האילוץ</Form.Label>\n                                <Form.Control required type=\"text\" name=\"name\"\n                                              placeholder=\"שם האילוץ\" defaultValue={this.getCurrentValue('name')}/>\n\n\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n                    <Form.Row>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>כיתות משתתפות</Form.Label>\n                                <Form.Control required as=\"select\" multiple name=\"participatingClasses\"\n                                              defaultValue={this.getCurrentValue('participatingClasses')}>\n                                    {this.props.classes.map((s) => (\n                                        <option key={s.id} value={s.id}>{s.name}</option>\n                                    ))}\n\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>מקצועות משתתפים</Form.Label>\n                                <Form.Control required as=\"select\" multiple name=\"participatingSubjects\"\n                                              defaultValue={this.getCurrentValue('participatingSubjects')}>\n                                    {this.props.subjects.map((s) => (\n                                        <option key={s.id} value={s.id}>{s.name}</option>\n                                    ))}\n\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n\n                    {range(0, this.state.numOfInstances-1).map(i => {\n                        return (\n                            <Form.Row id={i}>\n                                <Col md={6}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>תאריך התחלה</Form.Label>}\n                                        <Form.Control required type=\"date\" name={\"startDate\" + i.toString()}\n                                                      min={this.props.minDate} max={this.props.maxDate}\n                                                      defaultValue={this.getCurrentValue(\"startDate\" + i.toString())}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col md={6}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>תאריך סיום</Form.Label>}\n                                        <Form.Control required type=\"date\" name={\"endDate\" + i.toString()}\n                                                      min={this.props.minDate} max={this.props.maxDate}\n                                                      defaultValue={this.getCurrentValue(\"endDate\" + i.toString())}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            </Form.Row>\n                        )\n                    })}\n\n\n                    <Form.Row>\n                        <Col md={3}>\n                            <Button onClick={(event) => {\n                                this.setState({numOfInstances: this.state.numOfInstances + 1});\n                            }}>הוסף מועד</Button>\n                        </Col>\n                        <Col md = {3}>\n                            {this.state.numOfInstances > 1 &&\n                            <Button onClick={(event) => {\n                                this.setState({numOfInstances: this.state.numOfInstances - 1})\n                            }}>מחק מועד</Button>}\n                        </Col>\n                    </Form.Row>\n\n\n\n                    <Form.Row>\n                        <Col md={3}>\n                            <Button type=\"Submit\">{this.props.blockerToEdit ? \"עדכן אילוץ\" : \"הוסף אילוץ\"}</Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </Container>\n        )\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        const msg = {\n            session: this.props.session.id,\n            name: e.target.name.value,\n            participatingClasses:  [[...e.target.participatingClasses.options].filter(o => o.selected).map(o => o.value)],\n            participatingSubjects:  [[...e.target.participatingSubjects.options].filter(o => o.selected).map(o => o.value)],\n            startDates: [range(0, this.state.numOfInstances-1)\n                .map( i => e.target['startDate' + i].value)],\n            endDates: [range(0, this.state.numOfInstances-1)\n                .map( i => e.target['endDate' + i].value)],\n        };\n        if (this.props.blockerToEdit){\n            msg['id'] = this.props.blockerToEdit.id;\n        }\n        axios.post('http://localhost:5000/blockers', msg)\n            .catch(function (error) {\n                console.error(error);\n                alert(error);\n            })\n            .then(() => {\n                if (this.props.afterSend){\n                    this.props.afterSend()\n                }\n\n            })\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    session: state.session.items,\n    subjects : state.subjects.items,\n    classes : state.classes.items,\n\n    minDate: formatDate(state.session.items.startDate),\n    maxDate: formatDate(state.session.items.endDate),\n\n})\nexport default connect(mapStateToProps)(BlockerForm);","import React from \"react\";\nimport {Button, Col, Form} from 'react-bootstrap';\nimport {formatDate, range} from \"../utils/utils\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\nconst daysInWeek = {\n    0: \"ראשון\",\n    1: \"שני\",\n    2: \"שלישי\",\n    3: \"רביעי\",\n    4: \"חמישי\",\n    5: \"שישי\"\n}\n\nclass TestForm extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        const numOfOptionalTimes = this.props.testToEdit ? this.props.testToEdit['optionalDaysInWeek'].length : 1;\n        const numOfTests = this.props.testToEdit ? this.props.testToEdit['numOfTests'] : 1;\n        this.state = {numOfOptionalTimes: numOfOptionalTimes, numOfTests: numOfTests}\n    }\n\n    /*\ndaysGap: 5\ndifficulty: 5\nid: 28\nlabel: null\nmaxDate: \"2019-08-31\"\nminDate: \"2019-08-01\"\nname: \"היסטוריה\"\nnumOfTests: 2\noptionalDaysInWeek: (2) [0, 3]\noptionalEndHours: (2) [9, 9]\noptionalStartHours: (2) [1, 1]\nparticipatingClasses: [21]\nsubject: 29\n\n    */\n\n    getCurrentValue(fieldName){\n        if (this.props.testToEdit){\n            const test = this.props.testToEdit;\n            if (fieldName.startsWith('optionalDaysInWeek')) {\n                const ind = parseInt(fieldName.replace('optionalDaysInWeek', ''));\n                return test['optionalDaysInWeek'][ind];\n            } else if (fieldName.startsWith('optionalEndHours')) {\n                const ind = parseInt(fieldName.replace('optionalEndHours', ''));\n                return test['optionalEndHours'][ind];\n            } else if (fieldName.startsWith('optionalStartHours')) {\n                const ind = parseInt(fieldName.replace('optionalStartHours', ''));\n                return test['optionalStartHours'][ind];\n            } else {\n                return test[fieldName]\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Container style={{width: \"85%\"}}>\n                {/*<h1>הוספת מבחן</h1>*/}\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Col md={6}>\n                            <Form.Group controlId=\"formGridSubject\">\n                                <Form.Label>נושא המבחן</Form.Label>\n                                <Form.Control required as=\"select\" name=\"subject\" defaultValue={this.getCurrentValue('subject')}>\n                                    {this.props.subjects.map((s) => (\n                                        <option key={s.id} value={s.id}>{s.name}</option>\n                                    ))}\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"label\">\n                                <Form.Label>תיאור (לא חובה)</Form.Label>\n                                <Form.Control type=\"text\" name=\"label\" defaultValue={this.getCurrentValue('label')}\n                                              placeholder=\"לדוגמא- בגרות פנימית / מתכונת\"/>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group controlId=\"formGridClasses\" style={{height: \"100%\"}}>\n                                <Form.Label>כיתות משתתפות</Form.Label>\n                                <Form.Control required as=\"select\" multiple name=\"participatingClasses\"\n                                              style={{height: \"80%\"}}\n                                              defaultValue={this.getCurrentValue('participatingClasses')}\n                                >\n                                    {this.props.classes.map((s) => (\n                                        <option key={s.id} value={s.id}>{s.name}</option>\n                                    ))}\n\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>מספר מבחנים</Form.Label>\n                                <Form.Control required as=\"select\" name=\"numOfTests\" onChange={(e) => {\n                                    this.setState({numOfTests: e.target.value})\n                                }} defaultValue={this.getCurrentValue('numOfTests')}>\n                                    <option value={1}>1</option>\n                                    <option value={2}>2</option>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        {this.state.numOfTests > 1 && (\n                            <Col md={6}>\n                                <Form.Group>\n                                    <Form.Label>מרווח מינימלי בין מבחנים</Form.Label>\n                                    <Form.Control required type=\"number\" name=\"daysGap\"\n                                                  defaultValue={\n                                                      this.props.testToEdit ?\n                                                          this.getCurrentValue('daysGap') :\n                                                          this.props.session.defaultGap\n                                                  } step={1}\n                                                  min={2} max={365} //TODO: Change max to the number of days in the interval\n                                    />\n                                </Form.Group>\n                            </Col>\n                        )}\n\n                    </Form.Row>\n                    <Form.Row>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>תאריך מינימלי</Form.Label>\n                                <Form.Control required type=\"date\" format=\"DD-MM-YYYY\" name=\"minDate\"\n                                              min={this.props.minDate} max={this.props.maxDate}\n                                              defaultValue={\n                                                  this.props.testToEdit ?\n                                                      this.getCurrentValue('minDate') :\n                                                      this.props.minDate\n                                              }/>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>תאריך מקסימלי</Form.Label>\n                                <Form.Control required type=\"date\" format=\"DD-MM-YYYY\" name=\"maxDate\"\n                                              min={this.props.minDate} max={this.props.maxDate}\n                                              defaultValue={\n                                                  this.props.testToEdit ?\n                                                      this.getCurrentValue('maxDate') :\n                                                      this.props.maxDate\n\n                                              }/>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n\n                    {range(0, this.state.numOfOptionalTimes-1).map(i => {\n                        return (\n                            <Form.Row>\n                                <Col md={4}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>יום</Form.Label>}\n                                        <Form.Control required key={i} as=\"select\"\n                                                      name={\"optionalDaysInWeek\" + i.toString()}\n                                                      defaultValue={this.getCurrentValue(\"optionalDaysInWeek\" + i.toString())}\n                                        >\n                                            {Object.entries(daysInWeek).map(entry => (\n                                                <option value={entry[0]} key={entry[0]}>{entry[1]}</option>\n                                            ))}\n                                        </Form.Control>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={4}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>שעת התחלה</Form.Label>}\n                                        <Form.Control required key={i} type=\"number\" name={\"optionalStartHours\" + i.toString()}\n                                                      defaultValue={\n                                                          this.props.testToEdit ?\n                                                              this.getCurrentValue(\"optionalStartHours\" + i.toString()) :\n                                                              this.props.session.startHour\n                                                      } step={1}\n                                                      min={this.props.session.startHour} max={this.props.session.endHour}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col md={4}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>שעת סיום</Form.Label>}\n                                        <Form.Control requiredkey={i} type=\"number\" name={\"optionalEndHours\" + i.toString()}\n                                                      step={1} defaultValue={\n                                                          this.props.testToEdit ?\n                                                              this.getCurrentValue(\"optionalEndHours\" + i.toString()) :\n                                                              this.props.session.endHour\n                                                      }\n                                                      min={this.props.session.startHour} max={this.props.session.endHour} //TODO: Change max to the number of days in the interval\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            </Form.Row>\n                        )\n                    })}\n\n                    <Form.Row>\n                        <Col md={3}>\n                            <Button onClick={(event) => {\n                                this.setState({numOfOptionalTimes: this.state.numOfOptionalTimes + 1});\n                            }}>הוסף מועד</Button>\n                        </Col>\n                        <Col md = {3}>\n                            {this.state.numOfOptionalTimes > 1 &&\n                            <Button onClick={(event) => {\n                                this.setState({numOfOptionalTimes: this.state.numOfOptionalTimes - 1})\n                            }}>מחק מועד</Button>}\n                        </Col>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Col md={3}>\n                            <Button type=\"Submit\">{this.props.testToEdit ? \"עדכן מבחן\" : \"הוסף מבחן\"}</Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </Container>\n        )\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        const msg = {\n            label: e.target.label.value,\n            session: this.props.session.id,\n            subject: e.target.subject.value,\n            participatingClasses:  [[...e.target.participatingClasses.options].filter(o => o.selected).map(o => o.value)],\n            numOfTests: e.target.numOfTests.value,\n            daysGap: this.state.numOfTests > 1 ? e.target.daysGap.value : 0,\n            minDate: e.target.minDate.value,\n            maxDate: e.target.maxDate.value,\n            optionalDaysInWeek: [range(0, this.state.numOfOptionalTimes-1)\n                .map( i => e.target['optionalDaysInWeek' + i].value)],\n            optionalStartHours: [range(0, this.state.numOfOptionalTimes-1)\n                .map( i => e.target['optionalStartHours' + i].value)],\n            optionalEndHours: [range(0, this.state.numOfOptionalTimes-1)\n                .map( i => e.target['optionalEndHours' + i].value)],\n            difficulty: 5, //TODO\n        }\n\n        if (this.props.testToEdit){\n            msg['id'] = this.props.testToEdit.id;\n        }\n\n        axios.post('http://localhost:5000/tests', msg)\n            .catch(function (error) {\n                console.error(error);\n                alert(error);\n            })\n            .then(() => {\n                if (this.props.afterSend){\n                    this.props.afterSend()\n                }\n\n            })\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    session : state.session.items,\n    subjects : state.subjects.items,\n    classes : state.classes.items,\n    minDate: formatDate(state.session.items.startDate),\n    maxDate: formatDate(state.session.items.endDate),\n})\nexport default connect(mapStateToProps)(TestForm);\n","import React, {Component} from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"./ScheduleCalendar.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./react-contextmenu.css\"\nimport Sidebar from \"react-sidebar\";\nimport axios from \"axios\";\n\nimport {connect} from \"react-redux\";\nimport List from \"react-list-select\";\nimport MaterialTitlePanel from \"./material_title_panel\";\nimport {\n    fetchSavedSchedules,\n    fetchScheduledTests,\n    fetchSession,\n    resetSchedule,\n    scheduleTest,\n    unscheduleTest\n} from \"../../actions\";\nimport {daysBetween, isEmpty, Sleep} from \"../../utils/utils\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEraser, faLock, faPlus, faRobot, faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport {Event, parseDateString, styles} from \"./helpers\";\nimport {ModalForm} from \"../ModalForm\";\nimport AddBlockers from \"../BlockerForm\";\nimport AddTests from \"../TestForm\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport {ContextMenu, MenuItem} from \"react-contextmenu\";\n\nconst localizer = BigCalendar.momentLocalizer(moment);\n\n\n\nclass ScheduleCalendar extends Component {\n    constructor(props) {\n        super(props);\n        this.props.dispatch(fetchSession());\n\n        this.state = {\n            optionalDays: [],\n            selectedTestId: null,\n            scheduledTests: [],\n            testEvents: [],\n\n            modalFormData: {\n                type: null,\n                editedId: null\n            },\n            blockerModalShow: false, testModalShow: false\n        };\n        this.customDayPropGetter = this.customDayPropGetter.bind(this)\n        this.SidebarContent = this.SidebarContent.bind(this)\n        this.closeModals = this.closeModals.bind(this)\n\n    }\n\n    closeModals() {\n        this.setState({blockerModalShow: false, testModalShow: false})\n        this.setState({modalFormData: {\n                type: null,\n                editedId: null\n            }})\n        this.props.dispatch(fetchSession())\n    }\n\n    componentDidMount(): void {\n        // this.props.dispatch(fetchScheduledTests(this.props.session.id))\n        // this.interval = setInterval(() => this.props.dispatch(fetchScheduledTests()), 1000);\n    }\n\n    componentWillUnmount() {\n        // clearInterval(this.interval);\n    }\n\n\n    SidebarContent = props => {\n        const style = props.style\n            ? { ...styles.sidebar, ...props.style }\n            : styles.sidebar;\n\n        let test_div = []\n        let test_div_ids = []\n        props.testsToSchedule.forEach( info => {\n            const test = info.test;\n            test_div_ids.push(test.id);\n            const numOfOptionalDates = info.optionalDates.length;\n            const color = numOfOptionalDates > 0 ? 'blue' : 'red';\n            test_div.push(\n                (<div className=\"test\">\n                    <div className=\"name\"><span style={{color: color}}>[{numOfOptionalDates}] </span>{test.name} - ({info.howManyLeft} מתוך {test.numOfTests})</div>\n                    <div className=\"classes\">\n                        {test.participatingClasses.map(cls => {\n                            return props.classesDict[cls] ? props.classesDict[cls].name : '';\n                        }).join(', ')}\n                    </div>\n                </div>)\n            )\n\n\n        });\n        let selectedTestIndInList = test_div_ids.indexOf(this.state.selectedTestId)\n        let list = (\n            <List\n                items={test_div}\n                selected={[selectedTestIndInList]}\n                disabled={[]}\n                multiple={false}\n                onChange={(selected) => {\n                    this.setState({\n                        selectedTestId: test_div_ids[selected],\n                    })\n                    fetch('http://localhost:5000/finddate?' +\n                        'testid='+test_div_ids[selected].toString()\n                    )\n                        .then(response => response.json())\n                        .then(res => {\n                            // console.log(res)\n                            const days = res.map(date => {\n                                return parseDateString(date);\n                            });\n                            this.setState({\n                                optionalDays: days\n                            });\n                            if (res.length === 0){\n                                window.alert('לא נותרו תאריכים אפשריים למבחן זה')\n                            }\n\n                        })\n                        .catch(console.error)\n                }}\n            />)\n\n        return (\n            <MaterialTitlePanel title={\n                <>\n                    <div>\n                    <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faSave} onClick={() => {\n                            const name = prompt('בחר שם:')\n                            if (name.length > 0){\n                                axios.post(\n                                    'http://localhost:5000/schedulerstatestore',\n                                    {name}\n                                )\n                                    .then(() => Sleep(500))\n                                    .then(this.props.dispatch(fetchSavedSchedules()))\n                                    .catch(console.error)\n                            }\n                        }}/>\n                    </span>\n                        <span style={{margin: '15px'}}><FontAwesomeIcon icon={faEraser} onClick={()=>{this.props.dispatch(resetSchedule())}}/></span>\n                        <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faRobot} onClick={()=>{\n                            // const interval = setInterval(() => this.props.dispatch(fetchScheduledTests()), 300);\n                            fetch('http://localhost:5000/runscheduler')\n                                .then(() => {\n                                    Sleep(300);\n                                    this.props.dispatch(fetchScheduledTests())\n                                })\n                                .catch(console.error)\n                        }}/>\n                    </span>\n                        <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faPlus} onClick={() => this.showTestForm()}/>\n                    </span>\n                        <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faLock} onClick={() => this.showBlockerForm()}/>\n                    </span>\n                    </div>\n                </>\n\n            } style={style}>\n                <ModalForm title=\"הוסף אילוץ\"\n                           show={this.state.modalFormData.type === \"blocker\"}\n                           onHide={this.closeModals}>\n                    <AddBlockers afterSend={this.closeModals} blockerToEdit={\n                        this.state.modalFormData.type === 'blocker' ? this.state.modalFormData.editedId : null\n                    }/>\n                </ModalForm>\n                <ModalForm title=\"הוסף מבחן\"\n                           show={this.state.modalFormData.type === \"test\"}\n                           onHide={this.closeModals}>\n                    <AddTests afterSend={this.closeModals} testToEdit={\n                        this.state.modalFormData.type === 'test' ? this.state.modalFormData.editedId : null\n                    }/>\n                </ModalForm>\n\n\n                <div>\n                    <div>TODO: להווסיף פילטרים לפי כיתות ומקצועות</div>\n\n                    <div style={styles.divider} />\n                    {list}\n                    {/*<a href=\"index.html\" style={styles.sidebarLink}>*/}\n                    {/*    Home*/}\n                    {/*</a>*/}\n                    {/*<a href=\"responsive_example.html\" style={styles.sidebarLink}>*/}\n                    {/*</a>*/}\n                    {/*    Responsive Example*/}\n\n                </div>\n            </MaterialTitlePanel>\n        );\n    };\n\n    customDayPropGetter(date) {\n        if (this.state.optionalDays.includes(date.getTime())){\n            return {\n                className: 'special-day',\n                style: {\n                    border: 'solid 3px #afa',\n                },\n            }\n\n        }\n        else return {}\n    }\n\n\n\n    render() {\n        const sidebar = <this.SidebarContent testsToSchedule={this.props.testsToSchedule} classesDict={this.props.classesDict}/>;\n        const sidebarProps = {\n            sidebar,\n            docked: true,\n            sidebarClassName: \"custom-sidebar-class\",\n            contentId: \"custom-sidebar-content-id\",\n            open: true,\n            touch: true,\n            shadow: false,\n            pullRight: true,\n            transitions: true,\n        };\n        const startDate = moment(this.props.session.startDate);\n        const endDate = moment(this.props.session.endDate);\n\n        const result = [];\n\n        if (endDate.isBefore(startDate)) {\n            throw \"End date must be greated than start date.\"\n        }\n\n        while (startDate.isBefore(endDate)) {\n            result.push(startDate.format(\"YYYY-MM-01\"));\n            startDate.add(1, 'month');\n        }\n        // console.log(result)\n        return (\n            <Sidebar {...sidebarProps} styles={{root: {margin: '0 15px'}}} >\n                <MaterialTitlePanel title={\n                    <div>\n                        <span>רמת קושי: {this.props.scheduleDifficulty}</span>\n                        <ButtonToolbar>\n                            <DropdownButton id=\"dropdown-basic-button\"\n                                            variant=\"secondary\" title=\"עבור ללוח שמור\">\n                                {this.props.savedSchedules.map(savedSchedule => {\n                                    const daysPassed = daysBetween(new Date(), new Date(savedSchedule.dateSaved));\n                                    return (\n                                        <Dropdown.Item onSelect={() => (\n                                            this.props.dispatch(\n                                                fetchScheduledTests('?storeid=' + savedSchedule.storeid)\n                                            )\n                                        )}>{savedSchedule.name + \" - \" }\n                                            <em>{\"נשמר לפני \" + `${daysPassed}` + ' ימים'}</em>\n                                        </Dropdown.Item>\n                                    );\n                                })}\n                            </DropdownButton>\n                            <Button onClick={() => {\n                                fetch('http://localhost:5000/debug').then(r =>\n                                    this.props.dispatch(fetchScheduledTests()))\n                            }}>שפר שיבוצים</Button>\n                            <Button onClick={() => {\n                                this.props.history.push(\"/selectsession\")\n                            }}>בחר לוח שנה אחר</Button>\n                        </ButtonToolbar>\n                    </div>\n                }>\n                    {result.map(date => (\n                        <div style={styles.content}>\n                            {this.getBigCalendar(new Date(date))}\n                        </div>\n                    ))}\n                </MaterialTitlePanel>\n                {\n                    this.props.testEvents.filter(event => event.id).map(event => (\n                        <ContextMenu id={event.type + event.id.toString()} rtl>\n                            <MenuItem onClick={() => this.showTestForm(this.props.testsDict[event.id])}>\n                                <div>ערוך</div>\n                            </MenuItem>\n                            <MenuItem data={{foo: 'bar'}} onClick={console.log}>\n                                נעל\n                            </MenuItem>\n                            <MenuItem divider />\n                        </ContextMenu>\n                    ))}\n                {\n                    this.props.blockerEvents.map(event => (\n                        <ContextMenu id={event.type + event.id.toString()} rtl>\n                            <MenuItem onClick={() => this.showBlockerForm(this.props.blockersDict[event.id])}>\n                                <div>ערוך</div>\n                            </MenuItem>\n                            <MenuItem onClick={() => {\n                                fetch(\"http://localhost:5000/blockers\", {\n                                    method: 'DELETE',\n                                    headers: {\n                                        'Content-Type': 'application/json',\n                                    },\n                                    body: JSON.stringify({id: event.id})\n                                })\n                                    .then(response => response.json())\n                                    .then(() => (this.props.dispatch(fetchSession())));\n\n                            }}>\n                                מחק\n                            </MenuItem>\n                            <MenuItem divider />\n                        </ContextMenu>\n                    ))\n                }\n\n            </Sidebar>\n        );\n    }\n\n    getBigCalendar(defaultDate) {\n        return <BigCalendar\n            selectable\n            localizer={localizer}\n            defaultDate={defaultDate}\n            defaultView=\"month\"\n            views={{month: true}}\n            events={[...this.props.blockerEvents, ...this.props.testEvents]}\n            style={{height: \"650px\"}}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            onSelectEvent={(event, e) => {\n                if (event.type === 'test') {\n                    let date = event.start;\n                    date.setHours(0, 0, 0, 0);\n                    this.props.dispatch(unscheduleTest(event.id, date))\n                    this.setState({\n                        selectedTestId: null,\n                        optionalDays: []\n                    })\n                }\n            }}\n            onSelectSlot={(slotInfo) => {\n                const isAnOption = this.state.optionalDays.includes(parseDateString(slotInfo['start']));\n                if (isAnOption) {\n                    this.props.dispatch(scheduleTest(this.state.selectedTestId, slotInfo.start))\n\n                    this.setState({\n                        selectedTestId: null,\n                        optionalDays: []\n                    })\n\n                }\n            }}\n            components={{\n                event: Event\n            }}\n            dayPropGetter={this.customDayPropGetter}\n            rtl={true}\n\n        />;\n    }\n\n    showTestForm(testToEdit = null) {\n        this.setState({modalFormData: {\n                type: 'test',\n                editedId: testToEdit\n            }})\n    }\n\n    showBlockerForm(blockerToEdit = null) {\n        this.setState({modalFormData: {\n                type: 'blocker',\n                editedId: blockerToEdit\n            }})\n    }\n}\n\nconst mapStateToProps = (state) => {\n    let classesDict = state.classes.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    let testsDict = state.tests.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    let blockersDict = state.blockers.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    return ({\n        session: state.session.items,\n        subjects: state.subjects.items,\n        classes: state.classes.items,\n        blockers: state.blockers.items,\n        tests: state.tests.items,\n        classesDict,\n        testsDict,\n        blockersDict,\n        scheduleDifficulty: state.schedule.difficulty,\n        scheduledTests: state.schedule.scheduledTests,\n        savedSchedules: state.savedSchedules.items,\n        testsToSchedule: state.tests.items.map(\n            test => {\n                const alreadyScheduledCount = state.schedule.scheduledTests.filter(st => st.id === test.id).length;\n                const howManyNeeded = test.numOfTests;\n                if (howManyNeeded > alreadyScheduledCount){\n\n                    let unscheduledTestsOption = state.schedule.unscheduledTestsOptions[test.id];\n                    unscheduledTestsOption = unscheduledTestsOption ? unscheduledTestsOption : [];\n                    return {\n                        test: test,\n                        howManyLeft: howManyNeeded - alreadyScheduledCount,\n                        optionalDates: unscheduledTestsOption.map(parseDateString)\n                    }\n                }\n                else {\n                    return null;\n                }\n            }\n        ).filter(i => i != null),\n        blockerEvents:\n            state.blockers.items.reduce((ar, blocker) => {\n                ar = [...ar,\n                    ...blocker.startDates.map((_, i) => ({\n                        title: blocker.name,\n                        start: new Date(blocker.startDates[i]),\n                        end: new Date(blocker.endDates[i]),\n                        type: 'blocker',\n                        id: blocker.id\n                    }))\n                ];\n                return ar;\n            }, []),\n        testEvents:\n            state.schedule.scheduledTests.map(scheduledTestInfo => {\n                const id = scheduledTestInfo.id;\n                const date = scheduledTestInfo.date;\n                if (isEmpty(testsDict)){\n                    return []\n                }\n                const testToSchedule = testsDict[id];\n                return {\n                    title: testToSchedule.name + ' (' + testToSchedule.participatingClasses.map(cls => {\n                        return classesDict[cls] ? classesDict[cls].name : '';\n                    }).join(', ') + ')',\n                    start: new Date(date),\n                    end: new Date(date),\n                    type: 'test',\n                    id: id,\n                }\n            })\n    });\n}\n\nexport default connect(mapStateToProps)(ScheduleCalendar);","import React, {Component, Suspense} from \"react\";\nimport {DisplayRemoteData, sortByName} from \"../../utils/utils\";\n\nclass ApiList extends Component<{ parserFunction: (s?: any) => any }> {\n    render() {\n        return <div>\n            <h1>{this.props.name}</h1>\n            <ul>\n                <Suspense fallback={<li></li>}>\n                    <DisplayRemoteData\n                        url={this.props.url}\n                        preProcess={sortByName}\n                        parserFunction={(s) => (\n                            <div>\n                                <li>{s.name}</li>\n\n                                <ul>\n                                    {Object.entries(s).map(i => (\n                                        i[0] !== \"name\" && <li>{i[0]} : {i[1]}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                        )}/>\n                </Suspense>\n            </ul>\n        </div>;\n    }\n}\n\nexport default function Home() {\n    return (\n        <div>\n            <ApiList name=\"סשנים\" url=\"http://localhost:5000/sessionslist\"/>\n        </div>\n    )\n}","import React from \"react\";\nimport axios from 'axios/index';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { connect } from 'react-redux'\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\n// import Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport {fetchSession} from \"../actions\";\n\nclass SetupSession extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            subjects: ['קוסמות', 'שיקויים'], classes: ['א1', 'א2'],\n            defaults: {\n                sessionName: '',\n                minDate: '2019-01-01', maxDate: '2019-05-01', daysGap: 30, numOfHours: 1, isZeroHour: false\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            defaults: {...this.state.defaults, [name]: value}\n        });\n    }\n\n    sendSession = (e) => {\n        e.preventDefault();\n        const msg = {\n            subjects: [this.state.subjects],\n            classes: [this.state.classes],\n            ...this.state.defaults\n        }\n        axios.post('http://localhost:5000/initsession', msg)\n            .then(res => res.data)\n            .then(res => this.props.dispatch(fetchSession(res.session)))\n            .then(() => this.props.history.push('/subjects'))\n            .catch(console.error);\n    }\n\n\n    render(){\n        const DefaultsForm = <Form>\n            <Form.Row>\n                <Col md={12}>\n                    <Form.Group>\n                        <Form.Label>כינוי</Form.Label>\n                        <Form.Control type=\"text\" required\n                                      value={this.state.sessionName} name=\"sessionName\"\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Label>תאריך התחלה</Form.Label>\n                        <Form.Control required type=\"date\"\n                                      value={this.state.defaults.minDate} name=\"minDate\"\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Label>תאריך סיום</Form.Label>\n                        <Form.Control required type=\"date\" value={this.state.defaults.maxDate} name=\"maxDate\"\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n            </Form.Row>\n            <Form.Row>\n                <Col md={6}>\n                    <Form.Group >\n                        <Form.Label>מרווח מינימלי בין מבחנים באותו המקצוע</Form.Label>\n                        <Form.Control required type=\"number\" name=\"daysGap\" value={this.state.defaults.daysGap}\n                                      step={1}\n                                      min={2} max={365} //TODO: Change max to the number of days in the interval\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n            </Form.Row>\n            <Form.Row>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Label>מספר שעות ביום</Form.Label>\n                        <Form.Control required type=\"number\" name=\"numOfHours\"\n                                      value={this.state.defaults.numOfHours} min={1}\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n            </Form.Row>\n            <Form.Row>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Check name=\"isZeroHour\" type=\"checkbox\" checked={this.state.defaults.isZeroHour}\n                                    label=\"יש שעת אפס\"\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n\n\n            </Form.Row>\n        </Form>;\n        return(\n            <Container style={{width: \"70%\"}}>\n                <h1>הגדרות</h1>\n\n                {/*<Accordion defaultActiveKey=\"2\">*/}\n                    <Card>\n                        {/*<Accordion.Toggle as={Card.Header} eventKey=\"2\">*/}\n                            <h2>הגדרות כלליות</h2>\n                        {/*</Accordion.Toggle>*/}\n                        {/*<Accordion.Collapse eventKey=\"2\">*/}\n                            <Card.Body>\n                                {DefaultsForm}\n                            </Card.Body>\n                        {/*</Accordion.Collapse>*/}\n                    </Card>\n                    <Card>\n                        {/*<Accordion.Toggle as={Card.Header} eventKey=\"0\">*/}\n                            <h2>כיתות</h2>\n                        {/*</Accordion.Toggle>*/}\n                        {/*<Accordion.Collapse eventKey=\"0\">*/}\n                            <Card.Body>\n                                <List title=\"כיתות\" sendText=\"הוסף כיתה\"\n                                      setParentList={list => this.setState({classes: list})}/>\n                            </Card.Body>\n                        {/*</Accordion.Collapse>*/}\n                    </Card>\n                    <Card>\n                        {/*<Accordion.Toggle as={Card.Header} eventKey=\"1\">*/}\n                            <h2>מקצועות</h2>\n                        {/*</Accordion.Toggle>*/}\n                        {/*<Accordion.Collapse eventKey=\"1\">*/}\n                            <Card.Body>\n                                <List title=\"מקצועות\" sendText=\"הוסף מקצוע\"\n                                      setParentList={list => this.setState({subjects: list})}/>\n                            </Card.Body>\n                        {/*</Accordion.Collapse>*/}\n                    </Card>\n\n                    <Button onClick={this.sendSession}>שמור והמשך להגדרת אשכלות</Button>\n                {/*// </Accordion>*/}\n\n\n            </Container>\n        )\n    }\n}\n\nclass List extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {text: '', list:[]};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        // this.props.dispatch(fetchSubjects);\n    }\n\n\n    render() {\n        return (\n            <div>\n                {/*<h2>{this.props.title}</h2>*/}\n                <ul>\n                    {this.state.list.map((item, idx) => {\n                        return <li key={`item-${idx}`}>{item}</li>\n                    })}\n                </ul>\n                <form>\n                    <input\n                        id=\"new-todo\"\n                        onChange={this.handleChange}\n                        value={this.state.text}\n                    />\n                    <Button type=\"submit\" onClick={this.handleSubmit}>\n                        {this.props.sendText}\n                    </Button>\n                </form>\n            </div>\n        )\n    }\n\n    handleChange(e) {\n        this.setState({ text: e.target.value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        if (!this.state.text.length) {\n            return;\n        }\n        const newList = [...this.state.list, this.state.text]\n        this.setState({list: newList})\n        this.props.setParentList(newList)\n        this.setState(() => ({\n            text: ''\n        }));\n\n\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    // subjects : state.subjects.items\n})\n\nexport default connect(mapStateToProps)(SetupSession);","import React, {Component} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport {Link} from \"react-router-dom\";\nimport {fetchSession} from \"../../actions\";\nimport axios from \"axios\";\n\nfunction sendSelectSession(sessionId){\n    const msg = {session: sessionId}\n    return axios.post('http://localhost:5000/selectsession', msg)\n        .catch(console.error)\n}\n\n\nexport class SessionCard extends Component<{}> {\n    render() {\n        const session = this.props.session;\n        return <div>\n            <Card style={{width: \"30%\"}}>\n                <Card.Body>\n                    <Card.Title>{session.info.name}</Card.Title>\n                    {/*<Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>*/}\n                    <Card.Text>\n                        <strong>כיתות: </strong>\n                        {session.classes.map(cls => cls.name).join(', ')}\n                    </Card.Text>\n                    <Card.Text>\n                        <strong>מקצועות: </strong>\n                        {session.subjects.map(cls => cls.name).join(', ')}\n                    </Card.Text>\n                    <Card.Text>\n                        {/*<strong>מקצועות: </strong>*/}\n                        מתחיל ב- {new Date(session.info.startDate).toLocaleDateString('he-IL')}\n                        &nbsp;\n                        ונגמר ב- {new Date(session.info.endDate).toLocaleDateString('he-IL')}\n                    </Card.Text>\n                    <Card.Text style={{color: 'red'}}>\n                        להוסיף גם שעות ומרווח\n                    </Card.Text>\n                    <Card.Text>\n                        <Link to='/calendar' onClick={() => {\n                            sendSelectSession(session.info.id)\n                                .then(() => this.props.dispatch(fetchSession()))\n                        }}>\n                            בחר לוח מבחנים\n                        </Link>\n                    </Card.Text>\n                    <Card.Text>\n                        <Link to=\"#\">\n                            שכפל וערוך\n                        </Link>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>;\n    }\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport {SessionCard} from \"./Cards/SessionCard\";\n\n\nclass SelectSession extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            sessions: []\n        };\n        fetch('http://localhost:5000/sessionslist')\n            .then(res => res.json())\n            // .then(console.log)\n            .then(sessions => this.setState({sessions: sessions}))\n        // .then(sessions => sessions.map(sess => ))\n    }\n\n    render() {\n        return (\n            <Container>\n                <div>\n                    <Button variant=\"primary\" size=\"lg\" active\n                            onClick={()=>this.props.history.push(\"/sessionsetup\")}\n                    >\n                        צור לוח מבחנים חדש\n                    </Button>\n                </div>\n                <div>\n                    או המשך עבודה על לוח קיים\n                </div>\n                <div>\n                {this.state.sessions.map(sess => <SessionCard dispatch={this.props.dispatch} key={sess.info.id} session={sess}/>)}\n                </div>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    // subjects : state.subjects.items\n})\n\nexport default connect(mapStateToProps)(SelectSession);","import React, {Component} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport {connect} from \"react-redux\";\nimport AddBlockers from \"./BlockerForm\";\nimport AddTests from \"./TestForm\";\nimport {fetchSession} from \"../actions\";\nimport ScheduleCalendar from \"./ScheduleCalendar/ScheduleCalendar\";\nimport {ModalForm} from \"./ModalForm\";\n\nclass SessionHome extends Component {\n    constructor(props){\n        super(props);\n        console.warn('REMOVE HARD CODED ID');\n        this.props.dispatch(fetchSession()); //FIXME\n\n\n        this.state = {blockerModalShow: false, testModalShow: false}\n        this.closeModals = this.closeModals.bind(this)\n    }\n\n    closeModals() {\n        this.setState({blockerModalShow: false, testModalShow: false})\n        this.props.dispatch(fetchSession())\n    }\n\n\n    render() {\n        // if (this.props.session.length){\n        //     console.log('hey')\n        //     this.props.history.push('/selectsession')\n        // }\n        return (\n            <div>\n                <h1>{this.props.session.name}</h1>\n\n                <ModalForm title=\"הוסף אילוץ\"\n                           show={this.state.blockerModalShow}\n                           onHide={this.closeModals}>\n                    <AddBlockers afterSend={this.closeModals}/>\n                </ModalForm>\n                <ModalForm title=\"הוסף מבחן\"\n                           show={this.state.testModalShow}\n                           onHide={this.closeModals}>\n                    <AddTests afterSend={this.closeModals}/>\n                </ModalForm>\n\n                <div>\n                    <Button variant=\"primary\" onClick={() => this.setState({blockerModalShow: true})}>\n                        הוסף אילוץ</Button>\n                    <Button variant=\"primary\" onClick={() => this.setState({testModalShow: true})}>\n                        הוסף מבחן</Button>\n                </div>\n                {/*<h2>מבחנים</h2>*/}\n                {/*<div style={{marginRight: '5px'}}>*/}\n                {/*    {sortByName(this.props.tests).map(test => (*/}\n                {/*        <div>*/}\n                {/*            <h4>{test.name} </h4>*/}\n                {/*            <ul style={{marginRight: '10px'}}>*/}\n                {/*                <li><strong>כיתות: </strong>*/}\n                {/*                    {test.participatingClasses.map(cls => {*/}\n                {/*                        return this.props.classesDict[cls] ?*/}\n                {/*                            this.props.classesDict[cls].name : '';*/}\n                {/*                    }).join(', ')}*/}\n                {/*                </li>*/}\n                {/*            </ul>*/}\n                {/*        </div>*/}\n                {/*    ))}*/}\n                {/*</div>*/}\n\n                {/*<h2>אילוצים</h2>*/}\n                {/*<div style={{marginRight: '5px'}}>*/}\n                {/*    {sortByName(this.props.blockers).map(blocker => (*/}\n                {/*        <div>*/}\n                {/*            <h4>{blocker.name} </h4>*/}\n                {/*            <ul style={{marginRight: '10px'}}>*/}\n                {/*                <li><strong>כיתות: </strong>*/}\n                {/*                    {blocker.participatingClasses.map(cls => {*/}\n                {/*                        return this.props.classesDict[cls] ?*/}\n                {/*                            this.props.classesDict[cls].name : '';*/}\n                {/*                    }).join(', ')}*/}\n                {/*                </li>*/}\n\n                {/*            </ul>*/}\n                {/*        </div>*/}\n                {/*    ))}*/}\n                {/*</div>*/}\n                <ScheduleCalendar session={this.props.session}/>\n\n\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    let classesDict = state.classes.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    let testsDict = state.tests.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    return ({\n        session: state.session.items,\n        subjects: state.subjects.items,\n        classes: state.classes.items,\n        blockers: state.blockers.items,\n        tests: state.tests.items,\n        classesDict: classesDict,\n        testsDict: testsDict,\n    });\n}\n\n\n\n\nexport default connect(mapStateToProps)(SessionHome)","import React, {Component} from \"react\";\nimport { connect } from 'react-redux'\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\nimport './App.css'\nimport Subjects from \"../Subjects/Subjects\";\nimport ScheduleCalendar from \"../ScheduleCalendar/ScheduleCalendar\";\nimport AddTests from \"../TestForm\";\nimport Home from \"../Home/Home\";\nimport PropTypes from \"prop-types\";\nimport AddBlockers from \"../BlockerForm\";\nimport SessionSetup from \"../SetupSession\";\nimport SelectSession from \"../SelectSession\";\nimport SessionHome from \"../SessionHome\";\n\nclass NavRouterLink extends Component<{}> {\n    render() {\n        return <Link to={this.props.to}><Nav.Item className=\"nav-link\">{this.props.children}</Nav.Item></Link>;\n    }\n}\n\nclass AsyncApp extends Component{\n    componentDidMount(): void {\n    }\n\n    render() {\n        return(\n            <Container>\n                <Router>\n                    <div style={{alignItems: \"\"}}>\n                        {/*<nav>*/}\n                        {/*    <Navbar bg=\"light\" variant=\"light\">*/}\n                        {/*        <Navbar.Brand href=\"/selectsession\">החלף לוח מבחנים</Navbar.Brand>*/}\n                        {/*        <Nav className=\"mr-auto\">*/}\n                        {/*            <NavRouterLink to=\"/session\">סשן</NavRouterLink>*/}\n                        {/*            <NavRouterLink to=\"/addtests\">הגדרת מבחנים</NavRouterLink>*/}\n                        {/*            <NavRouterLink to=\"/addblockers\">הגדרת אילוצים</NavRouterLink>*/}\n                        {/*            <NavRouterLink to=\"/calendar\">שיבוצים</NavRouterLink>*/}\n                        {/*        </Nav>*/}\n                        {/*    </Navbar>*/}\n                        {/*</nav>*/}\n                        {/*<hr />*/}\n                        <Switch>\n                            <Route path=\"/home\" component={Home}/>\n                            <Route path=\"/subjects\" component={Subjects}/>\n                            <Route path=\"/calendar\" component={ScheduleCalendar}/>\n                            <Route path=\"/addtests\" component={AddTests}/>\n                            <Route path=\"/addblockers\" component={AddBlockers}/>\n                            <Route path=\"/sessionsetup\" component={SessionSetup}/>\n                            <Route path=\"/selectsession\" component={SelectSession}/>\n                            <Route path=\"/session\" component={SessionHome}/>\n                        </Switch>\n                    </div>\n                </Router>\n\n            </Container>\n        )\n    }\n}\n\nAsyncApp.propTypes = {\n    items: PropTypes.array.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    dispatch: PropTypes.func.isRequired\n}\n\nfunction mapStateToProps(state) {\n    const { subjects, session } = state\n    const { isFetching, items } = subjects\n    return {\n        session,\n        items,\n        isFetching,\n    }\n}\n\n\nexport default connect(mapStateToProps)(AsyncApp)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. ScheduleCalendar is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport {\n    // INIT_SESSION,\n    RECEIVE,\n    REQUEST,\n    SCHEDULE,\n    UNSCHEDULE\n} from \"../actions\";\n\nfunction ReducerCreator(name){\n    return function (\n        state = {\n            isFetching: false,\n            items: []\n        },\n        action\n    ) {\n        switch (action.type) {\n            case REQUEST + '_' + name.toUpperCase():\n                return Object.assign({}, state, {\n                    isFetching: true,\n                })\n            case RECEIVE + '_' + name.toUpperCase():\n                return Object.assign({}, state, {\n                    isFetching: false,\n                    items: action.items,\n                    lastUpdated: action.receivedAt\n                })\n            default:\n                return state\n        }\n    }\n\n}\n\nfunction schedulerState (\n    state = {\n        isFetching: false,\n        scheduledTests: [],\n        unscheduledTestsOptions: {},\n        difficulty: 0,\n        horizon: true\n    },\n    action\n)\n{\n    // console.log(action);\n    switch (action.type) {\n        case SCHEDULE:\n            return Object.assign({}, state, {\n                scheduledTests: [\n                    ...state.scheduledTests,\n                    {id: action.id, date: action.date}\n                ],\n            })\n        case UNSCHEDULE:\n            return Object.assign({}, state, {\n                scheduledTests: [\n                    ...state.scheduledTests.filter(st => {\n                        return (st.id !== action.id ||\n                            st.date.toString() !== action.date.toString());\n                    })\n                ],\n            })\n        case REQUEST + '_SCHEDULE':\n            return Object.assign({}, state, {\n                isFetching: true,\n            })\n        case RECEIVE + '_SCHEDULE':\n            return Object.assign({}, state, {\n                isFetching: false,\n                difficulty: action.items.difficulty,\n                scheduledTests: action.items.scheduledTests.map(item => {\n                    const date = new Date(item.date);\n                    date.setHours(0,0,0,0)\n                    return ({id: item.id, date: date});\n                }),\n                unscheduledTestsOptions: action.items.unscheduledTestsOptions,\n                // lastUpdated: action.receivedAt\n            })\n\n        default:\n            return state\n\n    }\n}\n\n// function session(state = {id: null}, action) {\n//     if (action.type === INIT_SESSION) {\n//         console.log(action)\n//         return Object.assign({}, state, {\n//             id: action.sessionId,\n//         })\n//     } else {\n//         return state;\n//     }\n// }\n\nexport default combineReducers({\n    session: ReducerCreator('Session'),\n    subjects: ReducerCreator('Subjects'),\n    classes : ReducerCreator('Classes'),\n    blockers : ReducerCreator('Blockers'),\n    tests : ReducerCreator('Tests'),\n    savedSchedules : ReducerCreator('ScheduleStore'),\n    // scheduledTests : ReducerCreator('Scheduled_Tests'),\n    schedule: schedulerState\n})","import {createStore, applyMiddleware, compose} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\n\nexport default function configureStore(preloadedState) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  // const store = createStore(reducer, /* preloadedState, */ composeEnhancers(\n\n  return createStore(\n      rootReducer,\n      preloadedState,\n      composeEnhancers(\n      applyMiddleware(thunkMiddleware, loggerMiddleware)\n      )\n  )\n}\n\n","import 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore()\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}
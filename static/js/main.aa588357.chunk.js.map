{"version":3,"sources":["utils/utils.js","components/Subjects/Subjects.js","components/ScheduleCalendar/helpers.js","components/ScheduleCalendar/PrintSchedule.js","components/ScheduleCalendar/material_title_panel.js","actions/index.js","utils/ModalForm.js","SessionConfiguration/BlockerForm.js","SessionConfiguration/TestForm.js","components/ScheduleCalendar/ScheduleCalendar.js","SessionConfiguration/SetupSession.js","SessionSelection/SessionCard.js","SessionSelection/SelectSession.js","components/app/App.js","serviceWorker.js","reducers/index.js","configureStore.js","index.js"],"names":["range","start","end","Array","fill","map","_","idx","isEmpty","obj","key","hasOwnProperty","formatDateImpl","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","formatDateForForms","_formatDateImpl","join","ColumnContainer","styled","div","_templateObject","SupTitle","_templateObject2","move","source","destination","droppableSource","droppableDestination","sourceClone","from","destClone","_sourceClone$splice","splice","index","removed","Object","slicedToArray","push","result","droppableId","Subjects","props","context","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","groupToListItem","group","item","id","content","subjects","get","addList","lists","state","concat","titles","setState","removeList","removedList","getList","parseInt","onDragEnd","toConsumableArray","getGroupedSubjectsRequest","Request","process","getSubjectsRequest","handleSubmit","bind","assertThisInitialized","fetch","then","response","json","data","initialGroupedSubjects","Map","v","name","value","initialNoGroup","initialGroups","title","_this2","react_default","a","createElement","index_es","icon","faTrashAlt","onClick","react_beautiful_dnd_esm","toString","provided","snapshot","ref","innerRef","style","isDraggingOver","background","padding","width","draggableId","assign","draggableProps","dragHandleProps","isDragging","draggableStyle","objectSpread","userSelect","grid","margin","color","placeholder","e","_this3","preventDefault","newGroups","gr","no_pars","shift","par_groups","isValid","forEach","i","alert","msg","no_parallels","parallel_groups","axios","post","history","catch","console","error","_this4","getColumnContainer","Button_default","Component","connect","session","isFetching","items","sessionId","styles","sidebar","sidebarLink","display","textDecoration","divider","height","backgroundColor","paddingTop","paddingBottom","Event","_ref","event","type","Fragment","es6","fontSize","desc","parseDateString","setHours","getTime","localizer","BigCalendar","momentLocalizer","moment","PrintSchedule","scheduledTests","filteredClassOnSchedule","startDate","endDate","dates","isBefore","format","add","className","Jumbotron","CardDeck_default","classes","classInfo","Card_default","Body","Title","paddingRight","Text","testEvents","filter","testEvent","test","participatingClasses","includes","sort","b","showYear","arguments","undefined","_formatDateImpl2","formatDateForText","getBigCalendar","defaultDate","react_big_calendar_esm","popup","selectable","defaultView","views","events","blockerEvents","blocker","startAccessor","endAccessor","components","rtl","root","fontFamily","fontWeight","header","MaterialTitlePanel","rootStyle","children","REQUEST","RECEIVE","INIT_SESSION","FetchActionCreator","url","paramsUrlAddition","postprocessorFunction","dispatch","toUpperCase","receivedAt","now","receive","fetchSubjects","fetchClasses","fetchBlockers","fetchTests","fetchSessionInfo","fetchScheduledTests","fetchSavedSchedules","fetchSession","resetSchedule","ModalForm","_Component","apply","inherits","createClass","Modal_default","size","show","onHide","aria-labelledby","Header","closeButton","BlockerForm","numOfInstances","blockerToEdit","startDates","fieldName","startsWith","ind","replace","wantedDates","Container_default","Form","onSubmit","Row","Col","md","Group","Label","Control","required","maxLength","defaultValue","getCurrentValue","as","multiple","s","min","minDate","max","maxDate","startHour","endHour","es_Button","target","options","o","selected","participatingSubjects","endDates","startHours","endHours","afterSend","React","daysInWeek","0","1","2","3","4","5","TestForm","numOfOptionalTimes","testToEdit","numOfTests","controlId","onChange","defaultGap","step","entries","entry","requiredkey","label","subject","daysGap","optionalDaysInWeek","optionalStartHours","optionalEndHours","difficulty","ScheduleCalendar","SidebarContent","arr","criteria","subjectsDiv","testsGroupedBySubject","testsToSchedule","info","reduce","subjectsDict","keys","subjectId","test_div","test_div_ids","numOfOptionalDates","optionalDates","howManyLeft","cls","classesDict","selectedTestIndInList","indexOf","selectedTestId","list","dist_default","disabled","res","days","optionalDays","window","Accordion_default","Toggle","Card","eventKey","Collapse","material_title_panel","faSave","prompt","faEraser","faRobot","milliseconds","Promise","resolve","setTimeout","faPlus","showTestForm","faLock","showBlockerForm","ModalForm_ModalForm","modalFormData","closeModals","SessionConfiguration_BlockerForm","SessionConfiguration_TestForm","blockerModalShow","testModalShow","customDayPropGetter","endPoint","method","headers","Content-Type","body","JSON","stringify","border","sidebarProps","docked","sidebarClassName","contentId","open","touch","shadow","pullRight","transitions","calendarsBody","PrintProvider","ScheduleCalendar_PrintSchedule","NoPrint","react_sidebar_esm","scheduleDifficulty","ButtonToolbar_default","DropdownButton_default","variant","savedSchedules","savedSchedule","daysPassed","date1","date2","date1_ms","date2_ms","difference_ms","Math","abs","floor","daysBetween","dateSaved","Dropdown_default","Item","onSelect","storeid","r","Tabs_default","defaultActiveKey","Tab_default","tests","testsDict","fetch_delete","blockers","blockersDict","onSelectEvent","testId","testid","unscheduleTest","onSelectSlot","slotInfo","dayPropGetter","testFormProps","blockerFormProps","cur","defineProperty","schedule","alreadyScheduledCount","st","howManyNeeded","unscheduledTestsOption","unscheduledTestsOptions","ar","scheduledTestInfo","scheduledTest","testName","commonStartingSubstringInClassNames","arr1","a1","a2","L","charAt","substring","longestCommonStartingSubstring","SetupSession","sendSession","defaults","sessionName","numOfHours","isZeroHour","handleInputChange","checked","DefaultsForm","Form_default","Col_default","Check","SetupSession_List","sendText","maxInputLength","setParentList","List","text","handleChange","deleteElement","marginLeft","newList","SessionCard","toLocaleDateString","react_router_dom","to","sendSelectSession","SelectSession","sessions","active","sess","SessionCard_SessionCard","AsyncApp","basename","alignItems","react_router","exact","path","component","SessionSetup","Boolean","location","hostname","match","ReducerCreator","action","lastUpdated","combineReducers","horizon","loggerMiddleware","createLogger","store","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunkMiddleware","configureStore","ReactDOM","render","es","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa588357.chunk.js","sourcesContent":["import {useFetch} from \"react-hooks-fetch\";\nimport React from \"react\";\n\nexport function Sleep(milliseconds) {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nexport function fillArray(value, length) {\n  return Array.from({ length }, () => value);\n}\n\n\nexport function range(start, end) {\n  return Array(end - start + 1).fill().map((_, idx) => start + idx)\n}\n\nconst Err = ({ error }) => <span>Error:{error.message}</span>;\n\nexport const DisplayRemoteData = (props) => {\n  let { error, data } = useFetch(props.url);\n  if (error) return <Err error={error} />;\n  if (!data) return null;\n  if (props.preProcess){\n    data = props.preProcess(data);\n  }\n  return data.map(props.parserFunction)\n};\n\nexport function sortByName(list) {\n  return list.sort((a, b) => (a.name > b.name) ? 1 : -1);\n}\n\nexport function isEmpty(obj) {\n  for(const key in obj) {\n    if(obj.hasOwnProperty(key))\n      return false;\n  }\n  return true;\n}\n\n\nfunction formatDateImpl(date) {\n  const d = new Date(date);\n  let month = '' + (d.getMonth() + 1);\n  let day = '' + d.getDate();\n  let year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n  return {month, day, year};\n}\n\nexport function formatDateForForms(date) {\n  let {month, day, year} = formatDateImpl(date);\n  return [year, month, day].join(\"-\");\n}\n\nexport function formatDateForText(date, showYear=true) {\n  let {month, day, year} = formatDateImpl(date);\n  year = year % 2000; // This line won't work after year 3000\n  if (showYear)\n    return [day, month, year].join(\".\");\n  else\n    return [day, month].join(\".\");\n}\n\nexport function daysBetween(date1, date2) {\n\n  // The number of milliseconds in one day\n  var ONE_DAY = 1000 * 60 * 60 * 24;\n\n  // Convert both dates to milliseconds\n  var date1_ms = date1.getTime();\n  var date2_ms = date2.getTime();\n\n  // Calculate the difference in milliseconds\n  var difference_ms = Math.abs(date1_ms - date2_ms);\n\n  // Convert back to days and return\n  return Math.floor(difference_ms/ONE_DAY);\n\n}\n\n/*!\n * Group items from an array together by some criteria or value.\n * (c) 2019 Tom Bremmer (https://tbremer.com/) and Chris Ferdinandi (https://gomakethings.com), MIT License,\n * @param  {Array}           arr      The array to group items from\n * @param  {String|Function} criteria The criteria to group by\n * @return {Object}                   The grouped object\n */\nexport function groupBy(arr, criteria) {\n  return arr.reduce(function (obj, item) {\n\n    // Check if the criteria is a function to run on the item or a property of it\n    const key = typeof criteria === 'function' ? criteria(item) : item[criteria];\n\n    // If the key doesn't exist yet, create it\n    if (!obj.hasOwnProperty(key)) {\n      obj[key] = [];\n    }\n\n    // Push the value to the object\n    obj[key].push(item);\n\n    // Return the object to the next item in the loop\n    return obj;\n\n  }, {});\n}\n\nexport function longestCommonStartingSubstring(arr1){\n  let arr = arr1.concat().sort(),\n    a1 = arr[0], a2 = arr[arr.length - 1], L = a1.length, i = 0;\n  while(i< L && a1.charAt(i)=== a2.charAt(i)) i++;\n  return a1.substring(0, i);\n}","import React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport \"./Subjects.css\";\nimport styled from \"styled-components\";\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios/index';\nimport {fillArray   } from \"../../utils/utils\";\nimport {connect} from \"react-redux\";\n\nconst ColumnContainer = styled.div`\n  margin: 10px;\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  // width: 50%;\n  display: flex;\n  flex-direction: column;\n`;\nconst SupTitle = styled.div`\n  padding: 10px;\n`;\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.push(removed);\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  userSelect: 'none',\n  padding: grid * 2,\n  margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? 'lightgreen' : 'grey',\n  color: isDragging ? 'black' : 'white',\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  padding: grid,\n  width: 250\n});\n\n\n\n\nclass Subjects extends Component {\n\n  constructor(props: P, context: any) {\n    super(props, context);\n    this.getGroupedSubjectsRequest = new Request(\n      process.env.REACT_APP_API_URL + '/groupedSubjects');\n    this.getSubjectsRequest = new Request(\n      process.env.REACT_APP_API_URL + '/subjects');\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      lists: [[]],\n      titles: ['מקצועות ליבה'],\n    }\n    fetch(this.getGroupedSubjectsRequest)\n      .then(response => response.json())\n      .then(data => {\n        this.initialGroupedSubjects = data;\n      }).then(() => {\n      fetch(this.getSubjectsRequest)\n        .then(response => response.json())\n        .then(data => {\n          this.subjects = new Map(data.map(v => [v.id, v.name]));\n        }).then(\n        () => {\n          this.initialNoGroup = this.initialGroupedSubjects['no_group'];\n          this.initialGroups = this.initialGroupedSubjects['groups'];\n          // console.log(this.initialGroupedSubjects)\n          this.setState( {\n              lists: Array(this.groupToListItem(this.initialNoGroup)).concat(\n                this.initialGroups.map(group => this.groupToListItem(group))\n              ),\n              titles: ['מקצועות ליבה'].concat(fillArray('אשכול מגמות', this.initialGroups.length))\n            }\n          )\n        }\n      )\n    })\n  };\n\n  groupToListItem = group => {\n    return group.map((item) => ({id: item, content: this.subjects.get(item)}))\n  }\n\n\n  addList = () => {\n    const lists = this.state.lists.concat([[]]);\n    const titles = this.state.titles.concat('אשכול מגמות');\n    this.setState({\n        lists: lists,\n        titles: titles\n      }\n    );\n    // this.render();\n  };\n\n  removeList = (id) => {\n    const removedList = this.state.lists[id];\n    const lists = Array.from(this.state.lists);\n    const titles = Array.from(this.state.titles);\n\n    lists.splice(id, 1);\n    titles.splice(id, 1);\n\n    lists[0] = lists[0].concat(removedList);\n\n    this.setState({\n        lists: lists,\n        titles: titles\n      }\n    );\n  }\n\n  getList = id => this.state.lists[parseInt(id)];\n\n  onDragEnd = result => {\n    const { source, destination } = result;\n\n    // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      // Do nothing\n    } else {\n      const result = move(\n        this.getList(source.droppableId),\n        this.getList(destination.droppableId),\n        source,\n        destination\n      );\n      const lists = [...this.state.lists]\n      lists[source.droppableId] = result[source.droppableId]\n      lists[destination.droppableId] = result[destination.droppableId]\n      this.setState({\n        lists: lists\n      });\n    }\n  };\n\n  // Normally you would want to split things out into separate components.\n  getColumnContainer(index, title) {\n    return <ColumnContainer key={index}>\n      <SupTitle>{title} {index > 0 &&<span><FontAwesomeIcon icon={faTrashAlt} onClick={()=>{this.removeList(index)}}/></span>}</SupTitle>\n\n      <Droppable droppableId={index.toString()}>\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            style={getListStyle(snapshot.isDraggingOver)}>\n            {this.state.lists[index].map((item, index) => (\n              <Draggable\n                key={item.id}\n                draggableId={item.id}\n                index={index}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getItemStyle(\n                      snapshot.isDragging,\n                      provided.draggableProps.style\n                    )}>\n                    {item.content}\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </ColumnContainer>;\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let newGroups = this.state.lists.map(gr => gr.map(v => v.id));\n    let no_pars = newGroups.shift()\n    let par_groups = newGroups.length === 0 ? [[]] : newGroups;\n\n    let isValid = true;\n    par_groups.forEach((group, i) => {\n      if (group.length === 1){\n        alert('אשכול מגמות לא יכול להכיל רק מקצוע אחד')\n        isValid = false;\n      }\n    })\n    if (isValid){\n      let msg = {\n        no_parallels: [no_pars],\n        parallel_groups: [par_groups],\n      };\n\n      axios.post(process.env.REACT_APP_API_URL + '/groupedSubjects', msg)\n        .then(() => this.props.history.push('/calendar'))\n        .catch(console.error);\n    }\n  }\n\n\n  render() {\n    return (\n      <div>\n        <div id='root'>\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            {this.state.titles.map(\n              (item, i, key) => this.getColumnContainer(i, this.state.titles[i])\n            )}\n\n          </DragDropContext>\n          <ColumnContainer><Button onClick={()=>{this.addList()}}>הוסף אשכול</Button></ColumnContainer>\n        </div>\n        <Button onClick={this.handleSubmit}>\n          Send\n        </Button>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  const { subjects, session } = state;\n  const { isFetching, items } = subjects;\n  return {\n    sessionId: session.id,\n    subjects: items,\n    isFetching,\n  }\n}\n\nexport default connect(mapStateToProps)(Subjects);","import React from \"react\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\n\nexport const styles = {\n  sidebar: {\n    width: 300,\n    // marginLeft: '15%',\n    // paddingRight: '16px'\n    // height: \"100%\"\n  },\n  sidebarLink: {\n    display: \"block\",\n    padding: \"16px 0px\",\n    color: \"#757575\",\n    textDecoration: \"none\"\n  },\n  divider: {\n    margin: \"8px 0\",\n    height: 1,\n    backgroundColor: \"#757575\"\n  },\n  content: {\n    padding: \"16px\",\n    paddingTop: \"30px\",\n    paddingBottom: \"30px\",\n    // height: \"70%\",\n    backgroundColor: \"white\",\n    // marginLeft: '15%'\n  }\n};\n\nexport function Event({event}) {\n  const color = event.type === 'blocker' ? 'red' : 'blue';\n  return (\n    <>\n      <ContextMenuTrigger id={event.type + event.id.toString()}>\n        <div style={{backgroundColor: color, fontSize: '15px'}}>\n          <strong>{event.title}</strong>\n          {event.desc && ':  ' + event.desc}\n        </div>\n      </ContextMenuTrigger>\n    </>\n  )\n}\n\nexport function parseDateString(date) {\n  let d = new Date(date);\n  d.setHours(0, 0, 0, 0);\n  return d.getTime()\n}","import React, {Component} from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"./ScheduleCalendar.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./react-contextmenu.css\"\n\nimport {formatDateForText} from \"../../utils/utils\";\nimport {Event} from \"./helpers\";\nimport {Jumbotron} from \"react-bootstrap\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport Card from \"react-bootstrap/Card\";\n\nconst localizer = BigCalendar.momentLocalizer(moment);\n\nclass PrintSchedule extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      scheduledTests: [],\n      filteredClassOnSchedule: null,\n    };\n  }\n\n  render() {\n    const startDate = moment(this.props.session.startDate);\n    const endDate = moment(this.props.session.endDate);\n\n    const dates = [];\n\n    if (endDate.isBefore(startDate)) {\n      throw \"End date must be greater than start date.\"\n    }\n\n    while (startDate.isBefore(endDate)) {\n      dates.push(startDate.format(\"YYYY-MM-01\"));\n      startDate.add(1, 'month');\n    }\n    return (\n      <>\n        <div className={\"page-break\"}>\n          <Jumbotron>\n            <h1>{this.props.session.name}</h1>\n            <CardDeck>\n              {this.props.classes.map(classInfo => (\n                <Card style={{margin: 3}}>\n                  <Card.Body style={{padding: 6}}>\n                    <Card.Title style={{paddingRight: 10}}>{classInfo.name}</Card.Title>\n                    <Card.Text>\n                      <ul>\n                        {this.props.testEvents\n                          .filter(testEvent => testEvent.test.participatingClasses.includes(classInfo.id))\n                          .sort((a, b) => (a.start > b.start) ? 1 : -1)\n                          .map(testEvent => (\n                            <li>{formatDateForText(testEvent.start, false)} - {testEvent.test.name}</li>\n                          ))}\n                      </ul>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              ))}\n            </CardDeck>\n          </Jumbotron>\n        </div>\n        {dates.map(date => (\n          <div className=\"page-break\">\n            {this.getBigCalendar(new Date(date), {height: 950, width: 1500})}\n          </div>\n        ))}\n      </>\n    );\n  }\n\n  getBigCalendar(defaultDate, style={}) {\n    return <BigCalendar\n      popup\n      selectable\n      localizer={localizer}\n      defaultDate={defaultDate}\n      defaultView=\"month\"\n      views={{month: true}}\n      events={[\n        ...this.props.blockerEvents.filter(\n          e => this.state.filteredClassOnSchedule === null ||\n            e.blocker.participatingClasses.includes(this.state.filteredClassOnSchedule)\n        ),\n        ...this.props.testEvents.filter(\n          e => this.state.filteredClassOnSchedule === null ||\n            e.test.participatingClasses.includes(this.state.filteredClassOnSchedule)\n        )]}\n      style={{height: \"500px\", ...style}}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n      components={{\n        event: Event\n      }}\n      rtl={true}\n\n    />;\n  }\n\n}\nexport default PrintSchedule;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst styles = {\n  root: {\n    fontFamily:\n      '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif',\n    fontWeight: 300\n  },\n  header: {\n    backgroundColor: \"#03a9f4\",\n    color: \"white\",\n    padding: \"16px\",\n    fontSize: \"1.5em\"\n  }\n};\n\nconst MaterialTitlePanel = props => {\n  const rootStyle = props.style\n    ? { ...styles.root, ...props.style }\n    : styles.root;\n\n  return (\n    <div style={rootStyle}>\n      <div style={styles.header}>{props.title}</div>\n      {props.children}\n    </div>\n  );\n};\n\nMaterialTitlePanel.propTypes = {\n  style: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  children: PropTypes.object\n};\n\nexport default MaterialTitlePanel;\n","import axios from \"axios\";\nimport {Sleep, sortByName} from \"../utils/utils\";\n\nexport const REQUEST = 'REQUEST';\nexport const RECEIVE = 'RECEIVE';\nexport const SCHEDULE = 'SCHEDULE';\nexport const UNSCHEDULE = 'UNSCHEDULE';\nexport const RESET_SCHEDULE = 'RESET_SCHEDULE';\nexport const INIT_SESSION = 'INIT_SESSION';\n\nfunction FetchActionCreator(name, url) {\n\n  function request() {\n    return {\n      type: REQUEST+ '_' + name.toUpperCase(),\n    }\n  }\n\n  function receive(json, postprocessorFunction) {\n    return {\n      type: RECEIVE + '_' + name.toUpperCase(),\n      items: postprocessorFunction(json),\n      receivedAt: Date.now()\n    }\n  }\n\n  return function (paramsUrlAddition='', postprocessorFunction=(json)=>(json)) {\n    return dispatch => {\n      dispatch(request());\n      return fetch(url + paramsUrlAddition)\n        .then(response => response.json())\n        .then(json => dispatch(receive(json, postprocessorFunction)))\n    }\n  }\n\n}\n\n\nconst fetchSubjects = FetchActionCreator('Subjects', process.env.REACT_APP_API_URL + '/subjects',\n  sortByName)\nconst fetchClasses = FetchActionCreator('Classes', process.env.REACT_APP_API_URL + '/classes')\nconst fetchBlockers = FetchActionCreator('Blockers', process.env.REACT_APP_API_URL + '/blockers')\nconst fetchTests = FetchActionCreator('Tests', process.env.REACT_APP_API_URL + '/tests')\nconst fetchSessionInfo = FetchActionCreator('Session', process.env.REACT_APP_API_URL + '/sessioninfo')\n\n\nexport const fetchScheduledTests = FetchActionCreator('Schedule', process.env.REACT_APP_API_URL + '/currentscheduledtests')\nexport const fetchSavedSchedules = FetchActionCreator('ScheduleStore', process.env.REACT_APP_API_URL + '/schedulerstatestore')\n\nexport function fetchSession() {\n  return dispatch => {\n    dispatch({\n      type: INIT_SESSION,\n    })\n    dispatch(fetchSessionInfo());\n    dispatch(fetchSubjects());\n    dispatch(fetchClasses());\n    dispatch(fetchBlockers());\n    dispatch(fetchTests());\n    dispatch(fetchScheduledTests());\n    dispatch(fetchSavedSchedules());\n\n  }\n\n}\n\n\nexport const scheduleTest = (testId, date) => {\n  return dispatch => {\n    const msg = {\n      testid: testId.toString(),\n      date: date\n    }\n    return axios.post(process.env.REACT_APP_API_URL + '/scheduletest', msg)\n      .then(\n        dispatch(\n          {\n            type: SCHEDULE,\n            id: testId,\n            date: date\n          }\n\n        )\n      )\n      .then(() => {\n        return dispatch(fetchScheduledTests())\n      })\n  }\n\n}\n\nexport const unscheduleTest = (testId, date) => {\n  return dispatch => {\n    const msg = {\n      testid: testId.toString(),\n      date: date\n    }\n    return axios.post(process.env.REACT_APP_API_URL + '/unscheduletest', msg)\n      .then(\n        dispatch(\n          {\n            type: UNSCHEDULE,\n            id: testId,\n            date: date\n          }\n        )\n      )\n      .then(() => {\n        return dispatch(fetchScheduledTests())\n      })\n  }\n}\n\n\nexport const resetSchedule = () => {\n  return dispatch => {\n    const msg = {\n    }\n    return axios.post(process.env.REACT_APP_API_URL + '/resetschedule', msg)\n      .then(\n        dispatch(\n          {\n            type: UNSCHEDULE,\n          }\n\n        )\n      )\n      .then(() => {\n        // Sleep(1000);\n        return dispatch(fetchScheduledTests())\n      })\n  }\n}\n\n","import React, {Component} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport class ModalForm extends Component<{ show: any, onHide: () => any }> {\n  render() {\n    return <Modal\n      size=\"lg\"\n      show={this.props.show}\n      onHide={this.props.onHide}\n      aria-labelledby=\"example-modal-sizes-title-lg\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"example-modal-sizes-title-lg\">\n          {this.props.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {this.props.children}\n      </Modal.Body>\n    </Modal>;\n  }\n}","import React from \"react\";\nimport {Button, Col, Form} from 'react-bootstrap';\nimport {formatDateForForms, range} from \"../utils/utils\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\n\nclass BlockerForm extends React.Component{\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    const numOfInstances = this.props.blockerToEdit ? this.props.blockerToEdit.startDates.length : 1;\n    this.state = {numOfInstances: numOfInstances}\n\n  }\n\n  getCurrentValue(fieldName){\n    if (this.props.blockerToEdit){\n      const blocker = this.props.blockerToEdit;\n      if (fieldName === 'name') {\n        return blocker['name'];\n      } else if (fieldName === 'participatingClasses') {\n        return blocker['participatingClasses'];\n      } else if (fieldName.startsWith('startDate')){\n        const ind = parseInt(fieldName.replace('startDate', ''));\n        return formatDateForForms(blocker['startDates'][ind]);\n      } else if (fieldName.startsWith('endDate')){\n        const ind = parseInt(fieldName.replace('endDate', ''));\n        return formatDateForForms(blocker['endDates'][ind]);\n      } else if (fieldName.startsWith('startHour')){\n        const ind = parseInt(fieldName.replace('startHour', ''));\n        return blocker['startHours'][ind];\n      } else if (fieldName.startsWith('endHour')){\n        const ind = parseInt(fieldName.replace('endHour', ''));\n        return blocker['endHours'][ind];\n      }\n    } else if (this.props.wantedDates){\n      if (fieldName.startsWith('startDate')) {\n        return this.props.wantedDates.start;\n      } else if (fieldName.startsWith('endDate')) {\n        return this.props.wantedDates.end;\n      }\n    }\n    return [];\n  }\n\n  render() {\n    return (\n      <Container style={{width: \"85%\"}}>\n        {/*<h1>הוספת אילוץ</h1>*/}\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Row>\n            <Col md={12}>\n              <Form.Group>\n                <Form.Label>שם האילוץ</Form.Label>\n                <Form.Control required type=\"text\" name=\"name\" maxLength={50}\n                              placeholder=\"שם האילוץ\" defaultValue={this.getCurrentValue('name')}/>\n\n\n              </Form.Group>\n            </Col>\n          </Form.Row>\n          <Form.Row>\n            <Col md={6}>\n              <Form.Group>\n                <Form.Label>כיתות משתתפות</Form.Label>\n                <Form.Control required as=\"select\" multiple name=\"participatingClasses\"\n                              defaultValue={this.getCurrentValue('participatingClasses')}>\n                  {this.props.classes.map((s) => (\n                    <option key={s.id} value={s.id}>{s.name}</option>\n                  ))}\n\n                </Form.Control>\n              </Form.Group>\n            </Col>\n            <Col md={6}>\n              <Form.Group>\n                <Form.Label>מקצועות משתתפים</Form.Label>\n                <Form.Control required as=\"select\" multiple name=\"participatingSubjects\"\n                              defaultValue={this.getCurrentValue('participatingSubjects')}>\n                  {this.props.subjects.map((s) => (\n                    <option key={s.id} value={s.id}>{s.name}</option>\n                  ))}\n\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n\n          {range(0, this.state.numOfInstances-1).map(i => {\n            return (\n              <Form.Row id={i}>\n                <Col md={4}>\n                  <Form.Group>\n                    {i === 0 && <Form.Label>תאריך התחלה</Form.Label>}\n                    <Form.Control required type=\"date\" name={\"startDate\" + i.toString()}\n                                  min={this.props.minDate} max={this.props.maxDate}\n                                  defaultValue={this.getCurrentValue(\"startDate\" + i.toString())}\n                    />\n                  </Form.Group>\n                </Col>\n                <Col md={4}>\n                  <Form.Group>\n                    {i === 0 && <Form.Label>תאריך סיום</Form.Label>}\n                    <Form.Control required type=\"date\" name={\"endDate\" + i.toString()}\n                                  min={this.props.minDate} max={this.props.maxDate}\n                                  defaultValue={this.getCurrentValue(\"endDate\" + i.toString())}\n                    />\n                  </Form.Group>\n                </Col>\n                <Col md={2}>\n                  <Form.Group>\n                    {i === 0 && <Form.Label>שעת התחלה</Form.Label>}\n                    <Form.Control required key={i} type=\"number\" name={\"startHour\" + i.toString()}\n                                  min={this.props.session.startHour} max={this.props.session.endHour}\n                                  defaultValue={\n                                    this.props.blockerToEdit ?\n                                      this.getCurrentValue(\"startHour\" + i.toString()) :\n                                      this.props.session.startHour\n                                  }\n                    />\n                  </Form.Group>\n                </Col>\n                <Col md={2}>\n                  <Form.Group>\n                    {i === 0 && <Form.Label>שעת סיום</Form.Label>}\n                    <Form.Control required key={i} type=\"number\" name={\"endHour\" + i.toString()}\n                                  min={this.props.startHour} max={this.props.endHour}\n                                  defaultValue={\n                                    this.props.blockerToEdit ?\n                                      this.getCurrentValue(\"endHour\" + i.toString()) :\n                                      this.props.session.endHour\n                                  }\n                    />\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n            )\n          })}\n\n\n          <Form.Row>\n            <Col md={3}>\n              <Button onClick={(event) => {\n                this.setState({numOfInstances: this.state.numOfInstances + 1});\n              }}>הוסף מועד</Button>\n            </Col>\n            <Col md = {3}>\n              {this.state.numOfInstances > 1 &&\n              <Button onClick={(event) => {\n                this.setState({numOfInstances: this.state.numOfInstances - 1})\n              }}>מחק מועד</Button>}\n            </Col>\n          </Form.Row>\n\n\n\n          <Form.Row>\n            <Col md={3}>\n              <Button type=\"Submit\">{this.props.blockerToEdit ? \"עדכן אילוץ\" : \"הוסף אילוץ\"}</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </Container>\n    )\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const msg = {\n      session: this.props.session.id,\n      name: e.target.name.value,\n      participatingClasses:  [[...e.target.participatingClasses.options].filter(o => o.selected).map(o => o.value)],\n      participatingSubjects:  [[...e.target.participatingSubjects.options].filter(o => o.selected).map(o => o.value)],\n      startDates: [range(0, this.state.numOfInstances-1)\n        .map( i => e.target['startDate' + i].value)],\n      endDates: [range(0, this.state.numOfInstances-1)\n        .map( i => e.target['endDate' + i].value)],\n      startHours: [range(0, this.state.numOfInstances-1)\n        .map( i => e.target['startHour' + i].value)],\n      endHours: [range(0, this.state.numOfInstances-1)\n        .map( i => e.target['endHour' + i].value)],\n\n    };\n    if (this.props.blockerToEdit){\n      msg['id'] = this.props.blockerToEdit.id;\n    }\n    axios.post(process.env.REACT_APP_API_URL + '/blockers', msg)\n      .catch(function (error) {\n        console.error(error);\n        alert(error);\n      })\n      .then(() => {\n        if (this.props.afterSend){\n          this.props.afterSend()\n        }\n\n      })\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  session: state.session.items,\n  subjects : state.subjects.items,\n  classes : state.classes.items,\n\n  minDate: formatDateForForms(state.session.items.startDate),\n  maxDate: formatDateForForms(state.session.items.endDate),\n\n})\nexport default connect(mapStateToProps)(BlockerForm);","import React from \"react\";\nimport {Button, Col, Form} from 'react-bootstrap';\nimport {formatDateForForms, range} from \"../utils/utils\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\nconst daysInWeek = {\n  0: \"ראשון\",\n  1: \"שני\",\n  2: \"שלישי\",\n  3: \"רביעי\",\n  4: \"חמישי\",\n  5: \"שישי\"\n}\n\nclass TestForm extends React.Component{\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    const numOfOptionalTimes = this.props.testToEdit ? this.props.testToEdit['optionalDaysInWeek'].length : 1;\n    const numOfTests = this.props.testToEdit ? this.props.testToEdit['numOfTests'] : 1;\n    this.state = {numOfOptionalTimes: numOfOptionalTimes, numOfTests: numOfTests}\n  }\n\n  /*\ndaysGap: 5\ndifficulty: 5\nid: 28\nlabel: null\nmaxDate: \"2019-08-31\"\nminDate: \"2019-08-01\"\nname: \"היסטוריה\"\nnumOfTests: 2\noptionalDaysInWeek: (2) [0, 3]\noptionalEndHours: (2) [9, 9]\noptionalStartHours: (2) [1, 1]\nparticipatingClasses: [21]\nsubject: 29\n\n  */\n\n  getCurrentValue(fieldName){\n    if (this.props.testToEdit){\n      const test = this.props.testToEdit;\n      if (fieldName.startsWith('optionalDaysInWeek')) {\n        const ind = parseInt(fieldName.replace('optionalDaysInWeek', ''));\n        return test['optionalDaysInWeek'][ind];\n      } else if (fieldName.startsWith('optionalEndHours')) {\n        const ind = parseInt(fieldName.replace('optionalEndHours', ''));\n        return test['optionalEndHours'][ind];\n      } else if (fieldName.startsWith('optionalStartHours')) {\n        const ind = parseInt(fieldName.replace('optionalStartHours', ''));\n        return test['optionalStartHours'][ind];\n      } else {\n        return test[fieldName]\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Container style={{width: \"85%\"}}>\n        {/*<h1>הוספת מבחן</h1>*/}\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Row>\n            <Col md={6}>\n              <Form.Group controlId=\"formGridSubject\">\n                <Form.Label>נושא המבחן</Form.Label>\n                <Form.Control required as=\"select\" name=\"subject\" defaultValue={this.getCurrentValue('subject')}>\n                  {this.props.subjects.map((s) => (\n                    <option key={s.id} value={s.id}>{s.name}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n              <Form.Group controlId=\"label\">\n                <Form.Label>תיאור (לא חובה)</Form.Label>\n                <Form.Control type=\"text\" name=\"label\" defaultValue={this.getCurrentValue('label')}\n                              placeholder=\"לדוגמא- בגרות פנימית / מתכונת\" maxLength={20}/>\n              </Form.Group>\n            </Col>\n            <Col md={6}>\n              <Form.Group controlId=\"formGridClasses\" style={{height: \"100%\"}}>\n                <Form.Label>כיתות משתתפות</Form.Label>\n                <Form.Control required as=\"select\" multiple name=\"participatingClasses\"\n                              style={{height: \"80%\"}}\n                              defaultValue={this.getCurrentValue('participatingClasses')}\n                >\n                  {this.props.classes.map((s) => (\n                    <option key={s.id} value={s.id}>{s.name}</option>\n                  ))}\n\n                </Form.Control>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n\n          <Form.Row>\n            <Col md={6}>\n              <Form.Group>\n                <Form.Label>מספר מבחנים</Form.Label>\n                <Form.Control required as=\"select\" name=\"numOfTests\" onChange={(e) => {\n                  this.setState({numOfTests: e.target.value})\n                }} defaultValue={this.getCurrentValue('numOfTests')}>\n                  <option value={1}>1</option>\n                  <option value={2}>2</option>\n                </Form.Control>\n              </Form.Group>\n            </Col>\n            {this.state.numOfTests > 1 && (\n              <Col md={6}>\n                <Form.Group>\n                  <Form.Label>מרווח מינימלי בין מבחנים</Form.Label>\n                  <Form.Control required type=\"number\" name=\"daysGap\"\n                                defaultValue={\n                                  this.props.testToEdit ?\n                                    this.getCurrentValue('daysGap') :\n                                    this.props.session.defaultGap\n                                } step={1}\n                                min={2} max={365} //TODO: Change max to the number of days in the interval\n                  />\n                </Form.Group>\n              </Col>\n            )}\n\n          </Form.Row>\n          <Form.Row>\n            <Col md={6}>\n              <Form.Group>\n                <Form.Label>תאריך מינימלי</Form.Label>\n                <Form.Control required type=\"date\" format=\"DD-MM-YYYY\" name=\"minDate\"\n                              min={this.props.minDate} max={this.props.maxDate}\n                              defaultValue={\n                                this.props.testToEdit ?\n                                  this.getCurrentValue('minDate') :\n                                  this.props.minDate\n                              }/>\n              </Form.Group>\n            </Col>\n            <Col md={6}>\n              <Form.Group>\n                <Form.Label>תאריך מקסימלי</Form.Label>\n                <Form.Control required type=\"date\" format=\"DD-MM-YYYY\" name=\"maxDate\"\n                              min={this.props.minDate} max={this.props.maxDate}\n                              defaultValue={\n                                this.props.testToEdit ?\n                                  this.getCurrentValue('maxDate') :\n                                  this.props.maxDate\n\n                              }/>\n              </Form.Group>\n            </Col>\n          </Form.Row>\n\n          {range(0, this.state.numOfOptionalTimes-1).map(i => {\n            return (\n              <Form.Row>\n                <Col md={4}>\n                  <Form.Group>\n                    {i === 0 && <Form.Label>יום</Form.Label>}\n                    <Form.Control required key={i} as=\"select\"\n                                  name={\"optionalDaysInWeek\" + i.toString()}\n                                  defaultValue={this.getCurrentValue(\"optionalDaysInWeek\" + i.toString())}\n                    >\n                      {Object.entries(daysInWeek).map(entry => (\n                        <option value={entry[0]} key={entry[0]}>{entry[1]}</option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </Col>\n                <Col md={4}>\n                  <Form.Group>\n                    {i === 0 && <Form.Label>שעת התחלה</Form.Label>}\n                    <Form.Control required key={i} type=\"number\" name={\"optionalStartHours\" + i.toString()}\n                                  defaultValue={\n                                    this.props.testToEdit ?\n                                      this.getCurrentValue(\"optionalStartHours\" + i.toString()) :\n                                      this.props.session.startHour\n                                  } step={1}\n                                  min={this.props.session.startHour} max={this.props.session.endHour}\n                    />\n                  </Form.Group>\n                </Col>\n                <Col md={4}>\n                  <Form.Group>\n                    {i === 0 && <Form.Label>שעת סיום</Form.Label>}\n                    <Form.Control requiredkey={i} type=\"number\" name={\"optionalEndHours\" + i.toString()}\n                                  step={1} defaultValue={\n                      this.props.testToEdit ?\n                        this.getCurrentValue(\"optionalEndHours\" + i.toString()) :\n                        this.props.session.endHour\n                    }\n                                  min={this.props.session.startHour} max={this.props.session.endHour} //TODO: Change max to the number of days in the interval\n                    />\n                  </Form.Group>\n                </Col>\n              </Form.Row>\n            )\n          })}\n\n          <Form.Row>\n            <Col md={3}>\n              <Button onClick={(event) => {\n                this.setState({numOfOptionalTimes: this.state.numOfOptionalTimes + 1});\n              }}>הוסף מועד</Button>\n            </Col>\n            <Col md = {3}>\n              {this.state.numOfOptionalTimes > 1 &&\n              <Button onClick={(event) => {\n                this.setState({numOfOptionalTimes: this.state.numOfOptionalTimes - 1})\n              }}>מחק מועד</Button>}\n            </Col>\n          </Form.Row>\n\n          <Form.Row>\n            <Col md={3}>\n              <Button type=\"Submit\">{this.props.testToEdit ? \"עדכן מבחן\" : \"הוסף מבחן\"}</Button>\n            </Col>\n          </Form.Row>\n        </Form>\n      </Container>\n    )\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const msg = {\n      label: e.target.label.value,\n      session: this.props.session.id,\n      subject: e.target.subject.value,\n      participatingClasses:  [[...e.target.participatingClasses.options].filter(o => o.selected).map(o => o.value)],\n      numOfTests: e.target.numOfTests.value,\n      daysGap: this.state.numOfTests > 1 ? e.target.daysGap.value : 0,\n      minDate: e.target.minDate.value,\n      maxDate: e.target.maxDate.value,\n      optionalDaysInWeek: [range(0, this.state.numOfOptionalTimes-1)\n        .map( i => e.target['optionalDaysInWeek' + i].value)],\n      optionalStartHours: [range(0, this.state.numOfOptionalTimes-1)\n        .map( i => e.target['optionalStartHours' + i].value)],\n      optionalEndHours: [range(0, this.state.numOfOptionalTimes-1)\n        .map( i => e.target['optionalEndHours' + i].value)],\n      difficulty: 5, //TODO\n    }\n\n    if (this.props.testToEdit){\n      msg['id'] = this.props.testToEdit.id;\n    }\n\n    axios.post(process.env.REACT_APP_API_URL + '/tests', msg)\n      .catch(function (error) {\n        console.error(error);\n        alert(error);\n      })\n      .then(() => {\n        if (this.props.afterSend){\n          this.props.afterSend()\n        }\n\n      })\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  session : state.session.items,\n  subjects : state.subjects.items,\n  classes : state.classes.items,\n  minDate: formatDateForForms(state.session.items.startDate),\n  maxDate: formatDateForForms(state.session.items.endDate),\n})\nexport default connect(mapStateToProps)(TestForm);\n","import React, {Component} from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"./ScheduleCalendar.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./react-contextmenu.css\"\nimport Sidebar from \"react-sidebar\";\nimport axios from \"axios\";\nimport PrintSchedule from \"./PrintSchedule\";\nimport {connect} from \"react-redux\";\nimport List from \"react-list-select\";\nimport MaterialTitlePanel from \"./material_title_panel\";\nimport {\n  fetchSavedSchedules,\n  fetchScheduledTests,\n  fetchSession,\n  resetSchedule,\n  scheduleTest,\n  unscheduleTest\n} from \"../../actions\";\nimport {daysBetween, formatDateForForms, groupBy, isEmpty, longestCommonStartingSubstring, Sleep} from \"../../utils/utils\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEraser, faLock, faPlus, faRobot, faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport {Event, parseDateString, styles} from \"./helpers\";\nimport {ModalForm} from \"../../utils/ModalForm\";\nimport AddBlockers from \"../../SessionConfiguration/BlockerForm\";\nimport AddTests from \"../../SessionConfiguration/TestForm\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport {ContextMenu, ContextMenuTrigger, MenuItem} from \"react-contextmenu\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport {NoPrint, PrintProvider, Print} from \"react-easy-print\";\n\nconst localizer = BigCalendar.momentLocalizer(moment);\n\n\n\nclass ScheduleCalendar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.props.dispatch(fetchSession());\n\n    this.state = {\n      optionalDays: [],\n      selectedTestId: null,\n      scheduledTests: [],\n      testEvents: [],\n      filteredClassOnSchedule: null,\n      modalFormData: {\n        type: null,\n        props: null\n      },\n      blockerModalShow: false, testModalShow: false\n    };\n    this.customDayPropGetter = this.customDayPropGetter.bind(this)\n    this.SidebarContent = this.SidebarContent.bind(this)\n    this.closeModals = this.closeModals.bind(this)\n\n  }\n\n\n  closeModals() {\n    this.setState({blockerModalShow: false, testModalShow: false})\n    this.setState({modalFormData: {\n        type: null,\n        props: null\n      }})\n    this.props.dispatch(fetchSession())\n  }\n\n  fetch_delete(endPoint, id) {\n    fetch(process.env.REACT_APP_API_URL + endPoint, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({id: id})\n    })\n      .catch(console.error)\n      .then(() => (this.props.dispatch(fetchSession())));\n  }\n\n  SidebarContent = props => {\n    const style = props.style\n      ? { ...styles.sidebar, ...props.style }\n      : styles.sidebar;\n\n    let subjectsDiv = []\n\n\n    const testsGroupedBySubject = groupBy(props.testsToSchedule, info => info.test.subject);\n    const subjectIdsSortedList = isEmpty(this.props.subjectsDict) ? [] : Object.keys(testsGroupedBySubject).sort(\n      (a, b) => this.props.subjectsDict[a].name > this.props.subjectsDict[b].name ? 1 : -1\n    );\n    subjectIdsSortedList.forEach(subjectId => {\n      let test_div = [];\n      let test_div_ids = [];\n      const testsOfSubject = testsGroupedBySubject[subjectId];\n\n      testsOfSubject.forEach(info => {\n        const test = info.test;\n        test_div_ids.push(test.id);\n        const numOfOptionalDates = info.optionalDates.length;\n        const color = numOfOptionalDates > 0 ? 'blue' : 'red';\n        test_div.push(\n          (<div className=\"test\">\n            <ContextMenuTrigger id={\"test\" + test.id.toString()}>\n              <div className=\"name\">\n                <span style={{color: color}}>[{numOfOptionalDates}]</span>\n                {test.name} - ({info.howManyLeft} מתוך {test.numOfTests})\n              </div>\n              <div className=\"classes\">\n                {test.participatingClasses.map(cls => {\n                  return props.classesDict[cls] ? props.classesDict[cls].name : '';\n                }).join(', ')}\n              </div>\n            </ContextMenuTrigger>\n          </div>)\n        )\n      });\n\n      let selectedTestIndInList = test_div_ids.indexOf(this.state.selectedTestId)\n      let list = (\n        <List\n          items={test_div}\n          selected={[selectedTestIndInList]}\n          disabled={[]}\n          multiple={false}\n          onChange={(selected) => {\n            this.setState({\n              selectedTestId: test_div_ids[selected],\n            })\n            fetch(process.env.REACT_APP_API_URL + '/finddate?' +\n              'testid='+test_div_ids[selected].toString()\n            )\n              .then(response => response.json())\n              .then(res => {\n                const days = res.map(date => {\n                  return parseDateString(date);\n                });\n                this.setState({\n                  optionalDays: days\n                });\n                if (res.length === 0){\n                  window.alert('לא נותרו תאריכים אפשריים למבחן זה')\n                }\n\n              })\n              .catch(console.error)\n          }}\n        />)\n\n      subjectsDiv.push(\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey={subjectId}>\n            {this.props.subjectsDict[subjectId] ? this.props.subjectsDict[subjectId].name : ''}\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey={subjectId}>\n            <Card.Body style={{padding: 0}}>{list}</Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      )\n    })\n\n    return (\n      <MaterialTitlePanel title={\n        <>\n          <div>\n                    <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faSave} onClick={() => {\n                          const name = prompt('בחר שם:')\n                          if (name.length > 0){\n                            axios.post(\n                              process.env.REACT_APP_API_URL + '/schedulerstatestore',\n                              {name}\n                            )\n                            // .then(() => Sleep(500))\n                              .then(this.props.dispatch(fetchSavedSchedules()))\n                              .catch(console.error)\n                          }\n                        }}/>\n                    </span>\n            <span style={{margin: '15px'}}><FontAwesomeIcon icon={faEraser} onClick={()=>{this.props.dispatch(resetSchedule())}}/></span>\n            <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faRobot} onClick={()=>{\n                          // const interval = setInterval(() => this.props.dispatch(fetchScheduledTests()), 300);\n                          fetch(process.env.REACT_APP_API_URL + '/runscheduler')\n                            .then(() => {\n                              Sleep(300);\n                              this.props.dispatch(fetchScheduledTests())\n                            })\n                            .catch(console.error)\n                        }}/>\n                    </span>\n            <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faPlus} onClick={() => this.showTestForm()}/>\n                    </span>\n            <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faLock} onClick={() => this.showBlockerForm()}/>\n                    </span>\n          </div>\n        </>\n\n      } style={style}>\n        <ModalForm title=\"הוסף אילוץ\"\n                   show={this.state.modalFormData.type === \"blocker\"}\n                   onHide={this.closeModals}>\n          <AddBlockers afterSend={this.closeModals} {...this.state.modalFormData.props}/>\n        </ModalForm>\n        <ModalForm title=\"הוסף מבחן\"\n                   show={this.state.modalFormData.type === \"test\"}\n                   onHide={this.closeModals}>\n          <AddTests afterSend={this.closeModals} {...this.state.modalFormData.props}/>\n        </ModalForm>\n\n\n        <div>\n          <Accordion>\n            {subjectsDiv}\n          </Accordion>\n\n        </div>\n      </MaterialTitlePanel>\n    );\n  };\n\n  customDayPropGetter(date) {\n    if (this.state.optionalDays.includes(date.getTime())){\n      return {\n        className: 'special-day',\n        style: {\n          border: 'solid 3px #afa',\n        },\n      }\n\n    }\n    else return {}\n  }\n\n\n\n  render() {\n    const sidebar = <this.SidebarContent testsToSchedule={this.props.testsToSchedule} classesDict={this.props.classesDict}/>;\n    const sidebarProps = {\n      sidebar,\n      docked: true,\n      sidebarClassName: \"custom-sidebar-class\",\n      contentId: \"custom-sidebar-content-id\",\n      open: true,\n      touch: true,\n      shadow: false,\n      pullRight: true,\n      transitions: true,\n    };\n    const startDate = moment(this.props.session.startDate);\n    const endDate = moment(this.props.session.endDate);\n\n    const dates = [];\n\n    if (endDate.isBefore(startDate)) {\n      throw \"End date must be greater than start date.\"\n    }\n\n    while (startDate.isBefore(endDate)) {\n      dates.push(startDate.format(\"YYYY-MM-01\"));\n      startDate.add(1, 'month');\n    }\n    // console.log(dates)\n    const calendarsBody = dates.map(date => (\n      <div style={styles.content}>\n        {this.getBigCalendar(new Date(date))}\n      </div>\n\n    ));\n    return (\n      <PrintProvider>\n        <PrintSchedule {...this.props}/>\n        <NoPrint>\n          <Sidebar {...sidebarProps} styles={{root: {margin: '0 15px'}}} >\n            <MaterialTitlePanel title={\n              <div>\n                <span>רמת קושי: {this.props.scheduleDifficulty}</span>\n                <ButtonToolbar>\n                  <DropdownButton id=\"dropdown-basic-button\"\n                                  variant=\"secondary\" title=\"עבור ללוח שמור\">\n                    {this.props.savedSchedules.map(savedSchedule => {\n                      const daysPassed = daysBetween(new Date(), new Date(savedSchedule.dateSaved));\n                      return (\n                        <Dropdown.Item onSelect={() => (\n                          this.props.dispatch(\n                            fetchScheduledTests('?storeid=' + savedSchedule.storeid)\n                          )\n                        )}>{savedSchedule.name + \" - \" }\n                          <em>{\"נשמר לפני \" + `${daysPassed}` + ' ימים'}</em>\n                        </Dropdown.Item>\n                      );\n                    })}\n                  </DropdownButton>\n                  <Button onClick={() => {\n                    fetch(process.env.REACT_APP_API_URL + '/debug').then(r =>\n                      this.props.dispatch(fetchScheduledTests()))\n                  }}>שפר שיבוצים</Button>\n                  <Button onClick={() => {\n                    this.props.history.push(\"/selectsession\")\n                  }}>בחר לוח שנה אחר</Button>\n\n                </ButtonToolbar>\n              </div>\n            }>\n              <Tabs defaultActiveKey=\"all\" id=\"classesFilterTabs\" onSelect={key => {\n                if (key === \"all\"){\n                  this.setState({filteredClassOnSchedule: null})\n                } else {\n                  this.setState({filteredClassOnSchedule: parseInt(key)})\n                }\n              }}>\n                <Tab eventKey=\"all\" title=\"כל הכיתות\"/>\n                {this.props.classes.map(cls => {\n                  return (\n                    <Tab eventKey={cls.id} title={cls.name}/>\n                  );\n                })}\n              </Tabs>\n              {calendarsBody}\n            </MaterialTitlePanel>\n\n          </Sidebar>\n          {\n            this.props.tests.filter(test => test.id).map(test => (\n              <ContextMenu id={\"test\" + test.id.toString()} rtl>\n                <MenuItem onClick={() => this.showTestForm({\n                  testToEdit: this.props.testsDict[test.id]\n                })}>\n                  <div>ערוך</div>\n                </MenuItem>\n                {/*<MenuItem onClick={console.log}>*/}\n                {/*    נעל*/}\n                {/*</MenuItem>*/}\n                <MenuItem onClick={() => this.fetch_delete('/tests', test.id)}>\n                  מחק\n                </MenuItem>\n                {/*<MenuItem divider />*/}\n              </ContextMenu>\n            ))}\n          {\n            this.props.blockers.map(blocker => (\n              <ContextMenu id={\"blocker\" + blocker.id.toString()} rtl>\n                <MenuItem onClick={() => this.showBlockerForm({\n                  blockerToEdit: this.props.blockersDict[blocker.id]\n                })}>\n                  <div>ערוך</div>\n                </MenuItem>\n                <MenuItem onClick={() => this.fetch_delete('/blockers', blocker.id)}>\n                  מחק\n                </MenuItem>\n                {/*<MenuItem divider />*/}\n              </ContextMenu>\n            ))\n          }\n        </NoPrint>\n      </PrintProvider>\n    );\n  }\n\n  getBigCalendar(defaultDate, style={}) {\n    return <BigCalendar\n      popup\n      selectable\n      localizer={localizer}\n      defaultDate={defaultDate}\n      defaultView=\"month\"\n      views={{month: true}}\n      events={[\n        ...this.props.blockerEvents.filter(\n          e => this.state.filteredClassOnSchedule === null ||\n            e.blocker.participatingClasses.includes(this.state.filteredClassOnSchedule)\n        ),\n        ...this.props.testEvents.filter(\n          e => this.state.filteredClassOnSchedule === null ||\n            e.test.participatingClasses.includes(this.state.filteredClassOnSchedule)\n        )]}\n      style={{height: \"600px\", ...style}}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n      onSelectEvent={(event, e) => {\n        if (event.type === 'test') {\n          let date = event.start;\n          date.setHours(0, 0, 0, 0);\n          this.props.dispatch(unscheduleTest(event.id, date))\n          this.setState({\n            selectedTestId: null,\n            optionalDays: []\n          })\n        }\n      }}\n      onSelectSlot={(slotInfo) => {\n        if (this.state.selectedTestId !== null){\n          const isAnOption = this.state.optionalDays.includes(parseDateString(slotInfo['start']));\n          if (isAnOption) {\n            this.props.dispatch(scheduleTest(this.state.selectedTestId, slotInfo.start))\n\n            this.setState({\n              selectedTestId: null,\n              optionalDays: []\n            })\n\n          }\n        }\n        else {\n          this.showBlockerForm({\n            wantedDates: {\n              start: formatDateForForms(slotInfo.start),\n              end: formatDateForForms(slotInfo.end)\n            }\n          })\n        }\n      }}\n      components={{\n        event: Event\n      }}\n      dayPropGetter={this.customDayPropGetter}\n      rtl={true}\n\n    />;\n  }\n\n  showTestForm(testFormProps = null) {\n    this.setState({modalFormData: {\n        type: 'test',\n        props: testFormProps\n      }})\n  }\n\n  showBlockerForm(blockerFormProps = null) {\n    this.setState({modalFormData: {\n        type: 'blocker',\n        props: blockerFormProps\n      }})\n  }\n}\n\nconst mapStateToProps = (state) => {\n  let classesDict = state.classes.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n  let testsDict = state.tests.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n  let blockersDict = state.blockers.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n  let subjectsDict = state.subjects.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n  return ({\n    session: state.session.items,\n    subjects: state.subjects.items,\n    classes: state.classes.items,\n    blockers: state.blockers.items,\n    tests: state.tests.items,\n    classesDict,\n    testsDict,\n    blockersDict,\n    subjectsDict,\n    scheduleDifficulty: state.schedule.difficulty,\n    scheduledTests: state.schedule.scheduledTests,\n    savedSchedules: state.savedSchedules.items,\n    testsToSchedule: state.tests.items.map(\n      test => {\n        const alreadyScheduledCount = state.schedule.scheduledTests.filter(st => st.id === test.id).length;\n        const howManyNeeded = test.numOfTests;\n        if (howManyNeeded > alreadyScheduledCount){\n\n          let unscheduledTestsOption = state.schedule.unscheduledTestsOptions[test.id];\n          unscheduledTestsOption = unscheduledTestsOption ? unscheduledTestsOption : [];\n          return {\n            test: test,\n            howManyLeft: howManyNeeded - alreadyScheduledCount,\n            optionalDates: unscheduledTestsOption.map(parseDateString)\n          }\n        }\n        else {\n          return null;\n        }\n      }\n    ).filter(i => i != null),\n    blockerEvents:\n      state.blockers.items\n      // .filter(blocker => )\n        .reduce((ar, blocker) => {\n          ar = [...ar,\n            ...blocker.startDates.map((_, i) => ({\n              title: blocker.name,\n              start: new Date(blocker.startDates[i]),\n              end: new Date(blocker.endDates[i]),\n              type: 'blocker',\n              id: blocker.id,\n              blocker: blocker\n            }))\n          ];\n          return ar;\n        }, []),\n    testEvents:\n      state.schedule.scheduledTests\n        .filter(info => testsDict[info.id])\n        .map(scheduledTestInfo => {\n          const id = scheduledTestInfo.id;\n          const date = scheduledTestInfo.date;\n          if (isEmpty(testsDict)){\n            return []\n          }\n          const scheduledTest = testsDict[id];\n          const testName = scheduledTest ? scheduledTest.name : '';\n          const commonStartingSubstringInClassNames = longestCommonStartingSubstring(\n            state.classes.items.map(cls => cls.name)\n          )\n          return {\n            title: testName + ' (' + scheduledTest.participatingClasses.map(cls => {\n              return classesDict[cls] ?\n                classesDict[cls].name.replace(commonStartingSubstringInClassNames,'') : '';\n            }).join(', ') + ')',\n            start: new Date(date),\n            end: new Date(date),\n            type: 'test',\n            id: id,\n            test: scheduledTest\n          }\n        })\n  });\n}\n\nexport default connect(mapStateToProps)(ScheduleCalendar);","import React from \"react\";\nimport axios from 'axios/index';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { connect } from 'react-redux'\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\n// import Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport {fetchSession} from \"../actions\";\nimport {faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\n\nclass SetupSession extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      subjects: ['קוסמות', 'שיקויים'], classes: ['א1', 'א2'],\n      defaults: {\n        sessionName: '',\n        minDate: '2019-01-01', maxDate: '2019-05-01', daysGap: 30, numOfHours: 1, isZeroHour: false\n      }\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({\n      defaults: {...this.state.defaults, [name]: value}\n    });\n  }\n\n  sendSession = (e) => {\n    e.preventDefault();\n    const msg = {\n      subjects: [this.state.subjects],\n      classes: [this.state.classes],\n      ...this.state.defaults\n    }\n    axios.post(process.env.REACT_APP_API_URL + '/initsession', msg)\n      .then(res => res.data)\n      .then(res => this.props.dispatch(fetchSession(res.session)))\n      .then(() => this.props.history.push('/subjects'))\n      .catch(console.error);\n  }\n\n\n  render(){\n    const DefaultsForm = <Form>\n      <Form.Row>\n        <Col md={12}>\n          <Form.Group>\n            <Form.Label>כינוי</Form.Label>\n            <Form.Control type=\"text\" required\n                          value={this.state.sessionName} name=\"sessionName\"\n                          onChange={this.handleInputChange}\n                          maxLength={100}\n            />\n          </Form.Group>\n        </Col>\n        <Col md={6}>\n          <Form.Group>\n            <Form.Label>תאריך התחלה</Form.Label>\n            <Form.Control required type=\"date\"\n                          value={this.state.defaults.minDate} name=\"minDate\"\n                          onChange={this.handleInputChange}\n            />\n          </Form.Group>\n        </Col>\n        <Col md={6}>\n          <Form.Group>\n            <Form.Label>תאריך סיום</Form.Label>\n            <Form.Control required type=\"date\" value={this.state.defaults.maxDate} name=\"maxDate\"\n                          onChange={this.handleInputChange}\n            />\n          </Form.Group>\n        </Col>\n      </Form.Row>\n      <Form.Row>\n        <Col md={6}>\n          <Form.Group >\n            <Form.Label>מרווח מינימלי בין מבחנים באותו המקצוע</Form.Label>\n            <Form.Control required type=\"number\" name=\"daysGap\" value={this.state.defaults.daysGap}\n                          step={1}\n                          min={2} max={365} //TODO: Change max to the number of days in the interval\n                          onChange={this.handleInputChange}\n            />\n          </Form.Group>\n        </Col>\n      </Form.Row>\n      <Form.Row>\n        <Col md={6}>\n          <Form.Group>\n            <Form.Label>מספר שעות ביום</Form.Label>\n            <Form.Control required type=\"number\" name=\"numOfHours\"\n                          value={this.state.defaults.numOfHours} min={1}\n                          onChange={this.handleInputChange}\n            />\n          </Form.Group>\n        </Col>\n      </Form.Row>\n      <Form.Row>\n        <Col md={6}>\n          <Form.Group>\n            <Form.Check name=\"isZeroHour\" type=\"checkbox\" checked={this.state.defaults.isZeroHour}\n                        label=\"יש שעת אפס\"\n                        onChange={this.handleInputChange}\n            />\n          </Form.Group>\n        </Col>\n\n\n      </Form.Row>\n    </Form>;\n    return(\n      <Container style={{width: \"70%\"}}>\n        <h1>הגדרות</h1>\n        <Card>\n          <h2>הגדרות כלליות</h2>\n          <Card.Body>\n            {DefaultsForm}\n          </Card.Body>\n        </Card>\n        <Card>\n          <h2>כיתות</h2>\n          <Card.Body>\n            <List title=\"כיתות\" sendText=\"הוסף כיתה\" maxInputLength={5}\n                  setParentList={list => this.setState({classes: list})}/>\n          </Card.Body>\n        </Card>\n        <Card>\n          <h2>מקצועות</h2>\n          <Card.Body>\n            <List title=\"מקצועות\" sendText=\"הוסף מקצוע\" maxInputLength={20}\n                  setParentList={list => this.setState({subjects: list})}/>\n          </Card.Body>\n        </Card>\n        <Button onClick={this.sendSession}>שמור והמשך להגדרת אשכלות</Button>\n\n\n      </Container>\n    )\n  }\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {text: '', list:[]};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // this.props.dispatch(fetchSubjects);\n  }\n\n\n  render() {\n    return (\n      <div>\n        {/*<h2>{this.props.title}</h2>*/}\n        <ul>\n          {this.state.list.map((item, idx) => {\n            return (\n              <li key={`item-${idx}`}>\n                <FontAwesomeIcon icon={faTrashAlt}\n                                 onClick={() => this.deleteElement(idx)}\n                                 style={{marginLeft: \"10px\"}}\n                />\n                {item}\n              </li>\n            )\n          })}\n        </ul>\n        <form>\n          <input\n            maxLength={this.props.maxInputLength ? this.props.maxInputLength : 100}\n            id=\"new-todo\"\n            onChange={this.handleChange}\n            value={this.state.text}\n          />\n          <Button type=\"submit\" onClick={this.handleSubmit}>\n            {this.props.sendText}\n          </Button>\n        </form>\n      </div>\n    )\n  }\n\n  handleChange(e) {\n    this.setState({ text: e.target.value });\n  }\n\n  deleteElement(idx) {\n    let list = [...this.state.list];\n    list.splice(idx, 1);\n    this.setState({list})\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (!this.state.text.length) {\n      return;\n    }\n    const newList = [...this.state.list, this.state.text]\n    this.setState({list: newList})\n    this.props.setParentList(newList)\n    this.setState(() => ({\n      text: ''\n    }));\n\n\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  // subjects : state.subjects.items\n})\n\nexport default connect(mapStateToProps)(SetupSession);","import React, {Component} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport {Link} from \"react-router-dom\";\nimport {fetchSession} from \"../actions\";\nimport axios from \"axios\";\n\nfunction sendSelectSession(sessionId){\n  const msg = {session: sessionId}\n  return axios.post(process.env.REACT_APP_API_URL + '/selectsession', msg)\n    .catch(console.error)\n}\n\n\nexport class SessionCard extends Component<{}> {\n  render() {\n    const session = this.props.session;\n    return <div>\n      <Card style={{width: \"30%\"}}>\n        <Card.Body>\n          <Card.Title>{session.info.name}</Card.Title>\n          {/*<Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>*/}\n          <Card.Text>\n            <strong>כיתות: </strong>\n            {session.classes.map(cls => cls.name).join(', ')}\n          </Card.Text>\n          <Card.Text>\n            <strong>מקצועות: </strong>\n            {session.subjects.map(cls => cls.name).join(', ')}\n          </Card.Text>\n          <Card.Text>\n            {/*<strong>מקצועות: </strong>*/}\n            מתחיל ב- {new Date(session.info.startDate).toLocaleDateString('he-IL')}\n            &nbsp;\n            ונגמר ב- {new Date(session.info.endDate).toLocaleDateString('he-IL')}\n          </Card.Text>\n          <Card.Text style={{color: 'red'}}>\n            להוסיף גם שעות ומרווח\n          </Card.Text>\n          <Card.Text>\n            <Link to='/calendar' onClick={() => {\n              sendSelectSession(session.info.id)\n                .then(() => this.props.dispatch(fetchSession()))\n            }}>\n              בחר לוח מבחנים\n            </Link>\n          </Card.Text>\n          <Card.Text>\n            <Link to=\"#\">\n              שכפל וערוך\n            </Link>\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>;\n  }\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport {SessionCard} from \"./SessionCard\";\n\n\nclass SelectSession extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      sessions: []\n    };\n    fetch(process.env.REACT_APP_API_URL + '/sessionslist')\n      .then(res => res.json())\n      // .then(console.log)\n      .then(sessions => this.setState({sessions: sessions}))\n    // .then(sessions => sessions.map(sess => ))\n  }\n\n  render() {\n    return (\n      <Container>\n        <div>\n          <Button variant=\"primary\" size=\"lg\" active\n                  onClick={()=>this.props.history.push(\"/sessionsetup\")}\n          >\n            צור לוח מבחנים חדש\n          </Button>\n        </div>\n        <div>\n          או המשך עבודה על לוח קיים\n        </div>\n        <div>\n          {this.state.sessions.map(sess => <SessionCard dispatch={this.props.dispatch} key={sess.info.id} session={sess}/>)}\n        </div>\n      </Container>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  // subjects : state.subjects.items\n})\n\nexport default connect(mapStateToProps)(SelectSession);","import React, {Component} from \"react\";\nimport { connect } from 'react-redux'\nimport {HashRouter, Switch, Route} from \"react-router-dom\";\nimport './App.css'\nimport Subjects from \"../Subjects/Subjects\";\nimport ScheduleCalendar from \"../ScheduleCalendar/ScheduleCalendar\";\nimport PropTypes from \"prop-types\";\nimport SessionSetup from \"../../SessionConfiguration/SetupSession\";\nimport SelectSession from \"../../SessionSelection/SelectSession\";\nclass AsyncApp extends Component{\n  componentDidMount(): void {\n  }\n\n  render() {\n    return(\n      <>\n        <HashRouter basename={'/'}>\n          <div style={{alignItems: \"\"}}>\n            {/*<li><Link to=\"/\">Home</Link></li>*/}\n            {/*<li><Link to=\"/selectsession\">selectsession</Link></li>*/}\n            {/*/!*<nav>*!/*/}\n            {/*/!*    <Navbar bg=\"light\" variant=\"light\">*!/*/}\n            {/*/!*        <Navbar.Brand href=\"/selectsession\">החלף לוח מבחנים</Navbar.Brand>*!/*/}\n            {/*/!*        <Nav className=\"mr-auto\">*!/*/}\n            {/*/!*            <NavRouterLink to=\"/session\">סשן</NavRouterLink>*!/*/}\n            {/*/!*            <NavRouterLink to=\"/addtests\">הגדרת מבחנים</NavRouterLink>*!/*/}\n            {/*/!*            <NavRouterLink to=\"/addblockers\">הגדרת אילוצים</NavRouterLink>*!/*/}\n            {/*/!*            <NavRouterLink to=\"/calendar\">שיבוצים</NavRouterLink>*!/*/}\n            {/*/!*        </Nav>*!/*/}\n            {/*/!*    </Navbar>*!/*/}\n            {/*/!*</nav>*!/*/}\n            {/*<hr />*/}\n            <Switch>\n              <Route exact path=\"/\" component={SelectSession}/>\n              {/*<Route path=\"/home\" component={Home}/>*/}\n              <Route path=\"/subjects\" component={Subjects}/>\n              <Route path=\"/calendar\" component={ScheduleCalendar}/>\n              {/*<Route path=\"/addtests\" component={AddTests}/>*/}\n              {/*<Route path=\"/addblockers\" component={AddBlockers}/>*/}\n              <Route path=\"/sessionsetup\" component={SessionSetup}/>\n              <Route path=\"/selectsession\" component={SelectSession}/>\n              {/*<Route path=\"/session\" component={SessionHome}/>*/}\n              <Route component={() => (<div>404 Not found </div>)} />\n            </Switch>\n          </div>\n        </HashRouter>\n\n      </>\n    )\n  }\n}\n\nAsyncApp.propTypes = {\n  items: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  dispatch: PropTypes.func.isRequired\n}\n\nfunction mapStateToProps(state) {\n  const { subjects, session } = state\n  const { isFetching, items } = subjects\n  return {\n    session,\n    items,\n    isFetching,\n  }\n}\n\n\nexport default connect(mapStateToProps)(AsyncApp)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. ScheduleCalendar is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport {\n    // INIT_SESSION,\n    RECEIVE,\n    REQUEST,\n    SCHEDULE,\n    UNSCHEDULE\n} from \"../actions\";\n\nfunction ReducerCreator(name){\n    return function (\n      state = {\n          isFetching: false,\n          items: []\n      },\n      action\n    ) {\n        switch (action.type) {\n            case REQUEST + '_' + name.toUpperCase():\n                return Object.assign({}, state, {\n                    isFetching: true,\n                })\n            case RECEIVE + '_' + name.toUpperCase():\n                return Object.assign({}, state, {\n                    isFetching: false,\n                    items: action.items,\n                    lastUpdated: action.receivedAt\n                })\n            default:\n                return state\n        }\n    }\n\n}\n\nfunction schedulerState (\n  state = {\n      isFetching: false,\n      scheduledTests: [],\n      unscheduledTestsOptions: {},\n      difficulty: 0,\n      horizon: true\n  },\n  action\n)\n{\n    // console.log(action);\n    switch (action.type) {\n      // case SCHEDULE:\n      //     return Object.assign({}, state, {\n      //         scheduledTests: [\n      //             ...state.scheduledTests,\n      //             {id: action.id, date: action.date}\n      //         ],\n      //     })\n      // case UNSCHEDULE:\n      //     return Object.assign({}, state, {\n      //         scheduledTests: [\n      //             ...state.scheduledTests.filter(st => {\n      //                 return (st.id !== action.id ||\n      //                     st.date.toString() !== action.date.toString());\n      //             })\n      //         ],\n      //     })\n        case REQUEST + '_SCHEDULE':\n            return Object.assign({}, state, {\n                isFetching: true,\n            })\n        case RECEIVE + '_SCHEDULE':\n            return Object.assign({}, state, {\n                isFetching: false,\n                difficulty: action.items.difficulty,\n                scheduledTests: action.items.scheduledTests.map(item => {\n                    const date = new Date(item.date);\n                    date.setHours(0,0,0,0)\n                    return ({id: item.id, date: date});\n                }),\n                unscheduledTestsOptions: action.items.unscheduledTestsOptions,\n                // lastUpdated: action.receivedAt\n            })\n\n        default:\n            return state\n\n    }\n}\n\n// function session(state = {id: null}, action) {\n//     if (action.type === INIT_SESSION) {\n//         console.log(action)\n//         return Object.assign({}, state, {\n//             id: action.sessionId,\n//         })\n//     } else {\n//         return state;\n//     }\n// }\n\nexport default combineReducers({\n    session: ReducerCreator('Session'),\n    subjects: ReducerCreator('Subjects'),\n    classes : ReducerCreator('Classes'),\n    blockers : ReducerCreator('Blockers'),\n    tests : ReducerCreator('Tests'),\n    savedSchedules : ReducerCreator('ScheduleStore'),\n    // scheduledTests : ReducerCreator('Scheduled_Tests'),\n    schedule: schedulerState\n})","import {createStore, applyMiddleware, compose} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\n\nexport default function configureStore(preloadedState) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  // const store = createStore(reducer, /* preloadedState, */ composeEnhancers(\n\n  return createStore(\n      rootReducer,\n      preloadedState,\n      composeEnhancers(\n      applyMiddleware(thunkMiddleware, loggerMiddleware)\n      )\n  )\n}\n\n","import 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}
{"version":3,"sources":["utils/utils.js","components/Subjects/Subjects.js","components/ScheduleCalendar/material_title_panel.js","actions/index.js","components/ScheduleCalendar/helpers.js","components/ModalForm.js","components/BlockerForm.js","components/TestForm.js","components/ScheduleCalendar/ScheduleCalendar.js","components/Home/Home.js","components/SetupSession.js","components/Cards/SessionCard.js","components/SelectSession.js","components/SessionHome.js","components/app/App.js","serviceWorker.js","reducers/index.js","configureStore.js","index.js"],"names":["Sleep","milliseconds","Promise","resolve","setTimeout","range","start","end","Array","fill","map","_","idx","Err","_ref","error","react_default","a","createElement","message","DisplayRemoteData","props","_useFetch","useFetch","url","data","utils_Err","preProcess","parserFunction","sortByName","list","sort","b","name","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","ColumnContainer","styled","div","_templateObject","SupTitle","_templateObject2","move","source","destination","droppableSource","droppableDestination","sourceClone","from","destClone","_sourceClone$splice","splice","index","removed","Object","slicedToArray","push","result","droppableId","Subjects","context","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","groupToListItem","group","item","id","content","subjects","get","addList","lists","state","concat","titles","setState","removeList","removedList","getList","parseInt","onDragEnd","toConsumableArray","getGroupedSubjectsRequest","Request","process","getSubjectsRequest","handleSubmit","bind","assertThisInitialized","fetch","then","response","json","initialGroupedSubjects","Map","v","value","initialNoGroup","initialGroups","title","_this2","key","index_es","icon","faTrashAlt","onClick","react_beautiful_dnd_esm","toString","provided","snapshot","ref","innerRef","style","isDraggingOver","background","padding","width","draggableId","assign","draggableProps","dragHandleProps","isDragging","draggableStyle","objectSpread","userSelect","grid","margin","color","placeholder","e","preventDefault","newGroups","gr","no_pars","shift","par_groups","isValid","forEach","i","alert","msg","no_parallels","parallel_groups","axios","post","catch","console","_this3","getColumnContainer","Button_default","Component","connect","session","isFetching","items","sessionId","styles","root","fontFamily","fontWeight","header","backgroundColor","fontSize","MaterialTitlePanel","rootStyle","children","REQUEST","RECEIVE","SCHEDULE","UNSCHEDULE","INIT_SESSION","FetchActionCreator","paramsUrlAddition","arguments","undefined","postprocessorFunction","dispatch","type","toUpperCase","receivedAt","now","receive","fetchSubjects","fetchClasses","fetchBlockers","fetchTests","fetchSessionInfo","fetchScheduledTests","fetchSavedSchedules","fetchSession","resetSchedule","sidebar","sidebarLink","display","textDecoration","divider","height","paddingTop","paddingBottom","Event","event","Fragment","es6","desc","parseDateString","setHours","getTime","ModalForm","_Component","apply","inherits","createClass","Modal_default","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","BlockerForm","numOfInstances","blockerToEdit","startDates","fieldName","blocker","startsWith","ind","replace","wantedDates","Container_default","Form","onSubmit","Row","Col","md","Group","Label","Control","required","defaultValue","getCurrentValue","as","multiple","classes","s","min","minDate","max","maxDate","es_Button","target","participatingClasses","options","filter","o","selected","participatingSubjects","endDates","afterSend","React","startDate","endDate","daysInWeek","0","1","2","3","4","5","TestForm","numOfOptionalTimes","testToEdit","numOfTests","test","controlId","onChange","defaultGap","step","format","entries","entry","startHour","endHour","requiredkey","label","subject","daysGap","optionalDaysInWeek","optionalStartHours","optionalEndHours","difficulty","localizer","BigCalendar","momentLocalizer","moment","ScheduleCalendar","SidebarContent","test_div","test_div_ids","testsToSchedule","info","numOfOptionalDates","optionalDates","className","howManyLeft","cls","classesDict","selectedTestIndInList","indexOf","selectedTestId","dist_default","disabled","res","days","optionalDays","window","material_title_panel","faSave","prompt","faEraser","faRobot","faPlus","showTestForm","faLock","showBlockerForm","ModalForm_ModalForm","modalFormData","closeModals","components_BlockerForm","components_TestForm","scheduledTests","testEvents","blockerModalShow","testModalShow","customDayPropGetter","includes","border","sidebarProps","docked","sidebarClassName","contentId","open","touch","shadow","pullRight","transitions","isBefore","add","react_sidebar_esm","scheduleDifficulty","ButtonToolbar_default","DropdownButton_default","variant","savedSchedules","savedSchedule","daysPassed","date1","date2","date1_ms","date2_ms","difference_ms","Math","abs","floor","daysBetween","dateSaved","Dropdown_default","Item","onSelect","storeid","r","history","getBigCalendar","rtl","testsDict","foo","log","blockerEvents","blockersDict","method","headers","Content-Type","body","JSON","stringify","defaultDate","react_big_calendar_esm","selectable","defaultView","views","events","startAccessor","endAccessor","onSelectEvent","testId","testid","unscheduleTest","onSelectSlot","slotInfo","components","dayPropGetter","testFormProps","blockerFormProps","reduce","cur","defineProperty","tests","blockers","schedule","alreadyScheduledCount","st","howManyNeeded","unscheduledTestsOption","unscheduledTestsOptions","ar","scheduledTestInfo","obj","hasOwnProperty","isEmpty","testToSchedule","ApiList","react","fallback","utils_DisplayRemoteData","Home","Home_ApiList","SetupSession","sendSession","defaults","sessionName","numOfHours","isZeroHour","handleInputChange","checked","DefaultsForm","Form_default","Col_default","Check","Card_default","SetupSession_List","sendText","setParentList","List","text","handleChange","newList","SessionCard","Text","toLocaleDateString","react_router_dom","to","sendSelectSession","SelectSession","sessions","active","sess","SessionCard_SessionCard","SessionHome","warn","components_ScheduleCalendar_ScheduleCalendar","AsyncApp","basename","alignItems","react_router","exact","path","component","AddTests","AddBlockers","SessionSetup","Boolean","location","hostname","match","ReducerCreator","action","lastUpdated","combineReducers","horizon","loggerMiddleware","createLogger","store","preloadedState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunkMiddleware","configureStore","ReactDOM","render","es","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59f9b68b.chunk.js","sourcesContent":["import {useFetch} from \"react-hooks-fetch\";\nimport React from \"react\";\n\nexport function Sleep(milliseconds) {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nexport function fillArray(value, length) {\n    return Array.from({ length }, () => value);\n}\n\n\nexport function range(start, end) {\n    return Array(end - start + 1).fill().map((_, idx) => start + idx)\n}\n\nconst Err = ({ error }) => <span>Error:{error.message}</span>;\n\nexport const DisplayRemoteData = (props) => {\n    let { error, data } = useFetch(props.url);\n    if (error) return <Err error={error} />;\n    if (!data) return null;\n    if (props.preProcess){\n        data = props.preProcess(data);\n    }\n    return data.map(props.parserFunction)\n};\n\nexport function sortByName(list) {\n    return list.sort((a, b) => (a.name > b.name) ? 1 : -1);\n}\n\nexport function isEmpty(obj) {\n    for(const key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\nexport function formatDate(date) {\n    var d = new Date(date);\n    let month = '' + (d.getMonth() + 1);\n    let day = '' + d.getDate();\n    let year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n    return [year, month, day].join('-');\n}\n\nexport function daysBetween(date1, date2) {\n\n    // The number of milliseconds in one day\n    var ONE_DAY = 1000 * 60 * 60 * 24;\n\n    // Convert both dates to milliseconds\n    var date1_ms = date1.getTime();\n    var date2_ms = date2.getTime();\n\n    // Calculate the difference in milliseconds\n    var difference_ms = Math.abs(date1_ms - date2_ms);\n\n    // Convert back to days and return\n    return Math.floor(difference_ms/ONE_DAY);\n\n}\n","import React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport \"./Subjects.css\";\nimport styled from \"styled-components\";\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios/index';\nimport {fillArray   } from \"../../utils/utils\";\nimport {connect} from \"react-redux\";\n\nconst ColumnContainer = styled.div`\n  margin: 10px;\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  // width: 50%;\n  display: flex;\n  flex-direction: column;\n`;\nconst SupTitle = styled.div`\n  padding: 10px;\n`;\n\n/**\n * Moves an item from one list to another list.\n */\nconst move = (source, destination, droppableSource, droppableDestination) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.push(removed);\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    return result;\n};\n\nconst grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // some basic styles to make the items look a bit nicer\n    userSelect: 'none',\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? 'lightgreen' : 'grey',\n    color: isDragging ? 'black' : 'white',\n\n    // styles we need to apply on draggables\n    ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? 'lightblue' : 'lightgrey',\n    padding: grid,\n    width: 250\n});\n\n\n\n\nclass Subjects extends Component {\n\n    constructor(props: P, context: any) {\n        super(props, context);\n        this.getGroupedSubjectsRequest = new Request(\n            process.env.REACT_APP_API_URL + '/groupedSubjects');\n        this.getSubjectsRequest = new Request(\n            process.env.REACT_APP_API_URL + '/subjects');\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            lists: [[]],\n            titles: ['מקצועות ליבה'],\n        }\n        fetch(this.getGroupedSubjectsRequest)\n            .then(response => response.json())\n            .then(data => {\n                this.initialGroupedSubjects = data;\n            }).then(() => {\n            fetch(this.getSubjectsRequest)\n                .then(response => response.json())\n                .then(data => {\n                    this.subjects = new Map(data.map(v => [v.id, v.name]));\n                }).then(\n                () => {\n                    this.initialNoGroup = this.initialGroupedSubjects['no_group'];\n                    this.initialGroups = this.initialGroupedSubjects['groups'];\n                    // console.log(this.initialGroupedSubjects)\n                    this.setState( {\n                            lists: Array(this.groupToListItem(this.initialNoGroup)).concat(\n                                this.initialGroups.map(group => this.groupToListItem(group))\n                            ),\n                            titles: ['מקצועות ליבה'].concat(fillArray('אשכול מגמות', this.initialGroups.length))\n                        }\n                    )\n                }\n            )\n        })\n    };\n\n    groupToListItem = group => {\n        return group.map((item) => ({id: item, content: this.subjects.get(item)}))\n    }\n\n\n    addList = () => {\n        const lists = this.state.lists.concat([[]]);\n        const titles = this.state.titles.concat('אשכול מגמות');\n        this.setState({\n                lists: lists,\n                titles: titles\n            }\n        );\n        // this.render();\n    };\n\n    removeList = (id) => {\n        const removedList = this.state.lists[id];\n        const lists = Array.from(this.state.lists);\n        const titles = Array.from(this.state.titles);\n\n        lists.splice(id, 1);\n        titles.splice(id, 1);\n\n        lists[0] = lists[0].concat(removedList);\n\n        this.setState({\n                lists: lists,\n                titles: titles\n            }\n        );\n    }\n\n    getList = id => this.state.lists[parseInt(id)];\n\n    onDragEnd = result => {\n        const { source, destination } = result;\n\n        // dropped outside the list\n\n        if (!destination) {\n            return;\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            // Do nothing\n        } else {\n            const result = move(\n                this.getList(source.droppableId),\n                this.getList(destination.droppableId),\n                source,\n                destination\n            );\n            const lists = [...this.state.lists]\n            lists[source.droppableId] = result[source.droppableId]\n            lists[destination.droppableId] = result[destination.droppableId]\n            this.setState({\n                lists: lists\n            });\n        }\n    };\n\n    // Normally you would want to split things out into separate components.\n    getColumnContainer(index, title) {\n        return <ColumnContainer key={index}>\n            <SupTitle>{title} {index > 0 &&<span><FontAwesomeIcon icon={faTrashAlt} onClick={()=>{this.removeList(index)}}/></span>}</SupTitle>\n\n            <Droppable droppableId={index.toString()}>\n                {(provided, snapshot) => (\n                    <div\n                        ref={provided.innerRef}\n                        style={getListStyle(snapshot.isDraggingOver)}>\n                        {this.state.lists[index].map((item, index) => (\n                            <Draggable\n                                key={item.id}\n                                draggableId={item.id}\n                                index={index}>\n                                {(provided, snapshot) => (\n                                    <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}\n                                        style={getItemStyle(\n                                            snapshot.isDragging,\n                                            provided.draggableProps.style\n                                        )}>\n                                        {item.content}\n                                    </div>\n                                )}\n                            </Draggable>\n                        ))}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n        </ColumnContainer>;\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let newGroups = this.state.lists.map(gr => gr.map(v => v.id));\n        let no_pars = newGroups.shift()\n        let par_groups = newGroups.length === 0 ? [[]] : newGroups;\n\n        let isValid = true;\n        par_groups.forEach((group, i) => {\n            if (group.length === 1){\n                alert('אשכול מגמות לא יכול להכיל רק מקצוע אחד')\n                isValid = false;\n            }\n        })\n        if (isValid){\n            let msg = {\n                no_parallels: [no_pars],\n                parallel_groups: [par_groups],\n            };\n\n            axios.post(process.env.REACT_APP_API_URL + '/groupedSubjects', msg)\n                .then(response => response.json())\n                .catch(console.error);\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div id='root'>\n                    <DragDropContext onDragEnd={this.onDragEnd}>\n                        {this.state.titles.map(\n                            (item, i, key) => this.getColumnContainer(i, this.state.titles[i])\n                        )}\n\n                    </DragDropContext>\n                    <ColumnContainer><Button onClick={()=>{this.addList()}}>הוסף אשכול</Button></ColumnContainer>\n                </div>\n                <Button onClick={this.handleSubmit}>\n                    Send\n                </Button>\n            </div>\n        );\n    }\n}\nfunction mapStateToProps(state) {\n    const { subjects, session } = state;\n    const { isFetching, items } = subjects;\n    return {\n        sessionId: session.id,\n        subjects: items,\n        isFetching,\n    }\n}\n\nexport default connect(mapStateToProps)(Subjects);","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst styles = {\n    root: {\n        fontFamily:\n            '\"HelveticaNeue-Light\", \"Helvetica Neue Light\", \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif',\n        fontWeight: 300\n    },\n    header: {\n        backgroundColor: \"#03a9f4\",\n        color: \"white\",\n        padding: \"16px\",\n        fontSize: \"1.5em\"\n    }\n};\n\nconst MaterialTitlePanel = props => {\n    const rootStyle = props.style\n        ? { ...styles.root, ...props.style }\n        : styles.root;\n\n    return (\n        <div style={rootStyle}>\n            <div style={styles.header}>{props.title}</div>\n            {props.children}\n        </div>\n    );\n};\n\nMaterialTitlePanel.propTypes = {\n    style: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    children: PropTypes.object\n};\n\nexport default MaterialTitlePanel;\n","import axios from \"axios\";\nimport {Sleep, sortByName} from \"../utils/utils\";\n\nexport const REQUEST = 'REQUEST';\nexport const RECEIVE = 'RECEIVE';\nexport const SCHEDULE = 'SCHEDULE';\nexport const UNSCHEDULE = 'UNSCHEDULE';\nexport const RESET_SCHEDULE = 'RESET_SCHEDULE';\nexport const INIT_SESSION = 'INIT_SESSION';\n\nfunction FetchActionCreator(name, url) {\n\n    function request() {\n        return {\n            type: REQUEST+ '_' + name.toUpperCase(),\n        }\n    }\n\n    function receive(json, postprocessorFunction) {\n        return {\n            type: RECEIVE + '_' + name.toUpperCase(),\n            items: postprocessorFunction(json),\n            receivedAt: Date.now()\n        }\n    }\n\n    return function (paramsUrlAddition='', postprocessorFunction=(json)=>(json)) {\n        return dispatch => {\n            dispatch(request());\n            return fetch(url + paramsUrlAddition)\n                .then(response => response.json())\n                .then(json => dispatch(receive(json, postprocessorFunction)))\n        }\n    }\n\n}\n\n\nconst fetchSubjects = FetchActionCreator('Subjects', process.env.REACT_APP_API_URL + '/subjects',\n    sortByName)\nconst fetchClasses = FetchActionCreator('Classes', process.env.REACT_APP_API_URL + '/classes')\nconst fetchBlockers = FetchActionCreator('Blockers', process.env.REACT_APP_API_URL + '/blockers')\nconst fetchTests = FetchActionCreator('Tests', process.env.REACT_APP_API_URL + '/tests')\nconst fetchSessionInfo = FetchActionCreator('Session', process.env.REACT_APP_API_URL + '/sessioninfo')\n\n\nexport const fetchScheduledTests = FetchActionCreator('Schedule', process.env.REACT_APP_API_URL + '/currentscheduledtests')\nexport const fetchSavedSchedules = FetchActionCreator('ScheduleStore', process.env.REACT_APP_API_URL + '/schedulerstatestore')\n\nexport function fetchSession() {\n    return dispatch => {\n        dispatch({\n            type: INIT_SESSION,\n        })\n        dispatch(fetchSessionInfo());\n        dispatch(fetchSubjects());\n        dispatch(fetchClasses());\n        dispatch(fetchBlockers());\n        dispatch(fetchTests());\n        dispatch(fetchScheduledTests());\n        dispatch(fetchSavedSchedules());\n\n    }\n\n}\n\n\nexport const scheduleTest = (testId, date) => {\n    // return {\n    //   type: SCHEDULE,\n    //   testId,\n    //   date\n    // }scheduledTests\n    return dispatch => {\n        const msg = {\n            testid: testId.toString(),\n            date: date\n        }\n        return axios.post(process.env.REACT_APP_API_URL + '/scheduletest', msg)\n            .then(\n                dispatch(\n                    {\n                        type: SCHEDULE,\n                        id: testId,\n                        date: date\n                    }\n\n                )\n            )\n            .then(() => {\n                Sleep(1000);\n                return dispatch(fetchScheduledTests())\n            })\n    }\n\n}\n\nexport const unscheduleTest = (testId, date) => {\n    return dispatch => {\n        const msg = {\n            testid: testId.toString(),\n            date: date\n        }\n        return axios.post(process.env.REACT_APP_API_URL + '/unscheduletest', msg)\n            .then(\n                dispatch(\n                    {\n                        type: UNSCHEDULE,\n                        id: testId,\n                        date: date\n                    }\n\n                )\n            )\n            .then(() => {\n                Sleep(1000);\n                return dispatch(fetchScheduledTests())\n            })\n    }\n}\n\n\nexport const resetSchedule = () => {\n    return dispatch => {\n        const msg = {\n        }\n        return axios.post(process.env.REACT_APP_API_URL + '/resetschedule', msg)\n            .then(\n                dispatch(\n                    {\n                        type: UNSCHEDULE,\n                    }\n\n                )\n            )\n            .then(() => {\n                Sleep(1000);\n                return dispatch(fetchScheduledTests())\n            })\n    }\n}\n\n","import React from \"react\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\n\nexport const styles = {\n    sidebar: {\n        width: 300,\n        // marginLeft: '15%',\n        // paddingRight: '16px'\n        // height: \"100%\"\n    },\n    sidebarLink: {\n        display: \"block\",\n        padding: \"16px 0px\",\n        color: \"#757575\",\n        textDecoration: \"none\"\n    },\n    divider: {\n        margin: \"8px 0\",\n        height: 1,\n        backgroundColor: \"#757575\"\n    },\n    content: {\n        padding: \"16px\",\n        paddingTop: \"30px\",\n        paddingBottom: \"30px\",\n        // height: \"70%\",\n        backgroundColor: \"white\",\n        // marginLeft: '15%'\n    }\n};\n\nexport function Event({event}) {\n    const color = event.type === 'blocker' ? 'red' : 'blue';\n    return (\n        <>\n            <ContextMenuTrigger id={event.type + event.id.toString()}>\n                <div style={{backgroundColor: color, fontSize: '15px'}}>\n                    <strong>{event.title}</strong>\n                    {event.desc && ':  ' + event.desc}\n                </div>\n            </ContextMenuTrigger>\n        </>\n    )\n}\n\nexport function parseDateString(date) {\n    let d = new Date(date);\n    d.setHours(0, 0, 0, 0);\n    return d.getTime()\n}","import React, {Component} from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport class ModalForm extends Component<{ show: any, onHide: () => any }> {\n    render() {\n        return <Modal\n            size=\"lg\"\n            show={this.props.show}\n            onHide={this.props.onHide}\n            aria-labelledby=\"example-modal-sizes-title-lg\"\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"example-modal-sizes-title-lg\">\n                    {this.props.title}\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {this.props.children}\n            </Modal.Body>\n        </Modal>;\n    }\n}","import React from \"react\";\nimport {Button, Col, Form} from 'react-bootstrap';\nimport {formatDate, range} from \"../utils/utils\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\nimport {string} from \"prop-types\";\n\nclass BlockerForm extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        const numOfInstances = this.props.blockerToEdit ? this.props.blockerToEdit.startDates.length : 1;\n        this.state = {numOfInstances: numOfInstances}\n\n    }\n\n    getCurrentValue(fieldName){\n        if (this.props.blockerToEdit){\n            const blocker = this.props.blockerToEdit;\n            if (fieldName === 'name') {\n                return blocker['name'];\n            } else if (fieldName === 'participatingClasses') {\n                return blocker['participatingClasses'];\n            } else if (fieldName === 'participatingSubjects') {\n                return blocker['participatingSubjects'];\n            } else if (fieldName.startsWith('startDate')){\n                const ind = parseInt(fieldName.replace('startDate', ''));\n                return formatDate(blocker['startDates'][ind]);\n            } else if (fieldName.startsWith('endDate')){\n                const ind = parseInt(fieldName.replace('endDate', ''));\n                return formatDate(blocker['endDates'][ind]);\n            }\n        } else if (this.props.wantedDates){\n            if (fieldName.startsWith('startDate')) {\n                return this.props.wantedDates.start;\n            } else if (fieldName.startsWith('endDate')) {\n                return this.props.wantedDates.end;\n            }\n        }\n        return [];\n    }\n\n    render() {\n        return (\n            <Container style={{width: \"85%\"}}>\n                {/*<h1>הוספת אילוץ</h1>*/}\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Col md={12}>\n                            <Form.Group>\n                                <Form.Label>שם האילוץ</Form.Label>\n                                <Form.Control required type=\"text\" name=\"name\"\n                                              placeholder=\"שם האילוץ\" defaultValue={this.getCurrentValue('name')}/>\n\n\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n                    <Form.Row>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>כיתות משתתפות</Form.Label>\n                                <Form.Control required as=\"select\" multiple name=\"participatingClasses\"\n                                              defaultValue={this.getCurrentValue('participatingClasses')}>\n                                    {this.props.classes.map((s) => (\n                                        <option key={s.id} value={s.id}>{s.name}</option>\n                                    ))}\n\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>מקצועות משתתפים</Form.Label>\n                                <Form.Control required as=\"select\" multiple name=\"participatingSubjects\"\n                                              defaultValue={this.getCurrentValue('participatingSubjects')}>\n                                    {this.props.subjects.map((s) => (\n                                        <option key={s.id} value={s.id}>{s.name}</option>\n                                    ))}\n\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n\n                    {range(0, this.state.numOfInstances-1).map(i => {\n                        return (\n                            <Form.Row id={i}>\n                                <Col md={6}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>תאריך התחלה</Form.Label>}\n                                        <Form.Control required type=\"date\" name={\"startDate\" + i.toString()}\n                                                      min={this.props.minDate} max={this.props.maxDate}\n                                                      defaultValue={this.getCurrentValue(\"startDate\" + i.toString())}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col md={6}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>תאריך סיום</Form.Label>}\n                                        <Form.Control required type=\"date\" name={\"endDate\" + i.toString()}\n                                                      min={this.props.minDate} max={this.props.maxDate}\n                                                      defaultValue={this.getCurrentValue(\"endDate\" + i.toString())}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            </Form.Row>\n                        )\n                    })}\n\n\n                    <Form.Row>\n                        <Col md={3}>\n                            <Button onClick={(event) => {\n                                this.setState({numOfInstances: this.state.numOfInstances + 1});\n                            }}>הוסף מועד</Button>\n                        </Col>\n                        <Col md = {3}>\n                            {this.state.numOfInstances > 1 &&\n                            <Button onClick={(event) => {\n                                this.setState({numOfInstances: this.state.numOfInstances - 1})\n                            }}>מחק מועד</Button>}\n                        </Col>\n                    </Form.Row>\n\n\n\n                    <Form.Row>\n                        <Col md={3}>\n                            <Button type=\"Submit\">{this.props.blockerToEdit ? \"עדכן אילוץ\" : \"הוסף אילוץ\"}</Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </Container>\n        )\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        const msg = {\n            session: this.props.session.id,\n            name: e.target.name.value,\n            participatingClasses:  [[...e.target.participatingClasses.options].filter(o => o.selected).map(o => o.value)],\n            participatingSubjects:  [[...e.target.participatingSubjects.options].filter(o => o.selected).map(o => o.value)],\n            startDates: [range(0, this.state.numOfInstances-1)\n                .map( i => e.target['startDate' + i].value)],\n            endDates: [range(0, this.state.numOfInstances-1)\n                .map( i => e.target['endDate' + i].value)],\n        };\n        if (this.props.blockerToEdit){\n            msg['id'] = this.props.blockerToEdit.id;\n        }\n        axios.post(process.env.REACT_APP_API_URL + '/blockers', msg)\n            .catch(function (error) {\n                console.error(error);\n                alert(error);\n            })\n            .then(() => {\n                if (this.props.afterSend){\n                    this.props.afterSend()\n                }\n\n            })\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    session: state.session.items,\n    subjects : state.subjects.items,\n    classes : state.classes.items,\n\n    minDate: formatDate(state.session.items.startDate),\n    maxDate: formatDate(state.session.items.endDate),\n\n})\nexport default connect(mapStateToProps)(BlockerForm);","import React from \"react\";\nimport {Button, Col, Form} from 'react-bootstrap';\nimport {formatDate, range} from \"../utils/utils\";\nimport axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\nconst daysInWeek = {\n    0: \"ראשון\",\n    1: \"שני\",\n    2: \"שלישי\",\n    3: \"רביעי\",\n    4: \"חמישי\",\n    5: \"שישי\"\n}\n\nclass TestForm extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        const numOfOptionalTimes = this.props.testToEdit ? this.props.testToEdit['optionalDaysInWeek'].length : 1;\n        const numOfTests = this.props.testToEdit ? this.props.testToEdit['numOfTests'] : 1;\n        this.state = {numOfOptionalTimes: numOfOptionalTimes, numOfTests: numOfTests}\n    }\n\n    /*\ndaysGap: 5\ndifficulty: 5\nid: 28\nlabel: null\nmaxDate: \"2019-08-31\"\nminDate: \"2019-08-01\"\nname: \"היסטוריה\"\nnumOfTests: 2\noptionalDaysInWeek: (2) [0, 3]\noptionalEndHours: (2) [9, 9]\noptionalStartHours: (2) [1, 1]\nparticipatingClasses: [21]\nsubject: 29\n\n    */\n\n    getCurrentValue(fieldName){\n        if (this.props.testToEdit){\n            const test = this.props.testToEdit;\n            if (fieldName.startsWith('optionalDaysInWeek')) {\n                const ind = parseInt(fieldName.replace('optionalDaysInWeek', ''));\n                return test['optionalDaysInWeek'][ind];\n            } else if (fieldName.startsWith('optionalEndHours')) {\n                const ind = parseInt(fieldName.replace('optionalEndHours', ''));\n                return test['optionalEndHours'][ind];\n            } else if (fieldName.startsWith('optionalStartHours')) {\n                const ind = parseInt(fieldName.replace('optionalStartHours', ''));\n                return test['optionalStartHours'][ind];\n            } else {\n                return test[fieldName]\n            }\n        }\n    }\n\n    render() {\n        return (\n            <Container style={{width: \"85%\"}}>\n                {/*<h1>הוספת מבחן</h1>*/}\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Row>\n                        <Col md={6}>\n                            <Form.Group controlId=\"formGridSubject\">\n                                <Form.Label>נושא המבחן</Form.Label>\n                                <Form.Control required as=\"select\" name=\"subject\" defaultValue={this.getCurrentValue('subject')}>\n                                    {this.props.subjects.map((s) => (\n                                        <option key={s.id} value={s.id}>{s.name}</option>\n                                    ))}\n                                </Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId=\"label\">\n                                <Form.Label>תיאור (לא חובה)</Form.Label>\n                                <Form.Control type=\"text\" name=\"label\" defaultValue={this.getCurrentValue('label')}\n                                              placeholder=\"לדוגמא- בגרות פנימית / מתכונת\"/>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group controlId=\"formGridClasses\" style={{height: \"100%\"}}>\n                                <Form.Label>כיתות משתתפות</Form.Label>\n                                <Form.Control required as=\"select\" multiple name=\"participatingClasses\"\n                                              style={{height: \"80%\"}}\n                                              defaultValue={this.getCurrentValue('participatingClasses')}\n                                >\n                                    {this.props.classes.map((s) => (\n                                        <option key={s.id} value={s.id}>{s.name}</option>\n                                    ))}\n\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>מספר מבחנים</Form.Label>\n                                <Form.Control required as=\"select\" name=\"numOfTests\" onChange={(e) => {\n                                    this.setState({numOfTests: e.target.value})\n                                }} defaultValue={this.getCurrentValue('numOfTests')}>\n                                    <option value={1}>1</option>\n                                    <option value={2}>2</option>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        {this.state.numOfTests > 1 && (\n                            <Col md={6}>\n                                <Form.Group>\n                                    <Form.Label>מרווח מינימלי בין מבחנים</Form.Label>\n                                    <Form.Control required type=\"number\" name=\"daysGap\"\n                                                  defaultValue={\n                                                      this.props.testToEdit ?\n                                                          this.getCurrentValue('daysGap') :\n                                                          this.props.session.defaultGap\n                                                  } step={1}\n                                                  min={2} max={365} //TODO: Change max to the number of days in the interval\n                                    />\n                                </Form.Group>\n                            </Col>\n                        )}\n\n                    </Form.Row>\n                    <Form.Row>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>תאריך מינימלי</Form.Label>\n                                <Form.Control required type=\"date\" format=\"DD-MM-YYYY\" name=\"minDate\"\n                                              min={this.props.minDate} max={this.props.maxDate}\n                                              defaultValue={\n                                                  this.props.testToEdit ?\n                                                      this.getCurrentValue('minDate') :\n                                                      this.props.minDate\n                                              }/>\n                            </Form.Group>\n                        </Col>\n                        <Col md={6}>\n                            <Form.Group>\n                                <Form.Label>תאריך מקסימלי</Form.Label>\n                                <Form.Control required type=\"date\" format=\"DD-MM-YYYY\" name=\"maxDate\"\n                                              min={this.props.minDate} max={this.props.maxDate}\n                                              defaultValue={\n                                                  this.props.testToEdit ?\n                                                      this.getCurrentValue('maxDate') :\n                                                      this.props.maxDate\n\n                                              }/>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n\n                    {range(0, this.state.numOfOptionalTimes-1).map(i => {\n                        return (\n                            <Form.Row>\n                                <Col md={4}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>יום</Form.Label>}\n                                        <Form.Control required key={i} as=\"select\"\n                                                      name={\"optionalDaysInWeek\" + i.toString()}\n                                                      defaultValue={this.getCurrentValue(\"optionalDaysInWeek\" + i.toString())}\n                                        >\n                                            {Object.entries(daysInWeek).map(entry => (\n                                                <option value={entry[0]} key={entry[0]}>{entry[1]}</option>\n                                            ))}\n                                        </Form.Control>\n                                    </Form.Group>\n                                </Col>\n                                <Col md={4}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>שעת התחלה</Form.Label>}\n                                        <Form.Control required key={i} type=\"number\" name={\"optionalStartHours\" + i.toString()}\n                                                      defaultValue={\n                                                          this.props.testToEdit ?\n                                                              this.getCurrentValue(\"optionalStartHours\" + i.toString()) :\n                                                              this.props.session.startHour\n                                                      } step={1}\n                                                      min={this.props.session.startHour} max={this.props.session.endHour}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col md={4}>\n                                    <Form.Group>\n                                        {i === 0 && <Form.Label>שעת סיום</Form.Label>}\n                                        <Form.Control requiredkey={i} type=\"number\" name={\"optionalEndHours\" + i.toString()}\n                                                      step={1} defaultValue={\n                                                          this.props.testToEdit ?\n                                                              this.getCurrentValue(\"optionalEndHours\" + i.toString()) :\n                                                              this.props.session.endHour\n                                                      }\n                                                      min={this.props.session.startHour} max={this.props.session.endHour} //TODO: Change max to the number of days in the interval\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            </Form.Row>\n                        )\n                    })}\n\n                    <Form.Row>\n                        <Col md={3}>\n                            <Button onClick={(event) => {\n                                this.setState({numOfOptionalTimes: this.state.numOfOptionalTimes + 1});\n                            }}>הוסף מועד</Button>\n                        </Col>\n                        <Col md = {3}>\n                            {this.state.numOfOptionalTimes > 1 &&\n                            <Button onClick={(event) => {\n                                this.setState({numOfOptionalTimes: this.state.numOfOptionalTimes - 1})\n                            }}>מחק מועד</Button>}\n                        </Col>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Col md={3}>\n                            <Button type=\"Submit\">{this.props.testToEdit ? \"עדכן מבחן\" : \"הוסף מבחן\"}</Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </Container>\n        )\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        const msg = {\n            label: e.target.label.value,\n            session: this.props.session.id,\n            subject: e.target.subject.value,\n            participatingClasses:  [[...e.target.participatingClasses.options].filter(o => o.selected).map(o => o.value)],\n            numOfTests: e.target.numOfTests.value,\n            daysGap: this.state.numOfTests > 1 ? e.target.daysGap.value : 0,\n            minDate: e.target.minDate.value,\n            maxDate: e.target.maxDate.value,\n            optionalDaysInWeek: [range(0, this.state.numOfOptionalTimes-1)\n                .map( i => e.target['optionalDaysInWeek' + i].value)],\n            optionalStartHours: [range(0, this.state.numOfOptionalTimes-1)\n                .map( i => e.target['optionalStartHours' + i].value)],\n            optionalEndHours: [range(0, this.state.numOfOptionalTimes-1)\n                .map( i => e.target['optionalEndHours' + i].value)],\n            difficulty: 5, //TODO\n        }\n\n        if (this.props.testToEdit){\n            msg['id'] = this.props.testToEdit.id;\n        }\n\n        axios.post(process.env.REACT_APP_API_URL + '/tests', msg)\n            .catch(function (error) {\n                console.error(error);\n                alert(error);\n            })\n            .then(() => {\n                if (this.props.afterSend){\n                    this.props.afterSend()\n                }\n\n            })\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    session : state.session.items,\n    subjects : state.subjects.items,\n    classes : state.classes.items,\n    minDate: formatDate(state.session.items.startDate),\n    maxDate: formatDate(state.session.items.endDate),\n})\nexport default connect(mapStateToProps)(TestForm);\n","import React, {Component} from \"react\";\nimport BigCalendar from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"./ScheduleCalendar.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"./react-contextmenu.css\"\nimport Sidebar from \"react-sidebar\";\nimport axios from \"axios\";\n\nimport {connect} from \"react-redux\";\nimport List from \"react-list-select\";\nimport MaterialTitlePanel from \"./material_title_panel\";\nimport {\n    fetchSavedSchedules,\n    fetchScheduledTests,\n    fetchSession,\n    resetSchedule,\n    scheduleTest,\n    unscheduleTest\n} from \"../../actions\";\nimport {daysBetween, formatDate, isEmpty, Sleep} from \"../../utils/utils\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEraser, faLock, faPlus, faRobot, faSave} from \"@fortawesome/free-solid-svg-icons\";\nimport {Event, parseDateString, styles} from \"./helpers\";\nimport {ModalForm} from \"../ModalForm\";\nimport AddBlockers from \"../BlockerForm\";\nimport AddTests from \"../TestForm\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport {ContextMenu, MenuItem} from \"react-contextmenu\";\n\nconst localizer = BigCalendar.momentLocalizer(moment);\n\n\n\nclass ScheduleCalendar extends Component {\n    constructor(props) {\n        super(props);\n        this.props.dispatch(fetchSession());\n\n        this.state = {\n            optionalDays: [],\n            selectedTestId: null,\n            scheduledTests: [],\n            testEvents: [],\n\n            modalFormData: {\n                type: null,\n                props: null\n            },\n            blockerModalShow: false, testModalShow: false\n        };\n        this.customDayPropGetter = this.customDayPropGetter.bind(this)\n        this.SidebarContent = this.SidebarContent.bind(this)\n        this.closeModals = this.closeModals.bind(this)\n\n    }\n\n    closeModals() {\n        this.setState({blockerModalShow: false, testModalShow: false})\n        this.setState({modalFormData: {\n                type: null,\n                props: null\n            }})\n        this.props.dispatch(fetchSession())\n    }\n\n    componentDidMount(): void {\n        // this.props.dispatch(fetchScheduledTests(this.props.session.id))\n        // this.interval = setInterval(() => this.props.dispatch(fetchScheduledTests()), 1000);\n    }\n\n    componentWillUnmount() {\n        // clearInterval(this.interval);\n    }\n\n\n    SidebarContent = props => {\n        const style = props.style\n            ? { ...styles.sidebar, ...props.style }\n            : styles.sidebar;\n\n        let test_div = []\n        let test_div_ids = []\n        props.testsToSchedule.forEach( info => {\n            const test = info.test;\n            test_div_ids.push(test.id);\n            const numOfOptionalDates = info.optionalDates.length;\n            const color = numOfOptionalDates > 0 ? 'blue' : 'red';\n            test_div.push(\n                (<div className=\"test\">\n                    <div className=\"name\"><span style={{color: color}}>[{numOfOptionalDates}] </span>{test.name} - ({info.howManyLeft} מתוך {test.numOfTests})</div>\n                    <div className=\"classes\">\n                        {test.participatingClasses.map(cls => {\n                            return props.classesDict[cls] ? props.classesDict[cls].name : '';\n                        }).join(', ')}\n                    </div>\n                </div>)\n            )\n\n\n        });\n        let selectedTestIndInList = test_div_ids.indexOf(this.state.selectedTestId)\n        let list = (\n            <List\n                items={test_div}\n                selected={[selectedTestIndInList]}\n                disabled={[]}\n                multiple={false}\n                onChange={(selected) => {\n                    this.setState({\n                        selectedTestId: test_div_ids[selected],\n                    })\n                    fetch(process.env.REACT_APP_API_URL + '/finddate?' +\n                        'testid='+test_div_ids[selected].toString()\n                    )\n                        .then(response => response.json())\n                        .then(res => {\n                            // console.log(res)\n                            const days = res.map(date => {\n                                return parseDateString(date);\n                            });\n                            this.setState({\n                                optionalDays: days\n                            });\n                            if (res.length === 0){\n                                window.alert('לא נותרו תאריכים אפשריים למבחן זה')\n                            }\n\n                        })\n                        .catch(console.error)\n                }}\n            />)\n\n        return (\n            <MaterialTitlePanel title={\n                <>\n                    <div>\n                    <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faSave} onClick={() => {\n                            const name = prompt('בחר שם:')\n                            if (name.length > 0){\n                                axios.post(\n                                    process.env.REACT_APP_API_URL + '/schedulerstatestore',\n                                    {name}\n                                )\n                                    .then(() => Sleep(500))\n                                    .then(this.props.dispatch(fetchSavedSchedules()))\n                                    .catch(console.error)\n                            }\n                        }}/>\n                    </span>\n                        <span style={{margin: '15px'}}><FontAwesomeIcon icon={faEraser} onClick={()=>{this.props.dispatch(resetSchedule())}}/></span>\n                        <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faRobot} onClick={()=>{\n                            // const interval = setInterval(() => this.props.dispatch(fetchScheduledTests()), 300);\n                            fetch(process.env.REACT_APP_API_URL + '/runscheduler')\n                                .then(() => {\n                                    Sleep(300);\n                                    this.props.dispatch(fetchScheduledTests())\n                                })\n                                .catch(console.error)\n                        }}/>\n                    </span>\n                        <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faPlus} onClick={() => this.showTestForm()}/>\n                    </span>\n                        <span style={{margin: '15px'}}>\n                        <FontAwesomeIcon icon={faLock} onClick={() => this.showBlockerForm()}/>\n                    </span>\n                    </div>\n                </>\n\n            } style={style}>\n                <ModalForm title=\"הוסף אילוץ\"\n                           show={this.state.modalFormData.type === \"blocker\"}\n                           onHide={this.closeModals}>\n                    <AddBlockers afterSend={this.closeModals} {...this.state.modalFormData.props}/>\n                </ModalForm>\n                <ModalForm title=\"הוסף מבחן\"\n                           show={this.state.modalFormData.type === \"test\"}\n                           onHide={this.closeModals}>\n                    <AddTests afterSend={this.closeModals} {...this.state.modalFormData.props}/>\n                </ModalForm>\n\n\n                <div>\n                    <div>TODO: להווסיף פילטרים לפי כיתות ומקצועות</div>\n\n                    <div style={styles.divider} />\n                    {list}\n                    {/*<a href=\"index.html\" style={styles.sidebarLink}>*/}\n                    {/*    Home*/}\n                    {/*</a>*/}\n                    {/*<a href=\"responsive_example.html\" style={styles.sidebarLink}>*/}\n                    {/*</a>*/}\n                    {/*    Responsive Example*/}\n\n                </div>\n            </MaterialTitlePanel>\n        );\n    };\n\n    customDayPropGetter(date) {\n        if (this.state.optionalDays.includes(date.getTime())){\n            return {\n                className: 'special-day',\n                style: {\n                    border: 'solid 3px #afa',\n                },\n            }\n\n        }\n        else return {}\n    }\n\n\n\n    render() {\n        const sidebar = <this.SidebarContent testsToSchedule={this.props.testsToSchedule} classesDict={this.props.classesDict}/>;\n        const sidebarProps = {\n            sidebar,\n            docked: true,\n            sidebarClassName: \"custom-sidebar-class\",\n            contentId: \"custom-sidebar-content-id\",\n            open: true,\n            touch: true,\n            shadow: false,\n            pullRight: true,\n            transitions: true,\n        };\n        const startDate = moment(this.props.session.startDate);\n        const endDate = moment(this.props.session.endDate);\n\n        const result = [];\n\n        if (endDate.isBefore(startDate)) {\n            throw \"End date must be greated than start date.\"\n        }\n\n        while (startDate.isBefore(endDate)) {\n            result.push(startDate.format(\"YYYY-MM-01\"));\n            startDate.add(1, 'month');\n        }\n        // console.log(result)\n        return (\n            <Sidebar {...sidebarProps} styles={{root: {margin: '0 15px'}}} >\n                <MaterialTitlePanel title={\n                    <div>\n                        <span>רמת קושי: {this.props.scheduleDifficulty}</span>\n                        <ButtonToolbar>\n                            <DropdownButton id=\"dropdown-basic-button\"\n                                            variant=\"secondary\" title=\"עבור ללוח שמור\">\n                                {this.props.savedSchedules.map(savedSchedule => {\n                                    const daysPassed = daysBetween(new Date(), new Date(savedSchedule.dateSaved));\n                                    return (\n                                        <Dropdown.Item onSelect={() => (\n                                            this.props.dispatch(\n                                                fetchScheduledTests('?storeid=' + savedSchedule.storeid)\n                                            )\n                                        )}>{savedSchedule.name + \" - \" }\n                                            <em>{\"נשמר לפני \" + `${daysPassed}` + ' ימים'}</em>\n                                        </Dropdown.Item>\n                                    );\n                                })}\n                            </DropdownButton>\n                            <Button onClick={() => {\n                                fetch(process.env.REACT_APP_API_URL + '/debug').then(r =>\n                                    this.props.dispatch(fetchScheduledTests()))\n                            }}>שפר שיבוצים</Button>\n                            <Button onClick={() => {\n                                this.props.history.push(\"/selectsession\")\n                            }}>בחר לוח שנה אחר</Button>\n                        </ButtonToolbar>\n                    </div>\n                }>\n                    {result.map(date => (\n                        <div style={styles.content}>\n                            {this.getBigCalendar(new Date(date))}\n                        </div>\n                    ))}\n                </MaterialTitlePanel>\n                {\n                    this.props.testEvents.filter(event => event.id).map(event => (\n                        <ContextMenu id={event.type + event.id.toString()} rtl>\n                            <MenuItem onClick={() => this.showTestForm({\n                                testToEdit: this.props.testsDict[event.id]\n                            })}>\n                                <div>ערוך</div>\n                            </MenuItem>\n                            <MenuItem data={{foo: 'bar'}} onClick={console.log}>\n                                נעל\n                            </MenuItem>\n                            <MenuItem divider />\n                        </ContextMenu>\n                    ))}\n                {\n                    this.props.blockerEvents.map(event => (\n                        <ContextMenu id={event.type + event.id.toString()} rtl>\n                            <MenuItem onClick={() => this.showBlockerForm({\n                                blockerToEdit: this.props.blockersDict[event.id]\n                            })}>\n                                <div>ערוך</div>\n                            </MenuItem>\n                            <MenuItem onClick={() => {\n                                fetch(process.env.REACT_APP_API_URL + \"/blockers\", {\n                                    method: 'DELETE',\n                                    headers: {\n                                        'Content-Type': 'application/json',\n                                    },\n                                    body: JSON.stringify({id: event.id})\n                                })\n                                    .then(response => response.json())\n                                    .then(() => (this.props.dispatch(fetchSession())));\n\n                            }}>\n                                מחק\n                            </MenuItem>\n                            <MenuItem divider />\n                        </ContextMenu>\n                    ))\n                }\n\n            </Sidebar>\n        );\n    }\n\n    getBigCalendar(defaultDate) {\n        return <BigCalendar\n            selectable\n            localizer={localizer}\n            defaultDate={defaultDate}\n            defaultView=\"month\"\n            views={{month: true}}\n            events={[...this.props.blockerEvents, ...this.props.testEvents]}\n            style={{height: \"650px\"}}\n            startAccessor=\"start\"\n            endAccessor=\"end\"\n            onSelectEvent={(event, e) => {\n                if (event.type === 'test') {\n                    let date = event.start;\n                    date.setHours(0, 0, 0, 0);\n                    this.props.dispatch(unscheduleTest(event.id, date))\n                    this.setState({\n                        selectedTestId: null,\n                        optionalDays: []\n                    })\n                }\n            }}\n            onSelectSlot={(slotInfo) => {\n                if (this.state.selectedTestId !== null){\n                    const isAnOption = this.state.optionalDays.includes(parseDateString(slotInfo['start']));\n                    if (isAnOption) {\n                        this.props.dispatch(scheduleTest(this.state.selectedTestId, slotInfo.start))\n\n                        this.setState({\n                            selectedTestId: null,\n                            optionalDays: []\n                        })\n\n                    }\n                }\n                else {\n                    this.showBlockerForm({\n                        wantedDates: {\n                            start: formatDate(slotInfo.start),\n                            end: formatDate(slotInfo.end)\n                        }\n                    })\n                }\n            }}\n            components={{\n                event: Event\n            }}\n            dayPropGetter={this.customDayPropGetter}\n            rtl={true}\n\n        />;\n    }\n\n    showTestForm(testFormProps = null) {\n        this.setState({modalFormData: {\n                type: 'test',\n                props: testFormProps\n            }})\n    }\n\n    showBlockerForm(blockerFormProps = null) {\n        this.setState({modalFormData: {\n                type: 'blocker',\n                props: blockerFormProps\n            }})\n    }\n}\n\nconst mapStateToProps = (state) => {\n    let classesDict = state.classes.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    let testsDict = state.tests.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    let blockersDict = state.blockers.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    return ({\n        session: state.session.items,\n        subjects: state.subjects.items,\n        classes: state.classes.items,\n        blockers: state.blockers.items,\n        tests: state.tests.items,\n        classesDict,\n        testsDict,\n        blockersDict,\n        scheduleDifficulty: state.schedule.difficulty,\n        scheduledTests: state.schedule.scheduledTests,\n        savedSchedules: state.savedSchedules.items,\n        testsToSchedule: state.tests.items.map(\n            test => {\n                const alreadyScheduledCount = state.schedule.scheduledTests.filter(st => st.id === test.id).length;\n                const howManyNeeded = test.numOfTests;\n                if (howManyNeeded > alreadyScheduledCount){\n\n                    let unscheduledTestsOption = state.schedule.unscheduledTestsOptions[test.id];\n                    unscheduledTestsOption = unscheduledTestsOption ? unscheduledTestsOption : [];\n                    return {\n                        test: test,\n                        howManyLeft: howManyNeeded - alreadyScheduledCount,\n                        optionalDates: unscheduledTestsOption.map(parseDateString)\n                    }\n                }\n                else {\n                    return null;\n                }\n            }\n        ).filter(i => i != null),\n        blockerEvents:\n            state.blockers.items.reduce((ar, blocker) => {\n                ar = [...ar,\n                    ...blocker.startDates.map((_, i) => ({\n                        title: blocker.name,\n                        start: new Date(blocker.startDates[i]),\n                        end: new Date(blocker.endDates[i]),\n                        type: 'blocker',\n                        id: blocker.id\n                    }))\n                ];\n                return ar;\n            }, []),\n        testEvents:\n            state.schedule.scheduledTests.map(scheduledTestInfo => {\n                const id = scheduledTestInfo.id;\n                const date = scheduledTestInfo.date;\n                if (isEmpty(testsDict)){\n                    return []\n                }\n                const testToSchedule = testsDict[id];\n                return {\n                    title: testToSchedule.name + ' (' + testToSchedule.participatingClasses.map(cls => {\n                        return classesDict[cls] ? classesDict[cls].name : '';\n                    }).join(', ') + ')',\n                    start: new Date(date),\n                    end: new Date(date),\n                    type: 'test',\n                    id: id,\n                }\n            })\n    });\n}\n\nexport default connect(mapStateToProps)(ScheduleCalendar);","import React, {Component, Suspense} from \"react\";\nimport {DisplayRemoteData, sortByName} from \"../../utils/utils\";\n\nclass ApiList extends Component<{ parserFunction: (s?: any) => any }> {\n    render() {\n        return <div>\n            <h1>{this.props.name}</h1>\n            <ul>\n                <Suspense fallback={<li></li>}>\n                    <DisplayRemoteData\n                        url={this.props.url}\n                        preProcess={sortByName}\n                        parserFunction={(s) => (\n                            <div>\n                                <li>{s.name}</li>\n\n                                <ul>\n                                    {Object.entries(s).map(i => (\n                                        i[0] !== \"name\" && <li>{i[0]} : {i[1]}</li>\n                                    ))}\n                                </ul>\n                            </div>\n                        )}/>\n                </Suspense>\n            </ul>\n        </div>;\n    }\n}\n\nexport default function Home() {\n    return (\n        <div>\n            <ApiList name=\"סשנים\" url={process.env.REACT_APP_API_URL + \"/sessionslist\"}/>\n        </div>\n    )\n}","import React from \"react\";\nimport axios from 'axios/index';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { connect } from 'react-redux'\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\n// import Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport {fetchSession} from \"../actions\";\n\nclass SetupSession extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            subjects: ['קוסמות', 'שיקויים'], classes: ['א1', 'א2'],\n            defaults: {\n                sessionName: '',\n                minDate: '2019-01-01', maxDate: '2019-05-01', daysGap: 30, numOfHours: 1, isZeroHour: false\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            defaults: {...this.state.defaults, [name]: value}\n        });\n    }\n\n    sendSession = (e) => {\n        e.preventDefault();\n        const msg = {\n            subjects: [this.state.subjects],\n            classes: [this.state.classes],\n            ...this.state.defaults\n        }\n        axios.post(process.env.REACT_APP_API_URL + '/initsession', msg)\n            .then(res => res.data)\n            .then(res => this.props.dispatch(fetchSession(res.session)))\n            .then(() => this.props.history.push('/subjects'))\n            .catch(console.error);\n    }\n\n\n    render(){\n        const DefaultsForm = <Form>\n            <Form.Row>\n                <Col md={12}>\n                    <Form.Group>\n                        <Form.Label>כינוי</Form.Label>\n                        <Form.Control type=\"text\" required\n                                      value={this.state.sessionName} name=\"sessionName\"\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Label>תאריך התחלה</Form.Label>\n                        <Form.Control required type=\"date\"\n                                      value={this.state.defaults.minDate} name=\"minDate\"\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Label>תאריך סיום</Form.Label>\n                        <Form.Control required type=\"date\" value={this.state.defaults.maxDate} name=\"maxDate\"\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n            </Form.Row>\n            <Form.Row>\n                <Col md={6}>\n                    <Form.Group >\n                        <Form.Label>מרווח מינימלי בין מבחנים באותו המקצוע</Form.Label>\n                        <Form.Control required type=\"number\" name=\"daysGap\" value={this.state.defaults.daysGap}\n                                      step={1}\n                                      min={2} max={365} //TODO: Change max to the number of days in the interval\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n            </Form.Row>\n            <Form.Row>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Label>מספר שעות ביום</Form.Label>\n                        <Form.Control required type=\"number\" name=\"numOfHours\"\n                                      value={this.state.defaults.numOfHours} min={1}\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n            </Form.Row>\n            <Form.Row>\n                <Col md={6}>\n                    <Form.Group>\n                        <Form.Check name=\"isZeroHour\" type=\"checkbox\" checked={this.state.defaults.isZeroHour}\n                                    label=\"יש שעת אפס\"\n                                      onChange={this.handleInputChange}\n                        />\n                    </Form.Group>\n                </Col>\n\n\n            </Form.Row>\n        </Form>;\n        return(\n            <Container style={{width: \"70%\"}}>\n                <h1>הגדרות</h1>\n\n                {/*<Accordion defaultActiveKey=\"2\">*/}\n                    <Card>\n                        {/*<Accordion.Toggle as={Card.Header} eventKey=\"2\">*/}\n                            <h2>הגדרות כלליות</h2>\n                        {/*</Accordion.Toggle>*/}\n                        {/*<Accordion.Collapse eventKey=\"2\">*/}\n                            <Card.Body>\n                                {DefaultsForm}\n                            </Card.Body>\n                        {/*</Accordion.Collapse>*/}\n                    </Card>\n                    <Card>\n                        {/*<Accordion.Toggle as={Card.Header} eventKey=\"0\">*/}\n                            <h2>כיתות</h2>\n                        {/*</Accordion.Toggle>*/}\n                        {/*<Accordion.Collapse eventKey=\"0\">*/}\n                            <Card.Body>\n                                <List title=\"כיתות\" sendText=\"הוסף כיתה\"\n                                      setParentList={list => this.setState({classes: list})}/>\n                            </Card.Body>\n                        {/*</Accordion.Collapse>*/}\n                    </Card>\n                    <Card>\n                        {/*<Accordion.Toggle as={Card.Header} eventKey=\"1\">*/}\n                            <h2>מקצועות</h2>\n                        {/*</Accordion.Toggle>*/}\n                        {/*<Accordion.Collapse eventKey=\"1\">*/}\n                            <Card.Body>\n                                <List title=\"מקצועות\" sendText=\"הוסף מקצוע\"\n                                      setParentList={list => this.setState({subjects: list})}/>\n                            </Card.Body>\n                        {/*</Accordion.Collapse>*/}\n                    </Card>\n\n                    <Button onClick={this.sendSession}>שמור והמשך להגדרת אשכלות</Button>\n                {/*// </Accordion>*/}\n\n\n            </Container>\n        )\n    }\n}\n\nclass List extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {text: '', list:[]};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        // this.props.dispatch(fetchSubjects);\n    }\n\n\n    render() {\n        return (\n            <div>\n                {/*<h2>{this.props.title}</h2>*/}\n                <ul>\n                    {this.state.list.map((item, idx) => {\n                        return <li key={`item-${idx}`}>{item}</li>\n                    })}\n                </ul>\n                <form>\n                    <input\n                        id=\"new-todo\"\n                        onChange={this.handleChange}\n                        value={this.state.text}\n                    />\n                    <Button type=\"submit\" onClick={this.handleSubmit}>\n                        {this.props.sendText}\n                    </Button>\n                </form>\n            </div>\n        )\n    }\n\n    handleChange(e) {\n        this.setState({ text: e.target.value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        if (!this.state.text.length) {\n            return;\n        }\n        const newList = [...this.state.list, this.state.text]\n        this.setState({list: newList})\n        this.props.setParentList(newList)\n        this.setState(() => ({\n            text: ''\n        }));\n\n\n    }\n\n}\n\nconst mapStateToProps = (state) => ({\n    // subjects : state.subjects.items\n})\n\nexport default connect(mapStateToProps)(SetupSession);","import React, {Component} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport {Link} from \"react-router-dom\";\nimport {fetchSession} from \"../../actions\";\nimport axios from \"axios\";\n\nfunction sendSelectSession(sessionId){\n    const msg = {session: sessionId}\n    return axios.post(process.env.REACT_APP_API_URL + '/selectsession', msg)\n        .catch(console.error)\n}\n\n\nexport class SessionCard extends Component<{}> {\n    render() {\n        const session = this.props.session;\n        return <div>\n            <Card style={{width: \"30%\"}}>\n                <Card.Body>\n                    <Card.Title>{session.info.name}</Card.Title>\n                    {/*<Card.Subtitle className=\"mb-2 text-muted\">Card Subtitle</Card.Subtitle>*/}\n                    <Card.Text>\n                        <strong>כיתות: </strong>\n                        {session.classes.map(cls => cls.name).join(', ')}\n                    </Card.Text>\n                    <Card.Text>\n                        <strong>מקצועות: </strong>\n                        {session.subjects.map(cls => cls.name).join(', ')}\n                    </Card.Text>\n                    <Card.Text>\n                        {/*<strong>מקצועות: </strong>*/}\n                        מתחיל ב- {new Date(session.info.startDate).toLocaleDateString('he-IL')}\n                        &nbsp;\n                        ונגמר ב- {new Date(session.info.endDate).toLocaleDateString('he-IL')}\n                    </Card.Text>\n                    <Card.Text style={{color: 'red'}}>\n                        להוסיף גם שעות ומרווח\n                    </Card.Text>\n                    <Card.Text>\n                        <Link to='/calendar' onClick={() => {\n                            sendSelectSession(session.info.id)\n                                .then(() => this.props.dispatch(fetchSession()))\n                        }}>\n                            בחר לוח מבחנים\n                        </Link>\n                    </Card.Text>\n                    <Card.Text>\n                        <Link to=\"#\">\n                            שכפל וערוך\n                        </Link>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>;\n    }\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport {SessionCard} from \"./Cards/SessionCard\";\n\n\nclass SelectSession extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            sessions: []\n        };\n        fetch(process.env.REACT_APP_API_URL + '/sessionslist')\n            .then(res => res.json())\n            // .then(console.log)\n            .then(sessions => this.setState({sessions: sessions}))\n        // .then(sessions => sessions.map(sess => ))\n    }\n\n    render() {\n        return (\n            <Container>\n                <div>\n                    <Button variant=\"primary\" size=\"lg\" active\n                            onClick={()=>this.props.history.push(\"/sessionsetup\")}\n                    >\n                        צור לוח מבחנים חדש\n                    </Button>\n                </div>\n                <div>\n                    או המשך עבודה על לוח קיים\n                </div>\n                <div>\n                {this.state.sessions.map(sess => <SessionCard dispatch={this.props.dispatch} key={sess.info.id} session={sess}/>)}\n                </div>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    // subjects : state.subjects.items\n})\n\nexport default connect(mapStateToProps)(SelectSession);","import React, {Component} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport {connect} from \"react-redux\";\nimport AddBlockers from \"./BlockerForm\";\nimport AddTests from \"./TestForm\";\nimport {fetchSession} from \"../actions\";\nimport ScheduleCalendar from \"./ScheduleCalendar/ScheduleCalendar\";\nimport {ModalForm} from \"./ModalForm\";\n\nclass SessionHome extends Component {\n    constructor(props){\n        super(props);\n        console.warn('REMOVE HARD CODED ID');\n        this.props.dispatch(fetchSession()); //FIXME\n\n\n        this.state = {blockerModalShow: false, testModalShow: false}\n        this.closeModals = this.closeModals.bind(this)\n    }\n\n    closeModals() {\n        this.setState({blockerModalShow: false, testModalShow: false})\n        this.props.dispatch(fetchSession())\n    }\n\n\n    render() {\n        // if (this.props.session.length){\n        //     console.log('hey')\n        //     this.props.history.push('/selectsession')\n        // }\n        return (\n            <div>\n                <h1>{this.props.session.name}</h1>\n\n                <ModalForm title=\"הוסף אילוץ\"\n                           show={this.state.blockerModalShow}\n                           onHide={this.closeModals}>\n                    <AddBlockers afterSend={this.closeModals}/>\n                </ModalForm>\n                <ModalForm title=\"הוסף מבחן\"\n                           show={this.state.testModalShow}\n                           onHide={this.closeModals}>\n                    <AddTests afterSend={this.closeModals}/>\n                </ModalForm>\n\n                <div>\n                    <Button variant=\"primary\" onClick={() => this.setState({blockerModalShow: true})}>\n                        הוסף אילוץ</Button>\n                    <Button variant=\"primary\" onClick={() => this.setState({testModalShow: true})}>\n                        הוסף מבחן</Button>\n                </div>\n                {/*<h2>מבחנים</h2>*/}\n                {/*<div style={{marginRight: '5px'}}>*/}\n                {/*    {sortByName(this.props.tests).map(test => (*/}\n                {/*        <div>*/}\n                {/*            <h4>{test.name} </h4>*/}\n                {/*            <ul style={{marginRight: '10px'}}>*/}\n                {/*                <li><strong>כיתות: </strong>*/}\n                {/*                    {test.participatingClasses.map(cls => {*/}\n                {/*                        return this.props.classesDict[cls] ?*/}\n                {/*                            this.props.classesDict[cls].name : '';*/}\n                {/*                    }).join(', ')}*/}\n                {/*                </li>*/}\n                {/*            </ul>*/}\n                {/*        </div>*/}\n                {/*    ))}*/}\n                {/*</div>*/}\n\n                {/*<h2>אילוצים</h2>*/}\n                {/*<div style={{marginRight: '5px'}}>*/}\n                {/*    {sortByName(this.props.blockers).map(blocker => (*/}\n                {/*        <div>*/}\n                {/*            <h4>{blocker.name} </h4>*/}\n                {/*            <ul style={{marginRight: '10px'}}>*/}\n                {/*                <li><strong>כיתות: </strong>*/}\n                {/*                    {blocker.participatingClasses.map(cls => {*/}\n                {/*                        return this.props.classesDict[cls] ?*/}\n                {/*                            this.props.classesDict[cls].name : '';*/}\n                {/*                    }).join(', ')}*/}\n                {/*                </li>*/}\n\n                {/*            </ul>*/}\n                {/*        </div>*/}\n                {/*    ))}*/}\n                {/*</div>*/}\n                <ScheduleCalendar session={this.props.session}/>\n\n\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    let classesDict = state.classes.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    let testsDict = state.tests.items.reduce((o, cur) => ({...o, [cur.id]: cur}), {});\n    return ({\n        session: state.session.items,\n        subjects: state.subjects.items,\n        classes: state.classes.items,\n        blockers: state.blockers.items,\n        tests: state.tests.items,\n        classesDict: classesDict,\n        testsDict: testsDict,\n    });\n}\n\n\n\n\nexport default connect(mapStateToProps)(SessionHome)","import React, {Component} from \"react\";\nimport { connect } from 'react-redux'\nimport {HashRouter, Switch, Route, Link} from \"react-router-dom\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Container from 'react-bootstrap/Container'\nimport './App.css'\nimport Subjects from \"../Subjects/Subjects\";\nimport ScheduleCalendar from \"../ScheduleCalendar/ScheduleCalendar\";\nimport AddTests from \"../TestForm\";\nimport Home from \"../Home/Home\";\nimport PropTypes from \"prop-types\";\nimport AddBlockers from \"../BlockerForm\";\nimport SessionSetup from \"../SetupSession\";\nimport SelectSession from \"../SelectSession\";\nimport SessionHome from \"../SessionHome\";\n\nclass NavRouterLink extends Component<{}> {\n    render() {\n        return <Link to={this.props.to}><Nav.Item className=\"nav-link\">{this.props.children}</Nav.Item></Link>;\n    }\n}\n\nclass AsyncApp extends Component{\n    componentDidMount(): void {\n    }\n\n    render() {\n        return(\n            <Container>\n                <HashRouter basename={'/'}>\n                    <div style={{alignItems: \"\"}}>\n                        <li><Link to=\"/\">Home</Link></li>\n                        <li><Link to=\"/selectsession\">selectsession</Link></li>\n                        {/*<nav>*/}\n                        {/*    <Navbar bg=\"light\" variant=\"light\">*/}\n                        {/*        <Navbar.Brand href=\"/selectsession\">החלף לוח מבחנים</Navbar.Brand>*/}\n                        {/*        <Nav className=\"mr-auto\">*/}\n                        {/*            <NavRouterLink to=\"/session\">סשן</NavRouterLink>*/}\n                        {/*            <NavRouterLink to=\"/addtests\">הגדרת מבחנים</NavRouterLink>*/}\n                        {/*            <NavRouterLink to=\"/addblockers\">הגדרת אילוצים</NavRouterLink>*/}\n                        {/*            <NavRouterLink to=\"/calendar\">שיבוצים</NavRouterLink>*/}\n                        {/*        </Nav>*/}\n                        {/*    </Navbar>*/}\n                        {/*</nav>*/}\n                        <hr />\n                        <Switch>\n                            <Route exact path=\"/\" component={SelectSession}/>\n                            <Route path=\"/home\" component={Home}/>\n                            <Route path=\"/subjects\" component={Subjects}/>\n                            <Route path=\"/calendar\" component={ScheduleCalendar}/>\n                            <Route path=\"/addtests\" component={AddTests}/>\n                            <Route path=\"/addblockers\" component={AddBlockers}/>\n                            <Route path=\"/sessionsetup\" component={SessionSetup}/>\n                            <Route path=\"/selectsession\" component={SelectSession}/>\n                            <Route path=\"/session\" component={SessionHome}/>\n                            <Route component={() => (<div>404 Not found </div>)} />\n                        </Switch>\n                    </div>\n                </HashRouter>\n\n            </Container>\n        )\n    }\n}\n\nAsyncApp.propTypes = {\n    items: PropTypes.array.isRequired,\n    isFetching: PropTypes.bool.isRequired,\n    dispatch: PropTypes.func.isRequired\n}\n\nfunction mapStateToProps(state) {\n    const { subjects, session } = state\n    const { isFetching, items } = subjects\n    return {\n        session,\n        items,\n        isFetching,\n    }\n}\n\n\nexport default connect(mapStateToProps)(AsyncApp)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. ScheduleCalendar is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport {\n    // INIT_SESSION,\n    RECEIVE,\n    REQUEST,\n    SCHEDULE,\n    UNSCHEDULE\n} from \"../actions\";\n\nfunction ReducerCreator(name){\n    return function (\n        state = {\n            isFetching: false,\n            items: []\n        },\n        action\n    ) {\n        switch (action.type) {\n            case REQUEST + '_' + name.toUpperCase():\n                return Object.assign({}, state, {\n                    isFetching: true,\n                })\n            case RECEIVE + '_' + name.toUpperCase():\n                return Object.assign({}, state, {\n                    isFetching: false,\n                    items: action.items,\n                    lastUpdated: action.receivedAt\n                })\n            default:\n                return state\n        }\n    }\n\n}\n\nfunction schedulerState (\n    state = {\n        isFetching: false,\n        scheduledTests: [],\n        unscheduledTestsOptions: {},\n        difficulty: 0,\n        horizon: true\n    },\n    action\n)\n{\n    // console.log(action);\n    switch (action.type) {\n        case SCHEDULE:\n            return Object.assign({}, state, {\n                scheduledTests: [\n                    ...state.scheduledTests,\n                    {id: action.id, date: action.date}\n                ],\n            })\n        case UNSCHEDULE:\n            return Object.assign({}, state, {\n                scheduledTests: [\n                    ...state.scheduledTests.filter(st => {\n                        return (st.id !== action.id ||\n                            st.date.toString() !== action.date.toString());\n                    })\n                ],\n            })\n        case REQUEST + '_SCHEDULE':\n            return Object.assign({}, state, {\n                isFetching: true,\n            })\n        case RECEIVE + '_SCHEDULE':\n            return Object.assign({}, state, {\n                isFetching: false,\n                difficulty: action.items.difficulty,\n                scheduledTests: action.items.scheduledTests.map(item => {\n                    const date = new Date(item.date);\n                    date.setHours(0,0,0,0)\n                    return ({id: item.id, date: date});\n                }),\n                unscheduledTestsOptions: action.items.unscheduledTestsOptions,\n                // lastUpdated: action.receivedAt\n            })\n\n        default:\n            return state\n\n    }\n}\n\n// function session(state = {id: null}, action) {\n//     if (action.type === INIT_SESSION) {\n//         console.log(action)\n//         return Object.assign({}, state, {\n//             id: action.sessionId,\n//         })\n//     } else {\n//         return state;\n//     }\n// }\n\nexport default combineReducers({\n    session: ReducerCreator('Session'),\n    subjects: ReducerCreator('Subjects'),\n    classes : ReducerCreator('Classes'),\n    blockers : ReducerCreator('Blockers'),\n    tests : ReducerCreator('Tests'),\n    savedSchedules : ReducerCreator('ScheduleStore'),\n    // scheduledTests : ReducerCreator('Scheduled_Tests'),\n    schedule: schedulerState\n})","import {createStore, applyMiddleware, compose} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport rootReducer from './reducers'\n\nconst loggerMiddleware = createLogger()\n\nexport default function configureStore(preloadedState) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  // const store = createStore(reducer, /* preloadedState, */ composeEnhancers(\n\n  return createStore(\n      rootReducer,\n      preloadedState,\n      composeEnhancers(\n      applyMiddleware(thunkMiddleware, loggerMiddleware)\n      )\n  )\n}\n\n","import 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore()\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}